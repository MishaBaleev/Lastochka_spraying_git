{"ast":null,"code":"/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n */\n\nconst THREE = require(\"./three.js\");\nconst CameraSync = require(\"./camera/CameraSync.js\");\nconst utils = require(\"./utils/utils.js\");\nconst SunCalc = require(\"./utils/suncalc.js\");\nconst ThreeboxConstants = require(\"./utils/constants.js\");\nconst Objects = require(\"./objects/objects.js\");\nconst material = require(\"./utils/material.js\");\nconst sphere = require(\"./objects/sphere.js\");\nconst extrusion = require(\"./objects/extrusion.js\");\nconst label = require(\"./objects/label.js\");\nconst tooltip = require(\"./objects/tooltip.js\");\nconst loader = require(\"./objects/loadObj.js\");\nconst Object3D = require(\"./objects/Object3D.js\");\nconst line = require(\"./objects/line.js\");\nconst tube = require(\"./objects/tube.js\");\nconst LabelRenderer = require(\"./objects/LabelRenderer.js\");\nconst BuildingShadows = require(\"./objects/effects/BuildingShadows.js\");\nfunction Threebox(map, glContext, options) {\n  this.init(map, glContext, options);\n}\n;\nThreebox.prototype = {\n  repaint: function () {\n    this.map.repaint = true;\n  },\n  /**\r\n   * Threebox constructor init method\r\n   * @param {mapboxgl.map} map\r\n   * @param {WebGLRenderingContext} glContext\r\n   * @param {defaultOptions} options\r\n   */\n  init: function (map, glContext, options) {\n    // apply starter options\n    this.options = utils._validate(options || {}, defaultOptions);\n    this.map = map;\n    this.map.tb = this; //[jscastro] needed if we want to queryRenderedFeatures from map.onload\n\n    this.objects = new Objects();\n    this.mapboxVersion = parseFloat(this.map.version);\n\n    // Set up a THREE.js scene\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      preserveDrawingBuffer: options.preserveDrawingBuffer,\n      canvas: map.getCanvas(),\n      context: glContext\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.map.getCanvas().clientWidth, this.map.getCanvas().clientHeight);\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.renderer.autoClear = false;\n\n    // [jscastro] set labelRendered\n    this.labelRenderer = new LabelRenderer(this.map);\n    this.scene = new THREE.Scene();\n    this.world = new THREE.Group();\n    this.world.name = \"world\";\n    this.scene.add(this.world);\n    this.objectsCache = new Map();\n    this.zoomLayers = [];\n    this.fov = this.options.fov;\n    this.orthographic = this.options.orthographic || false;\n\n    //raycaster for mouse events\n    this.raycaster = new THREE.Raycaster();\n    this.raycaster.layers.set(0);\n    //this.raycaster.params.Points.threshold = 100;\n\n    this.mapCenter = this.map.getCenter();\n    this.mapCenterUnits = utils.projectToWorld([this.mapCenter.lng, this.mapCenter.lat]);\n    this.lightDateTime = new Date();\n    this.lightLng = this.mapCenter.lng;\n    this.lightLat = this.mapCenter.lat;\n    this.sunPosition;\n    this.rotationStep = 5; // degrees step size for rotation\n    this.gridStep = 6; // decimals to adjust the lnglat grid step, 6 = 11.1cm\n    this.altitudeStep = 0.1; // 1px = 0.1m = 10cm\n    this.defaultCursor = 'default';\n    this.lights = this.initLights;\n    if (this.options.defaultLights) this.defaultLights();\n    if (this.options.realSunlight) this.realSunlight(this.options.realSunlightHelper);\n    this.skyLayerName = 'sky-layer';\n    this.terrainSourceName = 'mapbox-dem';\n    this.terrainExaggeration = 1.0;\n    this.terrainLayerName = '';\n    this.enableSelectingFeatures = this.options.enableSelectingFeatures || false;\n    this.enableSelectingObjects = this.options.enableSelectingObjects || false;\n    this.enableDraggingObjects = this.options.enableDraggingObjects || false;\n    this.enableRotatingObjects = this.options.enableRotatingObjects || false;\n    this.enableTooltips = this.options.enableTooltips || false;\n    this.multiLayer = this.options.multiLayer || false;\n    this.enableHelpTooltips = this.options.enableHelpTooltips || false;\n    this.map.on('style.load', function () {\n      this.tb.zoomLayers = [];\n      //[jscastro] if multiLayer, create a by default layer in the map, so tb.update won't be needed in client side to avoid duplicating calls to render\n      if (this.tb.options.multiLayer) this.addLayer({\n        id: \"threebox_layer\",\n        type: 'custom',\n        renderingMode: '3d',\n        map: this,\n        onAdd: function (map, gl) {},\n        render: function (gl, matrix) {\n          this.map.tb.update();\n        }\n      });\n      this.once('idle', () => {\n        this.tb.setObjectsScale();\n      });\n      if (this.tb.options.sky) {\n        this.tb.sky = true;\n      }\n      if (this.tb.options.terrain) {\n        this.tb.terrain = true;\n      }\n      let rasterLayers = ['satellite', 'mapbox-mapbox-satellite', 'satelliteLayer'];\n      rasterLayers.forEach(l => {\n        if (this.getLayer(l)) this.tb.terrainLayerName = l;\n      });\n    });\n\n    //[jscastro] new event map on load\n    this.map.on('load', function () {\n      //[jscastro] new fields to manage events on map\n      this.selectedObject; //selected object through click\n      this.selectedFeature; //selected state id for extrusion layer features\n      this.draggedObject; //dragged object through mousedown + mousemove\n      let draggedAction; //dragged action to notify frontend\n      this.overedObject; //overed object through mouseover\n      this.overedFeature; //overed state for extrusion layer features\n\n      let canvas = this.getCanvasContainer();\n      this.getCanvasContainer().style.cursor = this.tb.defaultCursor;\n      // Variable to hold the starting xy coordinates\n      // when 'mousedown' occured.\n      let start;\n\n      //when object selected\n      let startCoords = [];\n      let lngDiff; // difference between cursor and model left corner\n      let latDiff; // difference between cursor and model bottom corner\n      let altDiff; // difference between cursor and model height\n      let rotationDiff;\n\n      // Return the xy coordinates of the mouse position\n      function mousePos(e) {\n        var rect = canvas.getBoundingClientRect();\n        return {\n          x: e.originalEvent.clientX - rect.left - canvas.clientLeft,\n          y: e.originalEvent.clientY - rect.top - canvas.clientTop\n        };\n      }\n      this.unselectObject = function () {\n        //deselect, reset and return\n        this.selectedObject.selected = false;\n        this.selectedObject = null;\n      };\n      this.outObject = function () {\n        this.overedObject.over = false;\n        this.overedObject = null;\n      };\n      this.unselectFeature = function (f) {\n        if (typeof f.id == 'undefined') return;\n        this.setFeatureState({\n          source: f.source,\n          sourceLayer: f.sourceLayer,\n          id: f.id\n        }, {\n          select: false\n        });\n        this.removeTooltip(f);\n        f = this.queryRenderedFeatures({\n          layers: [f.layer.id],\n          filter: [\"==\", ['id'], f.id]\n        })[0];\n        // Dispatch new event f for unselected\n        if (f) this.fire('SelectedFeatureChange', {\n          detail: f\n        });\n        this.selectedFeature = null;\n      };\n      this.selectFeature = function (f) {\n        this.selectedFeature = f;\n        this.setFeatureState({\n          source: this.selectedFeature.source,\n          sourceLayer: this.selectedFeature.sourceLayer,\n          id: this.selectedFeature.id\n        }, {\n          select: true\n        });\n        this.selectedFeature = this.queryRenderedFeatures({\n          layers: [this.selectedFeature.layer.id],\n          filter: [\"==\", ['id'], this.selectedFeature.id]\n        })[0];\n        this.addTooltip(this.selectedFeature);\n        // Dispatch new event SelectedFeature for selected\n        this.fire('SelectedFeatureChange', {\n          detail: this.selectedFeature\n        });\n      };\n      this.outFeature = function (f) {\n        if (this.overedFeature && typeof this.overedFeature != 'undefined' && this.overedFeature.id != f) {\n          map.setFeatureState({\n            source: this.overedFeature.source,\n            sourceLayer: this.overedFeature.sourceLayer,\n            id: this.overedFeature.id\n          }, {\n            hover: false\n          });\n          this.removeTooltip(this.overedFeature);\n          this.overedFeature = null;\n        }\n      };\n      this.addTooltip = function (f) {\n        if (!this.tb.enableTooltips) return;\n        let coordinates = this.tb.getFeatureCenter(f);\n        let t = this.tb.tooltip({\n          text: f.properties.name || f.id || f.type,\n          mapboxStyle: true,\n          feature: f\n        });\n        t.setCoords(coordinates);\n        this.tb.add(t, f.layer.id);\n        f.tooltip = t;\n        f.tooltip.tooltip.visible = true;\n      };\n      this.removeTooltip = function (f) {\n        if (f.tooltip) {\n          f.tooltip.visibility = false;\n          this.tb.remove(f.tooltip);\n          f.tooltip = null;\n        }\n      };\n      map.onContextMenu = function (e) {\n        alert('contextMenu'); //TODO: implement a callback\n      };\n\n      // onclick function\n      this.onClick = function (e) {\n        let intersectionExists;\n        let intersects = [];\n        if (map.tb.enableSelectingObjects) {\n          //raycast only if we are in a custom layer, for other layers go to the else, this avoids duplicated calls to raycaster\n          intersects = this.tb.queryRenderedFeatures(e.point);\n        }\n        intersectionExists = typeof intersects[0] == 'object';\n        // if intersect exists, highlight it\n        if (intersectionExists) {\n          let nearestObject = Threebox.prototype.findParent3DObject(intersects[0]);\n          if (nearestObject) {\n            //if extrusion object selected, unselect\n            if (this.selectedFeature) {\n              this.unselectFeature(this.selectedFeature);\n            }\n            //if not selected yet, select it\n            if (!this.selectedObject) {\n              this.selectedObject = nearestObject;\n              this.selectedObject.selected = true;\n            } else if (this.selectedObject.uuid != nearestObject.uuid) {\n              //it's a different object, restore the previous and select the new one\n              this.selectedObject.selected = false;\n              nearestObject.selected = true;\n              this.selectedObject = nearestObject;\n            } else if (this.selectedObject.uuid == nearestObject.uuid) {\n              //deselect, reset and return\n              this.unselectObject();\n              return;\n            }\n\n            // fire the Wireframed event to notify UI status change\n            this.selectedObject.dispatchEvent({\n              type: 'Wireframed',\n              detail: this.selectedObject\n            });\n            this.selectedObject.dispatchEvent({\n              type: 'IsPlayingChanged',\n              detail: this.selectedObject\n            });\n            this.repaint = true;\n            e.preventDefault();\n          }\n        } else {\n          let features = [];\n          if (map.tb.enableSelectingFeatures) {\n            features = this.queryRenderedFeatures(e.point);\n          }\n          //now let's check the extrusion layer objects\n          if (features.length > 0) {\n            if (features[0].layer.type == 'fill-extrusion' && typeof features[0].id != 'undefined') {\n              //if 3D object selected, unselect\n              if (this.selectedObject) {\n                this.unselectObject();\n              }\n\n              //if not selected yet, select it\n              if (!this.selectedFeature) {\n                this.selectFeature(features[0]);\n              } else if (this.selectedFeature.id != features[0].id) {\n                //it's a different feature, restore the previous and select the new one\n                this.unselectFeature(this.selectedFeature);\n                this.selectFeature(features[0]);\n              } else if (this.selectedFeature.id == features[0].id) {\n                //deselect, reset and return\n                this.unselectFeature(this.selectedFeature);\n                return;\n              }\n            }\n          }\n        }\n      };\n      this.onMouseMove = function (e) {\n        // Capture the ongoing xy coordinates\n        let current = mousePos(e);\n        this.getCanvasContainer().style.cursor = this.tb.defaultCursor;\n        //check if being rotated\n        if (e.originalEvent.altKey && this.draggedObject) {\n          if (!map.tb.enableRotatingObjects) return;\n          draggedAction = 'rotate';\n          // Set a UI indicator for dragging.\n          this.getCanvasContainer().style.cursor = 'move';\n          var minX = Math.min(start.x, current.x),\n            maxX = Math.max(start.x, current.x),\n            minY = Math.min(start.y, current.y),\n            maxY = Math.max(start.y, current.y);\n          //set the movement fluid we rotate only every 10px moved, in steps of 10 degrees up to 360\n          let rotation = {\n            x: 0,\n            y: 0,\n            z: Math.round(rotationDiff[2] + ~~((current.x - start.x) / this.tb.rotationStep) % 360 * this.tb.rotationStep % 360)\n          };\n          //now rotate the model depending the axis\n          this.draggedObject.setRotation(rotation);\n          if (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"rot: \" + rotation.z + \"&#176;\");\n          //this.draggedObject.setRotationAxis(rotation);\n          return;\n        }\n\n        //check if being moved\n        if (e.originalEvent.shiftKey && this.draggedObject) {\n          if (!map.tb.enableDraggingObjects) return;\n          draggedAction = 'translate';\n          // Set a UI indicator for dragging.\n          this.getCanvasContainer().style.cursor = 'move';\n          // Capture the first xy coordinates, height must be the same to move on the same plane\n          let coords = e.lngLat;\n          let options = [Number((coords.lng + lngDiff).toFixed(this.tb.gridStep)), Number((coords.lat + latDiff).toFixed(this.tb.gridStep)), this.draggedObject.modelHeight];\n          this.draggedObject.setCoords(options);\n          if (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"lng: \" + options[0] + \"&#176;, lat: \" + options[1] + \"&#176;\");\n          return;\n        }\n\n        //check if being moved on altitude\n        if (e.originalEvent.ctrlKey && this.draggedObject) {\n          if (!map.tb.enableDraggingObjects) return;\n          draggedAction = 'altitude';\n          // Set a UI indicator for dragging.\n          this.getCanvasContainer().style.cursor = 'move';\n          // Capture the first xy coordinates, height must be the same to move on the same plane\n          let now = e.point.y * this.tb.altitudeStep;\n          let options = [this.draggedObject.coordinates[0], this.draggedObject.coordinates[1], Number((-now - altDiff).toFixed(this.tb.gridStep))];\n          this.draggedObject.setCoords(options);\n          if (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"alt: \" + options[2] + \"m\");\n          return;\n        }\n        let intersectionExists;\n        let intersects = [];\n        if (map.tb.enableSelectingObjects) {\n          // calculate objects intersecting the picking ray\n          intersects = this.tb.queryRenderedFeatures(e.point);\n        }\n        intersectionExists = typeof intersects[0] == 'object';\n\n        // if intersect exists, highlight it, if not check the extrusion layer\n        if (intersectionExists) {\n          let nearestObject = Threebox.prototype.findParent3DObject(intersects[0]);\n          if (nearestObject) {\n            this.outFeature(this.overedFeature);\n            this.getCanvasContainer().style.cursor = 'pointer';\n            if (!this.selectedObject || nearestObject.uuid != this.selectedObject.uuid) {\n              if (this.overedObject && this.overedObject.uuid != nearestObject.uuid) {\n                this.outObject();\n              }\n              nearestObject.over = true;\n              this.overedObject = nearestObject;\n            } else if (this.selectedObject && nearestObject.uuid == this.selectedObject.uuid) {\n              nearestObject.over = true;\n              this.overedObject = nearestObject;\n            }\n            this.repaint = true;\n            e.preventDefault();\n          }\n        } else {\n          //clean the object overed\n          if (this.overedObject) {\n            this.outObject();\n          }\n          //now let's check the extrusion layer objects\n          let features = [];\n          if (map.tb.enableSelectingFeatures) {\n            features = this.queryRenderedFeatures(e.point);\n          }\n          if (features.length > 0) {\n            this.outFeature(features[0]);\n            if (features[0].layer.type == 'fill-extrusion' && typeof features[0].id != 'undefined') {\n              if (!this.selectedFeature || this.selectedFeature.id != features[0].id) {\n                this.getCanvasContainer().style.cursor = 'pointer';\n                this.overedFeature = features[0];\n                this.setFeatureState({\n                  source: this.overedFeature.source,\n                  sourceLayer: this.overedFeature.sourceLayer,\n                  id: this.overedFeature.id\n                }, {\n                  hover: true\n                });\n                this.overedFeature = map.queryRenderedFeatures({\n                  layers: [this.overedFeature.layer.id],\n                  filter: [\"==\", ['id'], this.overedFeature.id]\n                })[0];\n                this.addTooltip(this.overedFeature);\n              }\n            }\n          }\n        }\n      };\n      this.onMouseDown = function (e) {\n        // Continue the rest of the function shiftkey or altkey are pressed, and if object is selected\n        if (!((e.originalEvent.shiftKey || e.originalEvent.altKey || e.originalEvent.ctrlKey) && e.originalEvent.button === 0 && this.selectedObject)) return;\n        if (!map.tb.enableDraggingObjects && !map.tb.enableRotatingObjects) return;\n        e.preventDefault();\n        map.getCanvasContainer().style.cursor = 'move';\n\n        // Disable default drag zooming when the shift key is held down.\n        //map.dragPan.disable();\n\n        // Call functions for the following events\n        map.once('mouseup', this.onMouseUp);\n        //map.once('mouseout', this.onMouseUp);\n\n        // move the selected object\n        this.draggedObject = this.selectedObject;\n\n        // Capture the first xy coordinates\n        start = mousePos(e);\n        startCoords = this.draggedObject.coordinates;\n        rotationDiff = utils.degreeify(this.draggedObject.rotation);\n        lngDiff = startCoords[0] - e.lngLat.lng;\n        latDiff = startCoords[1] - e.lngLat.lat;\n        altDiff = -this.draggedObject.modelHeight - e.point.y * this.tb.altitudeStep;\n      };\n      this.onMouseUp = function (e) {\n        // Set a UI indicator for dragging.\n        this.getCanvasContainer().style.cursor = this.tb.defaultCursor;\n\n        // Remove these events now that finish has been called.\n        //map.off('mousemove', onMouseMove);\n        this.off('mouseup', this.onMouseUp);\n        this.off('mouseout', this.onMouseUp);\n        this.dragPan.enable();\n        if (this.draggedObject) {\n          this.draggedObject.dispatchEvent({\n            type: 'ObjectDragged',\n            detail: {\n              draggedObject: this.draggedObject,\n              draggedAction: draggedAction\n            }\n          });\n          this.draggedObject.removeHelp();\n          this.draggedObject = null;\n          draggedAction = null;\n        }\n        ;\n      };\n      this.onMouseOut = function (e) {\n        if (this.overedFeature) {\n          let features = this.queryRenderedFeatures(e.point);\n          if (features.length > 0 && this.overedFeature.id != features[0].id) {\n            this.getCanvasContainer().style.cursor = this.tb.defaultCursor;\n            //only unover when new feature is another\n            this.outFeature(features[0]);\n          }\n        }\n      };\n      this.onZoom = function (e) {\n        this.tb.zoomLayers.forEach(l => {\n          this.tb.toggleLayer(l);\n        });\n        this.tb.setObjectsScale();\n      };\n      let ctrlDown = false;\n      let shiftDown = false;\n      let ctrlKey = 17,\n        cmdKey = 91,\n        shiftKey = 16,\n        sK = 83,\n        dK = 68;\n      function onKeyDown(e) {\n        if (e.which === ctrlKey || e.which === cmdKey) ctrlDown = true;\n        if (e.which === shiftKey) shiftDown = true;\n        let obj = this.selectedObject;\n        if (shiftDown && e.which === sK && obj) {\n          //shift + sS\n          let dc = utils.toDecimal;\n          if (!obj.help) {\n            let s = obj.modelSize;\n            let sf = 1;\n            if (obj.userData.units !== 'meters') {\n              //if not meters, calculate scale to the current lat\n              sf = utils.projectedUnitsPerMeter(obj.coordinates[1]);\n              if (!sf) {\n                sf = 1;\n              }\n              ;\n              sf = dc(sf, 7);\n            }\n            if (map.tb.enableHelpTooltips) obj.addHelp(\"size(m): \" + dc(s.x / sf, 3) + \" W, \" + dc(s.y / sf, 3) + \" L, \" + dc(s.z / sf, 3) + \" H\");\n            this.repaint = true;\n          } else {\n            obj.removeHelp();\n          }\n          return false;\n        }\n      }\n      ;\n      function onKeyUp(e) {\n        if (e.which == ctrlKey || e.which == cmdKey) ctrlDown = false;\n        if (e.which === shiftKey) shiftDown = false;\n      }\n\n      //listener to the events\n      //this.on('contextmenu', map.onContextMenu);\n      this.on('click', this.onClick);\n      this.on('mousemove', this.onMouseMove);\n      this.on('mouseout', this.onMouseOut);\n      this.on('mousedown', this.onMouseDown);\n      this.on('zoom', this.onZoom);\n      this.on('zoomend', this.onZoom);\n      document.addEventListener('keydown', onKeyDown.bind(this), true);\n      document.addEventListener('keyup', onKeyUp.bind(this));\n    });\n  },\n  //[jscastro] added property to manage an athmospheric sky layer\n  get sky() {\n    return this.options.sky;\n  },\n  set sky(value) {\n    if (value) {\n      this.createSkyLayer();\n    } else {\n      this.removeLayer(this.skyLayerName);\n    }\n    this.options.sky = value;\n  },\n  //[jscastro] added property to manage an athmospheric sky layer\n  get terrain() {\n    return this.options.terrain;\n  },\n  set terrain(value) {\n    this.terrainLayerName = '';\n    if (value) {\n      this.createTerrainLayer();\n    } else {\n      if (this.mapboxVersion < 2.0) {\n        console.warn(\"Terrain layer are only supported by Mapbox-gl-js > v2.0\");\n        return;\n      }\n      ;\n      if (this.map.getTerrain()) {\n        this.map.setTerrain(null); //\n        this.map.removeSource(this.terrainSourceName);\n      }\n    }\n    this.options.terrain = value;\n  },\n  //[jscastro] added property to manage FOV for perspective camera\n  get fov() {\n    return this.options.fov;\n  },\n  set fov(value) {\n    if (this.camera instanceof THREE.PerspectiveCamera && this.options.fov !== value) {\n      this.map.transform.fov = value;\n      this.camera.fov = this.map.transform.fov;\n      this.cameraSync.setupCamera();\n      this.map.repaint = true;\n      this.options.fov = value;\n    }\n  },\n  //[jscastro] added property to manage camera type\n  get orthographic() {\n    return this.options.orthographic;\n  },\n  set orthographic(value) {\n    const h = this.map.getCanvas().clientHeight;\n    const w = this.map.getCanvas().clientWidth;\n    if (value) {\n      this.map.transform.fov = 0;\n      this.camera = new THREE.OrthographicCamera(w / -2, w / 2, h / 2, h / -2, 0.1, 1e21);\n    } else {\n      this.map.transform.fov = this.fov;\n      this.camera = new THREE.PerspectiveCamera(this.map.transform.fov, w / h, 0.1, 1e21);\n    }\n    this.camera.layers.enable(0);\n    this.camera.layers.enable(1);\n    // The CameraSync object will keep the Mapbox and THREE.js camera movements in sync.\n    // It requires a world group to scale as we zoom in. Rotation is handled in the camera's\n    // projection matrix itself (as is field of view and near/far clipping)\n    // It automatically registers to listen for move events on the map so we don't need to do that here\n    this.cameraSync = new CameraSync(this.map, this.camera, this.world);\n    this.map.repaint = true; // repaint the map\n    this.options.orthographic = value;\n  },\n  //[jscastro] method to create an athmospheric sky layer\n  createSkyLayer: function () {\n    if (this.mapboxVersion < 2.0) {\n      console.warn(\"Sky layer are only supported by Mapbox-gl-js > v2.0\");\n      this.options.sky = false;\n      return;\n    }\n    ;\n    let layer = this.map.getLayer(this.skyLayerName);\n    if (!layer) {\n      this.map.addLayer({\n        'id': this.skyLayerName,\n        'type': 'sky',\n        'paint': {\n          'sky-opacity': ['interpolate', ['linear'], ['zoom'], 0, 0, 5, 0.3, 8, 1],\n          // set up the sky layer for atmospheric scattering\n          'sky-type': 'atmosphere',\n          // explicitly set the position of the sun rather than allowing the sun to be attached to the main light source\n          'sky-atmosphere-sun': this.getSunSky(this.lightDateTime),\n          // set the intensity of the sun as a light source (0-100 with higher values corresponding to brighter skies)\n          'sky-atmosphere-sun-intensity': 10\n        }\n      });\n      this.map.once('idle', () => {\n        this.setSunlight();\n        this.repaint();\n      });\n    }\n  },\n  //[jscastro] method to create a terrain layer\n  createTerrainLayer: function () {\n    if (this.mapboxVersion < 2.0) {\n      console.warn(\"Terrain layer are only supported by Mapbox-gl-js > v2.0\");\n      this.options.terrain = false;\n      return;\n    }\n    ;\n    let layer = this.map.getTerrain();\n    if (!layer) {\n      // add the DEM source as a terrain layer with exaggerated height\n      this.map.addSource(this.terrainSourceName, {\n        'type': 'raster-dem',\n        'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n        'tileSize': 512,\n        'maxzoom': 14\n      });\n      this.map.setTerrain({\n        'source': this.terrainSourceName,\n        'exaggeration': this.terrainExaggeration\n      });\n      this.map.once('idle', () => {\n        //alert(\"idle\");\n        this.cameraSync.updateCamera();\n        this.repaint();\n      });\n    }\n  },\n  // Objects\n  sphere: function (options) {\n    this.setDefaultView(options, this.options);\n    return sphere(options, this.world);\n  },\n  line: line,\n  label: label,\n  tooltip: tooltip,\n  tube: function (options) {\n    this.setDefaultView(options, this.options);\n    return tube(options, this.world);\n  },\n  extrusion: function (options) {\n    this.setDefaultView(options, this.options);\n    return extrusion(options);\n  },\n  Object3D: function (options) {\n    this.setDefaultView(options, this.options);\n    return Object3D(options);\n  },\n  loadObj: async function loadObj(options, cb) {\n    this.setDefaultView(options, this.options);\n    if (options.clone === false) {\n      return new Promise(async resolve => {\n        loader(options, cb, async obj => {\n          resolve(obj);\n        });\n      });\n    } else {\n      //[jscastro] new added cache for 3D Objects\n      let cache = this.objectsCache.get(options.obj);\n      if (cache) {\n        cache.promise.then(obj => {\n          cb(obj.duplicate(options));\n        }).catch(err => {\n          this.objectsCache.delete(options.obj);\n          console.error(\"Could not load model file: \" + options.obj);\n        });\n      } else {\n        this.objectsCache.set(options.obj, {\n          promise: new Promise(async (resolve, reject) => {\n            loader(options, cb, async obj => {\n              if (obj.duplicate) {\n                resolve(obj.duplicate());\n              } else {\n                reject(obj);\n              }\n            });\n          })\n        });\n      }\n    }\n  },\n  // Material\n\n  material: function (o) {\n    return material(o);\n  },\n  initLights: {\n    ambientLight: null,\n    dirLight: null,\n    dirLightBack: null,\n    dirLightHelper: null,\n    hemiLight: null,\n    pointLight: null\n  },\n  utils: utils,\n  SunCalc: SunCalc,\n  Constants: ThreeboxConstants,\n  projectToWorld: function (coords) {\n    return this.utils.projectToWorld(coords);\n  },\n  unprojectFromWorld: function (v3) {\n    return this.utils.unprojectFromWorld(v3);\n  },\n  projectedUnitsPerMeter: function (lat) {\n    return this.utils.projectedUnitsPerMeter(lat);\n  },\n  //get the center point of a feature\n  getFeatureCenter: function getFeatureCenter(feature, obj, level) {\n    return utils.getFeatureCenter(feature, obj, level);\n  },\n  getObjectHeightOnFloor: function (feature, obj, level) {\n    return utils.getObjectHeightOnFloor(feature, obj, level);\n  },\n  queryRenderedFeatures: function (point) {\n    let mouse = new THREE.Vector2();\n\n    // // scale mouse pixel position to a percentage of the screen's width and height\n    mouse.x = point.x / this.map.transform.width * 2 - 1;\n    mouse.y = 1 - point.y / this.map.transform.height * 2;\n    this.raycaster.setFromCamera(mouse, this.camera);\n\n    // calculate objects intersecting the picking ray\n    let intersects = this.raycaster.intersectObjects(this.world.children, true);\n    return intersects;\n  },\n  //[jscastro] find 3D object of a mesh. this method is needed to know the object of a raycasted mesh\n  findParent3DObject: function (mesh) {\n    //find the Parent Object3D of the mesh captured by Raytracer\n    var result;\n    mesh.object.traverseAncestors(function (m) {\n      if (m.parent) if (m.parent.type == \"Group\" && m.userData.obj) {\n        result = m;\n      }\n    });\n    return result;\n  },\n  //[jscastro] method to replicate behaviour of map.setLayoutProperty when Threebox are affected\n  setLayoutProperty: function (layerId, name, value) {\n    //first set layout property at the map\n    this.map.setLayoutProperty(layerId, name, value);\n    if (value !== null && value !== undefined) {\n      if (name === 'visibility') {\n        this.world.children.filter(o => o.layer === layerId).forEach(o => {\n          o.visibility = value;\n        });\n      }\n    }\n  },\n  //[jscastro] Custom Layers doesn't work on minzoom and maxzoom attributes, and if the layer is including labels they don't hide either on minzoom\n  setLayerZoomRange: function (layerId, minZoomLayer, maxZoomLayer) {\n    if (this.map.getLayer(layerId)) {\n      this.map.setLayerZoomRange(layerId, minZoomLayer, maxZoomLayer);\n      if (!this.zoomLayers.includes(layerId)) this.zoomLayers.push(layerId);\n      this.toggleLayer(layerId);\n    }\n  },\n  //[jscastro] method to set the height of all the objects in a level. this only works if the objects have a geojson feature\n  setLayerHeigthProperty: function (layerId, level) {\n    let layer = this.map.getLayer(layerId);\n    if (!layer) return;\n    if (layer.type == \"fill-extrusion\") {\n      let data = this.map.getStyle().sources[layer.source].data;\n      let features = data.features;\n      features.forEach(function (f) {\n        f.properties.level = level;\n      });\n      //we change the level on the source\n      this.map.getSource(layer.source).setData(data);\n    } else if (layer.type == \"custom\") {\n      this.world.children.forEach(function (obj) {\n        let feature = obj.userData.feature;\n        if (feature && feature.layer === layerId) {\n          //TODO: this could be a multidimensional array\n          let location = this.tb.getFeatureCenter(feature, obj, level);\n          obj.setCoords(location);\n        }\n      });\n    }\n  },\n  //[jscastro] method to set globally all the objects that are fixedScale\n  setObjectsScale: function () {\n    this.world.children.filter(o => o.fixedZoom != null).forEach(o => {\n      o.setObjectScale(this.map.transform.scale);\n    });\n  },\n  //[jscastro] mapbox setStyle removes all the layers, including custom layers, so tb.world must be cleaned up too\n  setStyle: function (styleId, options) {\n    this.clear().then(() => {\n      this.map.setStyle(styleId, options);\n    });\n  },\n  //[jscastro] method to toggle Layer visibility checking zoom range\n  toggleLayer: function (layerId, visible = true) {\n    let l = this.map.getLayer(layerId);\n    if (l) {\n      if (!visible) {\n        this.toggle(l.id, false);\n        return;\n      }\n      let z = this.map.getZoom();\n      if (l.minzoom && z < l.minzoom) {\n        this.toggle(l.id, false);\n        return;\n      }\n      ;\n      if (l.maxzoom && z >= l.maxzoom) {\n        this.toggle(l.id, false);\n        return;\n      }\n      ;\n      this.toggle(l.id, true);\n    }\n    ;\n  },\n  //[jscastro] method to toggle Layer visibility\n  toggle: function (layerId, visible) {\n    //call\n    this.setLayoutProperty(layerId, 'visibility', visible ? 'visible' : 'none');\n    this.labelRenderer.toggleLabels(layerId, visible);\n  },\n  update: function () {\n    if (this.map.repaint) this.map.repaint = false;\n    var timestamp = Date.now();\n\n    // Update any animations\n    this.objects.animationManager.update(timestamp);\n    this.updateLightHelper();\n\n    // Render the scene and repaint the map\n    this.renderer.resetState(); //update threejs r126\n    this.renderer.render(this.scene, this.camera);\n\n    // [jscastro] Render any label\n    this.labelRenderer.render(this.scene, this.camera);\n    if (this.options.passiveRendering === false) this.map.triggerRepaint();\n  },\n  add: function (obj, layerId, sourceId) {\n    //[jscastro] remove the tooltip if not enabled\n    if (!this.enableTooltips && obj.tooltip) {\n      obj.tooltip.visibility = false;\n    }\n    ;\n    this.world.add(obj);\n    if (layerId) {\n      obj.layer = layerId;\n      obj.source = sourceId;\n      let l = this.map.getLayer(layerId);\n      if (l) {\n        let v = l.visibility;\n        let u = typeof v === 'undefined';\n        obj.visibility = u || v === 'visible' ? true : false;\n      }\n    }\n  },\n  removeByName: function (name) {\n    let obj = this.world.getObjectByName(name);\n    if (obj) this.remove(obj);\n  },\n  remove: function (obj) {\n    if (this.map.selectedObject && obj.uuid == this.map.selectedObject.uuid) this.map.unselectObject();\n    if (this.map.draggedObject && obj.uuid == this.map.draggedObject.uuid) this.map.draggedObject = null;\n    if (obj.dispose) obj.dispose();\n    this.world.remove(obj);\n    obj = null;\n  },\n  //[jscastro] this clears tb.world in order to dispose properly the resources\n  clear: async function (layerId = null, dispose = false) {\n    return new Promise((resolve, reject) => {\n      let objects = [];\n      this.world.children.forEach(function (object) {\n        objects.push(object);\n      });\n      for (let i = 0; i < objects.length; i++) {\n        let obj = objects[i];\n        //if layerId, check the layer to remove, otherwise always remove\n        if (obj.layer === layerId || !layerId) {\n          this.remove(obj);\n        }\n      }\n      if (dispose) {\n        this.objectsCache.forEach(value => {\n          value.promise.then(obj => {\n            obj.dispose();\n            obj = null;\n          });\n        });\n      }\n      resolve(\"clear\");\n    });\n  },\n  //[jscastro] remove a layer clearing first the 3D objects from this layer in tb.world\n  removeLayer: function (layerId) {\n    this.clear(layerId, true).then(() => {\n      this.map.removeLayer(layerId);\n    });\n  },\n  //[jscastro] get the sun position (azimuth, altitude) from a given datetime, lng, lat\n  getSunPosition: function (date, coords) {\n    return SunCalc.getPosition(date || Date.now(), coords[1], coords[0]);\n  },\n  //[jscastro] get the sun times for sunrise, sunset, etc.. from a given datetime, lng, lat and alt\n  getSunTimes: function (date, coords) {\n    return SunCalc.getTimes(date, coords[1], coords[0], coords[2] ? coords[2] : 0);\n  },\n  //[jscastro] set shadows for fill-extrusion layers\n  setBuildingShadows: function (options) {\n    if (this.map.getLayer(options.buildingsLayerId)) {\n      let layer = new BuildingShadows(options, this);\n      this.map.addLayer(layer, options.buildingsLayerId);\n    } else {\n      console.warn(\"The layer '\" + options.buildingsLayerId + \"' does not exist in the map.\");\n    }\n  },\n  //[jscastro] This method set the sun light for a given datetime and lnglat\n  setSunlight: function (newDate = new Date(), coords) {\n    if (!this.lights.dirLight || !this.options.realSunlight) {\n      console.warn(\"To use setSunlight it's required to set realSunlight : true in Threebox initial options.\");\n      return;\n    }\n    var date = new Date(newDate.getTime());\n    if (coords) {\n      if (coords.lng && coords.lat) this.mapCenter = coords;else this.mapCenter = {\n        lng: coords[0],\n        lat: coords[1]\n      };\n    } else {\n      this.mapCenter = this.map.getCenter();\n    }\n    if (this.lightDateTime && this.lightDateTime.getTime() === date.getTime() && this.lightLng === this.mapCenter.lng && this.lightLat === this.mapCenter.lat) {\n      return; //setSunLight could be called on render, so due to performance, avoid duplicated calls\n    }\n    this.lightDateTime = date;\n    this.lightLng = this.mapCenter.lng;\n    this.lightLat = this.mapCenter.lat;\n    this.sunPosition = this.getSunPosition(date, [this.mapCenter.lng, this.mapCenter.lat]);\n    let altitude = this.sunPosition.altitude;\n    let azimuth = Math.PI + this.sunPosition.azimuth;\n    //console.log(\"Altitude: \" + utils.degreeify(altitude) + \", Azimuth: \" + (utils.degreeify(azimuth)));\n\n    let radius = ThreeboxConstants.WORLD_SIZE / 2;\n    let alt = Math.sin(altitude);\n    let altRadius = Math.cos(altitude);\n    let azCos = Math.cos(azimuth) * altRadius;\n    let azSin = Math.sin(azimuth) * altRadius;\n    this.lights.dirLight.position.set(azSin, azCos, alt);\n    this.lights.dirLight.position.multiplyScalar(radius);\n    this.lights.dirLight.intensity = Math.max(alt, 0);\n    this.lights.hemiLight.intensity = Math.max(alt * 1, 0.1);\n    //console.log(\"Intensity:\" + this.lights.dirLight.intensity);\n    this.lights.dirLight.updateMatrixWorld();\n    this.updateLightHelper();\n    if (this.map.loaded()) {\n      this.updateSunGround(this.sunPosition);\n      this.map.setLight({\n        anchor: 'map',\n        position: [3, 180 + this.sunPosition.azimuth * 180 / Math.PI, 90 - this.sunPosition.altitude * 180 / Math.PI],\n        intensity: Math.cos(this.sunPosition.altitude),\n        //0.4,\n        color: `hsl(40, ${50 * Math.cos(this.sunPosition.altitude)}%, ${Math.max(20, 20 + 96 * Math.sin(this.sunPosition.altitude))}%)`\n      }, {\n        duration: 0\n      });\n      if (this.sky) {\n        this.updateSunSky(this.getSunSky(date, this.sunPosition));\n      }\n    }\n  },\n  getSunSky: function (date, sunPos) {\n    if (!sunPos) {\n      var center = this.map.getCenter();\n      sunPos = this.getSunPosition(date || Date.now(), [center.lng, center.lat]);\n    }\n    var sunAzimuth = 180 + sunPos.azimuth * 180 / Math.PI;\n    var sunAltitude = 90 - sunPos.altitude * 180 / Math.PI;\n    return [sunAzimuth, sunAltitude];\n  },\n  updateSunSky: function (sunPos) {\n    if (this.sky) {\n      // update the `sky-atmosphere-sun` paint property with the position of the sun based on the selected time\n      this.map.setPaintProperty(this.skyLayerName, 'sky-atmosphere-sun', sunPos);\n    }\n  },\n  updateSunGround: function (sunPos) {\n    if (this.terrainLayerName != '') {\n      // update the raster layer paint property with the position of the sun based on the selected time\n      this.map.setPaintProperty(this.terrainLayerName, 'raster-opacity', Math.max(Math.min(1, sunPos.altitude * 4), 0.25));\n    }\n  },\n  //[jscastro] this updates the directional light helper\n  updateLightHelper: function () {\n    if (this.lights.dirLightHelper) {\n      this.lights.dirLightHelper.position.setFromMatrixPosition(this.lights.dirLight.matrixWorld);\n      this.lights.dirLightHelper.updateMatrix();\n      this.lights.dirLightHelper.update();\n    }\n  },\n  //[jscastro] method to fully dispose the resources, watch out is you call this without navigating to other page\n  dispose: async function () {\n    console.log(this.memory());\n    //console.log(window.performance.memory);\n\n    return new Promise(resolve => {\n      resolve(this.clear(null, true).then(resolve => {\n        this.map.remove();\n        this.map = {};\n        this.scene.remove(this.world);\n        this.world.children = [];\n        this.world = null;\n        this.objectsCache.clear();\n        this.labelRenderer.dispose();\n        console.log(this.memory());\n        this.renderer.dispose();\n        return resolve;\n      }));\n      //console.log(window.performance.memory);\n    });\n  },\n  defaultLights: function () {\n    this.lights.ambientLight = new THREE.AmbientLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.75);\n    this.scene.add(this.lights.ambientLight);\n    this.lights.dirLightBack = new THREE.DirectionalLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.25);\n    this.lights.dirLightBack.position.set(30, 100, 100);\n    this.scene.add(this.lights.dirLightBack);\n    this.lights.dirLight = new THREE.DirectionalLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.25);\n    this.lights.dirLight.position.set(-30, 100, -100);\n    this.scene.add(this.lights.dirLight);\n  },\n  realSunlight: function (helper = false) {\n    this.renderer.shadowMap.enabled = true;\n    //this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.lights.dirLight = new THREE.DirectionalLight(0xffffff, 1);\n    this.scene.add(this.lights.dirLight);\n    if (helper) {\n      this.lights.dirLightHelper = new THREE.DirectionalLightHelper(this.lights.dirLight, 5);\n      this.scene.add(this.lights.dirLightHelper);\n    }\n    let d2 = 1000;\n    let r2 = 2;\n    let mapSize2 = 8192;\n    this.lights.dirLight.castShadow = true;\n    this.lights.dirLight.shadow.radius = r2;\n    this.lights.dirLight.shadow.mapSize.width = mapSize2;\n    this.lights.dirLight.shadow.mapSize.height = mapSize2;\n    this.lights.dirLight.shadow.camera.top = this.lights.dirLight.shadow.camera.right = d2;\n    this.lights.dirLight.shadow.camera.bottom = this.lights.dirLight.shadow.camera.left = -d2;\n    this.lights.dirLight.shadow.camera.near = 1;\n    this.lights.dirLight.shadow.camera.visible = true;\n    this.lights.dirLight.shadow.camera.far = 400000000;\n    this.lights.hemiLight = new THREE.HemisphereLight(new THREE.Color(0xffffff), new THREE.Color(0xffffff), 0.6);\n    this.lights.hemiLight.color.setHSL(0.661, 0.96, 0.12);\n    this.lights.hemiLight.groundColor.setHSL(0.11, 0.96, 0.14);\n    this.lights.hemiLight.position.set(0, 0, 50);\n    this.scene.add(this.lights.hemiLight);\n    this.setSunlight();\n    this.map.once('idle', () => {\n      this.setSunlight();\n      this.repaint();\n    });\n  },\n  setDefaultView: function (options, defOptions) {\n    options.bbox = (options.bbox || options.bbox == null) && defOptions.enableSelectingObjects;\n    options.tooltip = (options.tooltip || options.tooltip == null) && defOptions.enableTooltips;\n    options.mapScale = this.map.transform.scale;\n  },\n  memory: function () {\n    return this.renderer.info.memory;\n  },\n  programs: function () {\n    return this.renderer.info.programs.length;\n  },\n  version: '2.2.7'\n};\nvar defaultOptions = {\n  defaultLights: false,\n  realSunlight: false,\n  realSunlightHelper: false,\n  passiveRendering: true,\n  preserveDrawingBuffer: false,\n  enableSelectingFeatures: false,\n  enableSelectingObjects: false,\n  enableDraggingObjects: false,\n  enableRotatingObjects: false,\n  enableTooltips: false,\n  enableHelpTooltips: false,\n  multiLayer: false,\n  orthographic: false,\n  fov: ThreeboxConstants.FOV_DEGREES,\n  sky: false,\n  terrain: false\n};\nmodule.exports = exports = Threebox;","map":{"version":3,"names":["THREE","require","CameraSync","utils","SunCalc","ThreeboxConstants","Objects","material","sphere","extrusion","label","tooltip","loader","Object3D","line","tube","LabelRenderer","BuildingShadows","Threebox","map","glContext","options","init","prototype","repaint","_validate","defaultOptions","tb","objects","mapboxVersion","parseFloat","version","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","canvas","getCanvas","context","setPixelRatio","window","devicePixelRatio","setSize","clientWidth","clientHeight","outputEncoding","sRGBEncoding","autoClear","labelRenderer","scene","Scene","world","Group","name","add","objectsCache","Map","zoomLayers","fov","orthographic","raycaster","Raycaster","layers","set","mapCenter","getCenter","mapCenterUnits","projectToWorld","lng","lat","lightDateTime","Date","lightLng","lightLat","sunPosition","rotationStep","gridStep","altitudeStep","defaultCursor","lights","initLights","defaultLights","realSunlight","realSunlightHelper","skyLayerName","terrainSourceName","terrainExaggeration","terrainLayerName","enableSelectingFeatures","enableSelectingObjects","enableDraggingObjects","enableRotatingObjects","enableTooltips","multiLayer","enableHelpTooltips","on","addLayer","id","type","renderingMode","onAdd","gl","render","matrix","update","once","setObjectsScale","sky","terrain","rasterLayers","forEach","l","getLayer","selectedObject","selectedFeature","draggedObject","draggedAction","overedObject","overedFeature","getCanvasContainer","style","cursor","start","startCoords","lngDiff","latDiff","altDiff","rotationDiff","mousePos","e","rect","getBoundingClientRect","x","originalEvent","clientX","left","clientLeft","y","clientY","top","clientTop","unselectObject","selected","outObject","over","unselectFeature","f","setFeatureState","source","sourceLayer","select","removeTooltip","queryRenderedFeatures","layer","filter","fire","detail","selectFeature","addTooltip","outFeature","hover","coordinates","getFeatureCenter","t","text","properties","mapboxStyle","feature","setCoords","visible","visibility","remove","onContextMenu","alert","onClick","intersectionExists","intersects","point","nearestObject","findParent3DObject","uuid","dispatchEvent","preventDefault","features","length","onMouseMove","current","altKey","minX","Math","min","maxX","max","minY","maxY","rotation","z","round","setRotation","addHelp","shiftKey","coords","lngLat","Number","toFixed","modelHeight","ctrlKey","now","onMouseDown","button","onMouseUp","degreeify","off","dragPan","enable","removeHelp","onMouseOut","onZoom","toggleLayer","ctrlDown","shiftDown","cmdKey","sK","dK","onKeyDown","which","obj","dc","toDecimal","help","s","modelSize","sf","userData","units","projectedUnitsPerMeter","onKeyUp","document","addEventListener","bind","value","createSkyLayer","removeLayer","createTerrainLayer","console","warn","getTerrain","setTerrain","removeSource","camera","PerspectiveCamera","transform","cameraSync","setupCamera","h","w","OrthographicCamera","getSunSky","setSunlight","addSource","updateCamera","setDefaultView","loadObj","cb","clone","Promise","resolve","cache","get","promise","then","duplicate","catch","err","delete","error","reject","o","ambientLight","dirLight","dirLightBack","dirLightHelper","hemiLight","pointLight","Constants","unprojectFromWorld","v3","level","getObjectHeightOnFloor","mouse","Vector2","width","height","setFromCamera","intersectObjects","children","mesh","result","object","traverseAncestors","m","parent","setLayoutProperty","layerId","undefined","setLayerZoomRange","minZoomLayer","maxZoomLayer","includes","push","setLayerHeigthProperty","data","getStyle","sources","getSource","setData","location","fixedZoom","setObjectScale","scale","setStyle","styleId","clear","toggle","getZoom","minzoom","maxzoom","toggleLabels","timestamp","animationManager","updateLightHelper","resetState","passiveRendering","triggerRepaint","sourceId","v","u","removeByName","getObjectByName","dispose","i","getSunPosition","date","getPosition","getSunTimes","getTimes","setBuildingShadows","buildingsLayerId","newDate","getTime","altitude","azimuth","PI","radius","WORLD_SIZE","alt","sin","altRadius","cos","azCos","azSin","position","multiplyScalar","intensity","updateMatrixWorld","loaded","updateSunGround","setLight","anchor","color","duration","updateSunSky","sunPos","center","sunAzimuth","sunAltitude","setPaintProperty","setFromMatrixPosition","matrixWorld","updateMatrix","log","memory","AmbientLight","Color","DirectionalLight","helper","shadowMap","enabled","DirectionalLightHelper","d2","r2","mapSize2","castShadow","shadow","mapSize","right","bottom","near","far","HemisphereLight","setHSL","groundColor","defOptions","bbox","mapScale","info","programs","FOV_DEGREES","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/node_modules/threebox-plugin/src/Threebox.js"],"sourcesContent":["/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n */\r\n\r\nconst THREE = require(\"./three.js\");\r\nconst CameraSync = require(\"./camera/CameraSync.js\");\r\nconst utils = require(\"./utils/utils.js\");\r\nconst SunCalc = require(\"./utils/suncalc.js\");\r\nconst ThreeboxConstants = require(\"./utils/constants.js\");\r\nconst Objects = require(\"./objects/objects.js\");\r\nconst material = require(\"./utils/material.js\");\r\nconst sphere = require(\"./objects/sphere.js\");\r\nconst extrusion = require(\"./objects/extrusion.js\");\r\nconst label = require(\"./objects/label.js\");\r\nconst tooltip = require(\"./objects/tooltip.js\");\r\nconst loader = require(\"./objects/loadObj.js\");\r\nconst Object3D = require(\"./objects/Object3D.js\");\r\nconst line = require(\"./objects/line.js\");\r\nconst tube = require(\"./objects/tube.js\");\r\nconst LabelRenderer = require(\"./objects/LabelRenderer.js\");\r\nconst BuildingShadows = require(\"./objects/effects/BuildingShadows.js\");\r\n\r\nfunction Threebox(map, glContext, options){\r\n\r\n    this.init(map, glContext, options);\r\n\r\n};\r\n\r\nThreebox.prototype = {\r\n\r\n\trepaint: function () {\r\n\t\tthis.map.repaint = true;\r\n\t},\r\n\r\n\t/**\r\n\t * Threebox constructor init method\r\n\t * @param {mapboxgl.map} map\r\n\t * @param {WebGLRenderingContext} glContext\r\n\t * @param {defaultOptions} options\r\n\t */\r\n\tinit: function (map, glContext, options) {\r\n\r\n\t\t// apply starter options\r\n\t\tthis.options = utils._validate(options || {}, defaultOptions);\r\n\r\n\t\tthis.map = map;\r\n\t\tthis.map.tb = this; //[jscastro] needed if we want to queryRenderedFeatures from map.onload\r\n\r\n\t\tthis.objects = new Objects();\r\n\r\n\t\tthis.mapboxVersion = parseFloat(this.map.version); \r\n\r\n\t\t// Set up a THREE.js scene\r\n\t\tthis.renderer = new THREE.WebGLRenderer({\r\n\t\t\talpha: true,\r\n\t\t\tantialias: true,\r\n\t\t\tpreserveDrawingBuffer: options.preserveDrawingBuffer,\r\n\t\t\tcanvas: map.getCanvas(),\r\n\t\t\tcontext: glContext\r\n\t\t});\r\n\r\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\r\n\t\tthis.renderer.setSize(this.map.getCanvas().clientWidth, this.map.getCanvas().clientHeight);\r\n\t\tthis.renderer.outputEncoding = THREE.sRGBEncoding;\r\n\t\tthis.renderer.autoClear = false;\r\n\r\n\t\t// [jscastro] set labelRendered\r\n\t\tthis.labelRenderer = new LabelRenderer(this.map);\r\n\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.world = new THREE.Group();\r\n\t\tthis.world.name = \"world\";\r\n\t\tthis.scene.add(this.world);\r\n\r\n\t\tthis.objectsCache = new Map();\r\n\t\tthis.zoomLayers = [];\r\n\r\n\t\tthis.fov = this.options.fov;\r\n\t\tthis.orthographic = this.options.orthographic || false;\r\n\r\n\t\t//raycaster for mouse events\r\n\t\tthis.raycaster = new THREE.Raycaster();\r\n\t\tthis.raycaster.layers.set(0);\r\n\t\t//this.raycaster.params.Points.threshold = 100;\r\n\r\n\t\tthis.mapCenter = this.map.getCenter();\r\n\t\tthis.mapCenterUnits = utils.projectToWorld([this.mapCenter.lng, this.mapCenter.lat]);\r\n\t\tthis.lightDateTime = new Date();\r\n\t\tthis.lightLng = this.mapCenter.lng;\r\n\t\tthis.lightLat = this.mapCenter.lat;\r\n\t\tthis.sunPosition;\r\n\t\tthis.rotationStep = 5;// degrees step size for rotation\r\n\t\tthis.gridStep = 6;// decimals to adjust the lnglat grid step, 6 = 11.1cm\r\n\t\tthis.altitudeStep = 0.1; // 1px = 0.1m = 10cm\r\n\t\tthis.defaultCursor = 'default';\r\n\r\n\t\tthis.lights = this.initLights;\r\n\t\tif (this.options.defaultLights) this.defaultLights();\r\n\t\tif (this.options.realSunlight) this.realSunlight(this.options.realSunlightHelper);\r\n\t\tthis.skyLayerName = 'sky-layer';\r\n\t\tthis.terrainSourceName = 'mapbox-dem';\r\n\t\tthis.terrainExaggeration = 1.0;\r\n\t\tthis.terrainLayerName = '';\r\n\t\tthis.enableSelectingFeatures = this.options.enableSelectingFeatures || false;\r\n\t\tthis.enableSelectingObjects = this.options.enableSelectingObjects || false;\r\n\t\tthis.enableDraggingObjects = this.options.enableDraggingObjects || false;\r\n\t\tthis.enableRotatingObjects = this.options.enableRotatingObjects || false;\r\n\t\tthis.enableTooltips = this.options.enableTooltips || false;\r\n\t\tthis.multiLayer = this.options.multiLayer || false;\r\n\t\tthis.enableHelpTooltips = this.options.enableHelpTooltips || false;\r\n\r\n\t\tthis.map.on('style.load', function () {\r\n\t\t\tthis.tb.zoomLayers = [];\r\n\t\t\t//[jscastro] if multiLayer, create a by default layer in the map, so tb.update won't be needed in client side to avoid duplicating calls to render\r\n\t\t\tif (this.tb.options.multiLayer) this.addLayer({ id: \"threebox_layer\", type: 'custom', renderingMode: '3d', map: this, onAdd: function (map, gl) { }, render: function (gl, matrix) { this.map.tb.update(); } })\r\n\r\n\t\t\tthis.once('idle', () => {\r\n\t\t\t\tthis.tb.setObjectsScale();\r\n\t\t\t});\r\n\r\n\t\t\tif (this.tb.options.sky) {\r\n\t\t\t\tthis.tb.sky = true;\r\n\t\t\t}\r\n\t\t\tif (this.tb.options.terrain) {\r\n\t\t\t\tthis.tb.terrain = true;\r\n\t\t\t}\r\n\t\t\tlet rasterLayers = ['satellite', 'mapbox-mapbox-satellite', 'satelliteLayer'];\r\n\t\t\trasterLayers.forEach((l) => {\r\n\t\t\t\tif (this.getLayer(l)) this.tb.terrainLayerName = l;\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t//[jscastro] new event map on load\r\n\t\tthis.map.on('load', function () {\r\n\r\n\t\t\t//[jscastro] new fields to manage events on map\r\n\t\t\tthis.selectedObject; //selected object through click\r\n\t\t\tthis.selectedFeature;//selected state id for extrusion layer features\r\n\t\t\tthis.draggedObject; //dragged object through mousedown + mousemove\r\n\t\t\tlet draggedAction; //dragged action to notify frontend\r\n\t\t\tthis.overedObject; //overed object through mouseover\r\n\t\t\tthis.overedFeature; //overed state for extrusion layer features\r\n\r\n\t\t\tlet canvas = this.getCanvasContainer();\r\n\t\t\tthis.getCanvasContainer().style.cursor = this.tb.defaultCursor;\r\n\t\t\t// Variable to hold the starting xy coordinates\r\n\t\t\t// when 'mousedown' occured.\r\n\t\t\tlet start;\r\n\r\n\t\t\t//when object selected\r\n\t\t\tlet startCoords = [];\r\n\r\n\t\t\tlet lngDiff; // difference between cursor and model left corner\r\n\t\t\tlet latDiff; // difference between cursor and model bottom corner\r\n\t\t\tlet altDiff; // difference between cursor and model height\r\n\t\t\tlet rotationDiff; \r\n\r\n\t\t\t// Return the xy coordinates of the mouse position\r\n\t\t\tfunction mousePos(e) {\r\n\t\t\t\tvar rect = canvas.getBoundingClientRect();\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: e.originalEvent.clientX - rect.left - canvas.clientLeft,\r\n\t\t\t\t\ty: e.originalEvent.clientY - rect.top - canvas.clientTop\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.unselectObject = function () {\r\n\t\t\t\t//deselect, reset and return\r\n\t\t\t\tthis.selectedObject.selected = false;\r\n\t\t\t\tthis.selectedObject = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.outObject = function () {\r\n\t\t\t\tthis.overedObject.over = false;\r\n\t\t\t\tthis.overedObject = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.unselectFeature = function (f) {\r\n\t\t\t\tif (typeof f.id == 'undefined') return;\r\n\t\t\t\tthis.setFeatureState(\r\n\t\t\t\t\t{ source: f.source, sourceLayer: f.sourceLayer, id: f.id },\r\n\t\t\t\t\t{ select: false }\r\n\t\t\t\t);\r\n\r\n\t\t\t\tthis.removeTooltip(f);\r\n\t\t\t\tf = this.queryRenderedFeatures({ layers: [f.layer.id], filter: [\"==\", ['id'], f.id] })[0];\r\n\t\t\t\t// Dispatch new event f for unselected\r\n\t\t\t\tif (f) this.fire('SelectedFeatureChange', { detail: f });\r\n\t\t\t\tthis.selectedFeature = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.selectFeature = function(f) {\r\n\t\t\t\tthis.selectedFeature = f;\r\n\t\t\t\tthis.setFeatureState(\r\n\t\t\t\t\t{ source: this.selectedFeature.source, sourceLayer: this.selectedFeature.sourceLayer, id: this.selectedFeature.id },\r\n\t\t\t\t\t{ select: true }\r\n\t\t\t\t);\r\n\t\t\t\tthis.selectedFeature = this.queryRenderedFeatures({ layers: [this.selectedFeature.layer.id], filter: [\"==\", ['id'], this.selectedFeature.id] })[0];\r\n\t\t\t\tthis.addTooltip(this.selectedFeature);\r\n\t\t\t\t// Dispatch new event SelectedFeature for selected\r\n\t\t\t\tthis.fire('SelectedFeatureChange', { detail: this.selectedFeature });\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.outFeature = function(f) {\r\n\t\t\t\tif (this.overedFeature && typeof this.overedFeature != 'undefined' && this.overedFeature.id != f) {\r\n\t\t\t\t\tmap.setFeatureState(\r\n\t\t\t\t\t\t{ source: this.overedFeature.source, sourceLayer: this.overedFeature.sourceLayer, id: this.overedFeature.id },\r\n\t\t\t\t\t\t{ hover: false }\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.removeTooltip(this.overedFeature);\r\n\t\t\t\t\tthis.overedFeature = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.addTooltip = function(f) {\r\n\t\t\t\tif (!this.tb.enableTooltips) return;\r\n\t\t\t\tlet coordinates = this.tb.getFeatureCenter(f);\r\n\t\t\t\tlet t = this.tb.tooltip({\r\n\t\t\t\t\ttext: f.properties.name || f.id || f.type,\r\n\t\t\t\t\tmapboxStyle: true,\r\n\t\t\t\t\tfeature: f\r\n\t\t\t\t});\r\n\t\t\t\tt.setCoords(coordinates);\r\n\t\t\t\tthis.tb.add(t, f.layer.id);\r\n\t\t\t\tf.tooltip = t;\r\n\t\t\t\tf.tooltip.tooltip.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeTooltip = function(f) {\r\n\t\t\t\tif (f.tooltip) {\r\n\t\t\t\t\tf.tooltip.visibility = false;\r\n\t\t\t\t\tthis.tb.remove(f.tooltip);\r\n\t\t\t\t\tf.tooltip = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmap.onContextMenu = function (e) {\r\n\t\t\t\talert('contextMenu'); //TODO: implement a callback\r\n\t\t\t}\r\n\r\n\t\t\t// onclick function\r\n\t\t\tthis.onClick = function (e) {\r\n\t\t\t\tlet intersectionExists\r\n\t\t\t\tlet intersects = [];\r\n\t\t\t\tif (map.tb.enableSelectingObjects) {\r\n\t\t\t\t\t//raycast only if we are in a custom layer, for other layers go to the else, this avoids duplicated calls to raycaster\r\n\t\t\t\t\tintersects = this.tb.queryRenderedFeatures(e.point);\r\n\t\t\t\t}\r\n\t\t\t\tintersectionExists = typeof intersects[0] == 'object';\r\n\t\t\t\t// if intersect exists, highlight it\r\n\t\t\t\tif (intersectionExists) {\r\n\r\n\t\t\t\t\tlet nearestObject = Threebox.prototype.findParent3DObject(intersects[0]);\r\n\r\n\t\t\t\t\tif (nearestObject) {\r\n\t\t\t\t\t\t//if extrusion object selected, unselect\r\n\t\t\t\t\t\tif (this.selectedFeature) {\r\n\t\t\t\t\t\t\tthis.unselectFeature(this.selectedFeature);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//if not selected yet, select it\r\n\t\t\t\t\t\tif (!this.selectedObject) {\r\n\t\t\t\t\t\t\tthis.selectedObject = nearestObject;\r\n\t\t\t\t\t\t\tthis.selectedObject.selected = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (this.selectedObject.uuid != nearestObject.uuid) {\r\n\t\t\t\t\t\t\t//it's a different object, restore the previous and select the new one\r\n\t\t\t\t\t\t\tthis.selectedObject.selected = false;\r\n\t\t\t\t\t\t\tnearestObject.selected = true;\r\n\t\t\t\t\t\t\tthis.selectedObject = nearestObject;\r\n\r\n\t\t\t\t\t\t} else if (this.selectedObject.uuid == nearestObject.uuid) {\r\n\t\t\t\t\t\t\t//deselect, reset and return\r\n\t\t\t\t\t\t\tthis.unselectObject();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// fire the Wireframed event to notify UI status change\r\n\t\t\t\t\t\tthis.selectedObject.dispatchEvent({ type: 'Wireframed', detail: this.selectedObject });\r\n\t\t\t\t\t\tthis.selectedObject.dispatchEvent({ type: 'IsPlayingChanged', detail: this.selectedObject });\r\n\r\n\t\t\t\t\t\tthis.repaint = true;\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet features = [];\r\n\t\t\t\t\tif (map.tb.enableSelectingFeatures) {\r\n\t\t\t\t\t\tfeatures = this.queryRenderedFeatures(e.point);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//now let's check the extrusion layer objects\r\n\t\t\t\t\tif (features.length > 0) {\r\n\r\n\t\t\t\t\t\tif (features[0].layer.type == 'fill-extrusion' && typeof features[0].id != 'undefined') {\r\n\r\n\t\t\t\t\t\t\t//if 3D object selected, unselect\r\n\t\t\t\t\t\t\tif (this.selectedObject) {\r\n\t\t\t\t\t\t\t\tthis.unselectObject();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t//if not selected yet, select it\r\n\t\t\t\t\t\t\tif (!this.selectedFeature) {\r\n\t\t\t\t\t\t\t\tthis.selectFeature(features[0])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this.selectedFeature.id != features[0].id) {\r\n\t\t\t\t\t\t\t\t//it's a different feature, restore the previous and select the new one\r\n\t\t\t\t\t\t\t\tthis.unselectFeature(this.selectedFeature);\r\n\t\t\t\t\t\t\t\tthis.selectFeature(features[0])\r\n\r\n\t\t\t\t\t\t\t} else if (this.selectedFeature.id == features[0].id) {\r\n\t\t\t\t\t\t\t\t//deselect, reset and return\r\n\t\t\t\t\t\t\t\tthis.unselectFeature(this.selectedFeature);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseMove = function (e) {\r\n\r\n\t\t\t\t// Capture the ongoing xy coordinates\r\n\t\t\t\tlet current = mousePos(e);\r\n\r\n\t\t\t\tthis.getCanvasContainer().style.cursor = this.tb.defaultCursor;\r\n\t\t\t\t//check if being rotated\r\n\t\t\t\tif (e.originalEvent.altKey && this.draggedObject) {\r\n\r\n\t\t\t\t\tif (!map.tb.enableRotatingObjects) return;\r\n\t\t\t\t\tdraggedAction = 'rotate';\r\n\t\t\t\t\t// Set a UI indicator for dragging.\r\n\t\t\t\t\tthis.getCanvasContainer().style.cursor = 'move';\r\n\t\t\t\t\tvar minX = Math.min(start.x, current.x),\r\n\t\t\t\t\t\tmaxX = Math.max(start.x, current.x),\r\n\t\t\t\t\t\tminY = Math.min(start.y, current.y),\r\n\t\t\t\t\t\tmaxY = Math.max(start.y, current.y);\r\n\t\t\t\t\t//set the movement fluid we rotate only every 10px moved, in steps of 10 degrees up to 360\r\n\t\t\t\t\tlet rotation = { x: 0, y: 0, z: (Math.round(rotationDiff[2] + (~~((current.x - start.x) / this.tb.rotationStep) % 360 * this.tb.rotationStep) % 360)) };\r\n\t\t\t\t\t//now rotate the model depending the axis\r\n\t\t\t\t\tthis.draggedObject.setRotation(rotation);\r\n\t\t\t\t\tif (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"rot: \" + rotation.z + \"&#176;\");\r\n\t\t\t\t\t//this.draggedObject.setRotationAxis(rotation);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check if being moved\r\n\t\t\t\tif (e.originalEvent.shiftKey && this.draggedObject) {\r\n\t\t\t\t\tif (!map.tb.enableDraggingObjects) return;\r\n\r\n\t\t\t\t\tdraggedAction = 'translate';\r\n\t\t\t\t\t// Set a UI indicator for dragging.\r\n\t\t\t\t\tthis.getCanvasContainer().style.cursor = 'move';\r\n\t\t\t\t\t// Capture the first xy coordinates, height must be the same to move on the same plane\r\n\t\t\t\t\tlet coords = e.lngLat;\r\n\t\t\t\t\tlet options = [Number((coords.lng + lngDiff).toFixed(this.tb.gridStep)), Number((coords.lat + latDiff).toFixed(this.tb.gridStep)), this.draggedObject.modelHeight];\r\n\t\t\t\t\tthis.draggedObject.setCoords(options);\r\n\t\t\t\t\tif (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"lng: \" + options[0] + \"&#176;, lat: \" + options[1] + \"&#176;\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//check if being moved on altitude\r\n\t\t\t\tif (e.originalEvent.ctrlKey && this.draggedObject) {\r\n\t\t\t\t\tif (!map.tb.enableDraggingObjects) return;\r\n\t\t\t\t\tdraggedAction = 'altitude';\r\n\t\t\t\t\t// Set a UI indicator for dragging.\r\n\t\t\t\t\tthis.getCanvasContainer().style.cursor = 'move';\r\n\t\t\t\t\t// Capture the first xy coordinates, height must be the same to move on the same plane\r\n\t\t\t\t\tlet now = (e.point.y * this.tb.altitudeStep);\r\n\t\t\t\t\tlet options = [this.draggedObject.coordinates[0], this.draggedObject.coordinates[1], Number((- now - altDiff).toFixed(this.tb.gridStep))];\r\n\t\t\t\t\tthis.draggedObject.setCoords(options);\r\n\t\t\t\t\tif (map.tb.enableHelpTooltips) this.draggedObject.addHelp(\"alt: \" + options[2] + \"m\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet intersectionExists\r\n\t\t\t\tlet intersects = [];\r\n\r\n\t\t\t\tif (map.tb.enableSelectingObjects) {\r\n\t\t\t\t\t// calculate objects intersecting the picking ray\r\n\t\t\t\t\tintersects = this.tb.queryRenderedFeatures(e.point);\r\n\t\t\t\t}\r\n\t\t\t\tintersectionExists = typeof intersects[0] == 'object';\r\n\r\n\t\t\t\t// if intersect exists, highlight it, if not check the extrusion layer\r\n\t\t\t\tif (intersectionExists) {\r\n\t\t\t\t\tlet nearestObject = Threebox.prototype.findParent3DObject(intersects[0]);\r\n\t\t\t\t\tif (nearestObject) {\r\n\t\t\t\t\t\tthis.outFeature(this.overedFeature);\r\n\t\t\t\t\t\tthis.getCanvasContainer().style.cursor = 'pointer';\r\n\t\t\t\t\t\tif (!this.selectedObject || nearestObject.uuid != this.selectedObject.uuid) {\r\n\t\t\t\t\t\t\tif (this.overedObject && this.overedObject.uuid != nearestObject.uuid) {\r\n\t\t\t\t\t\t\t\tthis.outObject();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnearestObject.over = true;\r\n\t\t\t\t\t\t\tthis.overedObject = nearestObject;\r\n\t\t\t\t\t\t} else if (this.selectedObject && nearestObject.uuid == this.selectedObject.uuid) {\r\n\t\t\t\t\t\t\tnearestObject.over = true;\r\n\t\t\t\t\t\t\tthis.overedObject = nearestObject;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.repaint = true;\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//clean the object overed\r\n\t\t\t\t\tif (this.overedObject) { this.outObject(); }\r\n\t\t\t\t\t//now let's check the extrusion layer objects\r\n\t\t\t\t\tlet features = [];\r\n\t\t\t\t\tif (map.tb.enableSelectingFeatures) {\r\n\t\t\t\t\t\tfeatures = this.queryRenderedFeatures(e.point);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (features.length > 0) {\r\n\t\t\t\t\t\tthis.outFeature(features[0]);\r\n\r\n\t\t\t\t\t\tif (features[0].layer.type == 'fill-extrusion' && typeof features[0].id != 'undefined') {\r\n\t\t\t\t\t\t\tif ((!this.selectedFeature || this.selectedFeature.id != features[0].id)) {\r\n\t\t\t\t\t\t\t\tthis.getCanvasContainer().style.cursor = 'pointer';\r\n\t\t\t\t\t\t\t\tthis.overedFeature = features[0];\r\n\t\t\t\t\t\t\t\tthis.setFeatureState(\r\n\t\t\t\t\t\t\t\t\t{ source: this.overedFeature.source, sourceLayer: this.overedFeature.sourceLayer, id: this.overedFeature.id },\r\n\t\t\t\t\t\t\t\t\t{ hover: true }\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tthis.overedFeature = map.queryRenderedFeatures({ layers: [this.overedFeature.layer.id], filter: [\"==\", ['id'], this.overedFeature.id] })[0];\r\n\t\t\t\t\t\t\t\tthis.addTooltip(this.overedFeature);\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseDown = function (e) {\r\n\r\n\t\t\t\t// Continue the rest of the function shiftkey or altkey are pressed, and if object is selected\r\n\t\t\t\tif (!((e.originalEvent.shiftKey || e.originalEvent.altKey || e.originalEvent.ctrlKey) && e.originalEvent.button === 0 && this.selectedObject)) return;\r\n\t\t\t\tif (!map.tb.enableDraggingObjects && !map.tb.enableRotatingObjects) return;\r\n\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tmap.getCanvasContainer().style.cursor = 'move';\r\n\r\n\t\t\t\t// Disable default drag zooming when the shift key is held down.\r\n\t\t\t\t//map.dragPan.disable();\r\n\r\n\t\t\t\t// Call functions for the following events\r\n\t\t\t\tmap.once('mouseup', this.onMouseUp);\r\n\t\t\t\t//map.once('mouseout', this.onMouseUp);\r\n\r\n\t\t\t\t// move the selected object\r\n\t\t\t\tthis.draggedObject = this.selectedObject;\r\n\r\n\t\t\t\t// Capture the first xy coordinates\r\n\t\t\t\tstart = mousePos(e);\r\n\t\t\t\tstartCoords = this.draggedObject.coordinates;\r\n\r\n\t\t\t\trotationDiff = utils.degreeify(this.draggedObject.rotation);\r\n\t\t\t\tlngDiff = startCoords[0] - e.lngLat.lng;\r\n\t\t\t\tlatDiff = startCoords[1] - e.lngLat.lat;\r\n\t\t\t\taltDiff = -this.draggedObject.modelHeight - (e.point.y * this.tb.altitudeStep);\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseUp = function (e) {\r\n\r\n\t\t\t\t// Set a UI indicator for dragging.\r\n\t\t\t\tthis.getCanvasContainer().style.cursor = this.tb.defaultCursor;\r\n\r\n\t\t\t\t// Remove these events now that finish has been called.\r\n\t\t\t\t//map.off('mousemove', onMouseMove);\r\n\t\t\t\tthis.off('mouseup', this.onMouseUp);\r\n\t\t\t\tthis.off('mouseout', this.onMouseUp);\r\n\t\t\t\tthis.dragPan.enable();\r\n\r\n\t\t\t\tif (this.draggedObject) {\r\n\t\t\t\t\tthis.draggedObject.dispatchEvent({ type: 'ObjectDragged', detail: { draggedObject: this.draggedObject, draggedAction: draggedAction } });\r\n\t\t\t\t\tthis.draggedObject.removeHelp();\r\n\t\t\t\t\tthis.draggedObject = null;\r\n\t\t\t\t\tdraggedAction = null;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseOut = function (e) {\r\n\t\t\t\tif (this.overedFeature) {\r\n\t\t\t\t\tlet features = this.queryRenderedFeatures(e.point);\r\n\t\t\t\t\tif (features.length > 0 && this.overedFeature.id != features[0].id) {\r\n\t\t\t\t\t\tthis.getCanvasContainer().style.cursor = this.tb.defaultCursor;\r\n\t\t\t\t\t\t//only unover when new feature is another\r\n\t\t\t\t\t\tthis.outFeature(features[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.onZoom = function (e) {\r\n\t\t\t\tthis.tb.zoomLayers.forEach((l) => { this.tb.toggleLayer(l); });\r\n\t\t\t\tthis.tb.setObjectsScale();\r\n\t\t\t}\r\n\r\n\t\t\tlet ctrlDown = false;\r\n\t\t\tlet shiftDown = false;\r\n\t\t\tlet ctrlKey = 17, cmdKey = 91, shiftKey = 16, sK = 83, dK = 68;\r\n\r\n\t\t\tfunction onKeyDown(e) {\r\n\r\n\t\t\t\tif (e.which === ctrlKey || e.which === cmdKey) ctrlDown = true;\r\n\t\t\t\tif (e.which === shiftKey) shiftDown = true;\r\n\t\t\t\tlet obj = this.selectedObject;\r\n\t\t\t\tif (shiftDown && e.which === sK && obj) {\r\n\t\t\t\t\t//shift + sS\r\n\t\t\t\t\tlet dc = utils.toDecimal;\r\n\t\t\t\t\tif (!obj.help) {\r\n\t\t\t\t\t\tlet s = obj.modelSize;\r\n\t\t\t\t\t\tlet sf = 1;\r\n\t\t\t\t\t\tif (obj.userData.units !== 'meters') {\r\n\t\t\t\t\t\t\t//if not meters, calculate scale to the current lat\r\n\t\t\t\t\t\t\tsf = utils.projectedUnitsPerMeter(obj.coordinates[1]);\r\n\t\t\t\t\t\t\tif (!sf) { sf = 1; };\r\n\t\t\t\t\t\t\tsf = dc(sf, 7);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (map.tb.enableHelpTooltips) obj.addHelp(\"size(m): \" + dc((s.x / sf), 3) + \" W, \" + dc((s.y / sf), 3) + \" L, \" + dc((s.z / sf), 3) + \" H\");\r\n\t\t\t\t\t\tthis.repaint = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tobj.removeHelp();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfunction onKeyUp (e) {\r\n\t\t\t\tif (e.which == ctrlKey || e.which == cmdKey) ctrlDown = false;\r\n\t\t\t\tif (e.which === shiftKey) shiftDown = false;\r\n\t\t\t}\r\n\r\n\t\t\t//listener to the events\r\n\t\t\t//this.on('contextmenu', map.onContextMenu);\r\n\t\t\tthis.on('click', this.onClick);\r\n\t\t\tthis.on('mousemove', this.onMouseMove);\r\n\t\t\tthis.on('mouseout', this.onMouseOut)\r\n\t\t\tthis.on('mousedown', this.onMouseDown);\r\n\t\t\tthis.on('zoom', this.onZoom);\r\n\t\t\tthis.on('zoomend', this.onZoom);\r\n\r\n\t\t\tdocument.addEventListener('keydown', onKeyDown.bind(this), true);\r\n\t\t\tdocument.addEventListener('keyup', onKeyUp.bind(this));\r\n\r\n\t\t});\r\n\r\n\t},\r\n\r\n\t//[jscastro] added property to manage an athmospheric sky layer\r\n\tget sky() { return this.options.sky; },\r\n\tset sky(value) {\r\n\t\tif (value) {\r\n\t\t\tthis.createSkyLayer();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeLayer(this.skyLayerName);\r\n\t\t}\r\n\t\tthis.options.sky = value;\r\n\t},\r\n\r\n\t//[jscastro] added property to manage an athmospheric sky layer\r\n\tget terrain() { return this.options.terrain; },\r\n\tset terrain(value) {\r\n\t\tthis.terrainLayerName = '';\r\n\t\tif (value) {\r\n\t\t\tthis.createTerrainLayer();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.mapboxVersion < 2.0) { console.warn(\"Terrain layer are only supported by Mapbox-gl-js > v2.0\"); return };\r\n\r\n\t\t\tif (this.map.getTerrain()) {\r\n\t\t\t\tthis.map.setTerrain(null); //\r\n\t\t\t\tthis.map.removeSource(this.terrainSourceName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.options.terrain = value;\r\n\t},\r\n\r\n\t//[jscastro] added property to manage FOV for perspective camera\r\n\tget fov() { return this.options.fov;},\r\n\tset fov(value) {\r\n\t\tif (this.camera instanceof THREE.PerspectiveCamera && this.options.fov !== value) {\r\n\t\t\tthis.map.transform.fov = value;\r\n\t\t\tthis.camera.fov = this.map.transform.fov;\r\n\t\t\tthis.cameraSync.setupCamera();\r\n\t\t\tthis.map.repaint = true;\r\n\t\t\tthis.options.fov = value;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t//[jscastro] added property to manage camera type\r\n\tget orthographic() { return this.options.orthographic; },\r\n\tset orthographic(value) {\r\n\t\tconst h = this.map.getCanvas().clientHeight;\r\n\t\tconst w = this.map.getCanvas().clientWidth;\r\n\t\tif (value) {\r\n\t\t\tthis.map.transform.fov = 0;\r\n\t\t\tthis.camera = new THREE.OrthographicCamera(w / - 2, w / 2, h / 2, h / - 2, 0.1, 1e21);\r\n\t\t} else {\r\n\t\t\tthis.map.transform.fov = this.fov;\r\n\t\t\tthis.camera = new THREE.PerspectiveCamera(this.map.transform.fov, w / h, 0.1, 1e21);\r\n\t\t}\r\n\t\tthis.camera.layers.enable(0);\r\n\t\tthis.camera.layers.enable(1);\r\n\t\t// The CameraSync object will keep the Mapbox and THREE.js camera movements in sync.\r\n\t\t// It requires a world group to scale as we zoom in. Rotation is handled in the camera's\r\n\t\t// projection matrix itself (as is field of view and near/far clipping)\r\n\t\t// It automatically registers to listen for move events on the map so we don't need to do that here\r\n\t\tthis.cameraSync = new CameraSync(this.map, this.camera, this.world);\r\n\t\tthis.map.repaint = true; // repaint the map\r\n\t\tthis.options.orthographic = value;\r\n\r\n\t},\r\n\r\n\t//[jscastro] method to create an athmospheric sky layer\r\n\tcreateSkyLayer: function () {\r\n\t\tif (this.mapboxVersion < 2.0) { console.warn(\"Sky layer are only supported by Mapbox-gl-js > v2.0\"); this.options.sky = false; return };\r\n\r\n\t\tlet layer = this.map.getLayer(this.skyLayerName);\r\n\t\tif (!layer) {\r\n\t\t\tthis.map.addLayer({\r\n\t\t\t\t'id': this.skyLayerName,\r\n\t\t\t\t'type': 'sky',\r\n\t\t\t\t'paint': {\r\n\t\t\t\t\t'sky-opacity': [\r\n\t\t\t\t\t\t'interpolate',\r\n\t\t\t\t\t\t['linear'],\r\n\t\t\t\t\t\t['zoom'],\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t5,\r\n\t\t\t\t\t\t0.3,\r\n\t\t\t\t\t\t8,\r\n\t\t\t\t\t\t1\r\n\t\t\t\t\t],\r\n\t\t\t\t\t// set up the sky layer for atmospheric scattering\r\n\t\t\t\t\t'sky-type': 'atmosphere',\r\n\t\t\t\t\t// explicitly set the position of the sun rather than allowing the sun to be attached to the main light source\r\n\t\t\t\t\t'sky-atmosphere-sun': this.getSunSky(this.lightDateTime),\r\n\t\t\t\t\t// set the intensity of the sun as a light source (0-100 with higher values corresponding to brighter skies)\r\n\t\t\t\t\t'sky-atmosphere-sun-intensity': 10\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.map.once('idle', () => {\r\n\t\t\t\tthis.setSunlight();\r\n\t\t\t\tthis.repaint();\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] method to create a terrain layer\r\n\tcreateTerrainLayer: function () {\r\n\t\tif (this.mapboxVersion < 2.0) { console.warn(\"Terrain layer are only supported by Mapbox-gl-js > v2.0\"); this.options.terrain = false; return };\r\n\t\tlet layer = this.map.getTerrain();\r\n\t\tif (!layer) {\r\n\t\t\t// add the DEM source as a terrain layer with exaggerated height\r\n\t\t\tthis.map.addSource(this.terrainSourceName, {\r\n\t\t\t\t'type': 'raster-dem',\r\n\t\t\t\t'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n\t\t\t\t'tileSize': 512,\r\n\t\t\t\t'maxzoom': 14\r\n\t\t\t});\r\n\t\t\tthis.map.setTerrain({ 'source': this.terrainSourceName, 'exaggeration': this.terrainExaggeration });\r\n\t\t\tthis.map.once('idle', () => {\r\n\t\t\t\t//alert(\"idle\");\r\n\t\t\t\tthis.cameraSync.updateCamera();\r\n\t\t\t\tthis.repaint();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t},\r\n\r\n\t// Objects\r\n\tsphere: function (options) {\r\n\t\tthis.setDefaultView(options, this.options);\r\n\t\treturn sphere(options, this.world)\r\n\t},\r\n\r\n\tline: line,\r\n\r\n\tlabel: label,\r\n\r\n\ttooltip: tooltip,\r\n\r\n\ttube: function (options) {\r\n\t\tthis.setDefaultView(options, this.options);\r\n\t\treturn tube(options, this.world)\r\n\t},\r\n\r\n\textrusion: function (options) {\r\n\t\tthis.setDefaultView(options, this.options);\r\n\t\treturn extrusion(options);\r\n\t},\r\n\r\n\tObject3D: function (options) {\r\n\t\tthis.setDefaultView(options, this.options);\r\n\t\treturn Object3D(options)\r\n\t},\r\n\r\n\tloadObj: async function loadObj(options, cb) {\r\n\t\tthis.setDefaultView(options, this.options);\r\n\t\tif (options.clone === false) {\r\n\t\t\treturn new Promise(\r\n\t\t\t\tasync (resolve) => {\r\n\t\t\t\t\tloader(options, cb, async (obj) => {\r\n\t\t\t\t\t\tresolve(obj);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//[jscastro] new added cache for 3D Objects\r\n\t\t\tlet cache = this.objectsCache.get(options.obj);\r\n\t\t\tif (cache) {\r\n\t\t\t\tcache.promise\r\n\t\t\t\t\t.then(obj => {\r\n\t\t\t\t\t\tcb(obj.duplicate(options));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t\tthis.objectsCache.delete(options.obj);\r\n\t\t\t\t\t\tconsole.error(\"Could not load model file: \" + options.obj);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.objectsCache.set(options.obj, {\r\n\t\t\t\t\tpromise: new Promise(\r\n\t\t\t\t\t\tasync (resolve, reject) => {\r\n\t\t\t\t\t\t\tloader(options, cb, async (obj) => {\r\n\t\t\t\t\t\t\t\tif (obj.duplicate) {\r\n\t\t\t\t\t\t\t\t\tresolve(obj.duplicate());\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treject(obj);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Material\r\n\r\n\tmaterial: function (o) {\r\n\t\treturn material(o)\r\n\t},\r\n\r\n\tinitLights : {\r\n\t\tambientLight: null,\r\n\t\tdirLight: null,\r\n\t\tdirLightBack: null,\r\n\t\tdirLightHelper: null,\r\n\t\themiLight: null,\r\n\t\tpointLight: null\r\n\t},\r\n\r\n\tutils: utils,\r\n\r\n\tSunCalc: SunCalc,\r\n\r\n\tConstants: ThreeboxConstants,\r\n\r\n\tprojectToWorld: function (coords) {\r\n\t\treturn this.utils.projectToWorld(coords)\r\n\t},\r\n\r\n\tunprojectFromWorld: function (v3) {\r\n\t\treturn this.utils.unprojectFromWorld(v3)\r\n\t},\r\n\r\n\tprojectedUnitsPerMeter: function (lat) {\r\n\t\treturn this.utils.projectedUnitsPerMeter(lat)\r\n\t},\r\n\r\n\t//get the center point of a feature\r\n\tgetFeatureCenter: function getFeatureCenter(feature, obj, level) {\r\n\t\treturn utils.getFeatureCenter(feature, obj, level);\r\n\t},\r\n\r\n\tgetObjectHeightOnFloor: function (feature, obj, level) {\r\n\t\treturn utils.getObjectHeightOnFloor(feature, obj, level);\r\n\t},\r\n\r\n\tqueryRenderedFeatures: function (point) {\r\n\r\n\t\tlet mouse = new THREE.Vector2();\r\n\r\n\t\t// // scale mouse pixel position to a percentage of the screen's width and height\r\n\t\tmouse.x = (point.x / this.map.transform.width) * 2 - 1;\r\n\t\tmouse.y = 1 - (point.y / this.map.transform.height) * 2;\r\n\r\n\t\tthis.raycaster.setFromCamera(mouse, this.camera);\r\n\r\n\t\t// calculate objects intersecting the picking ray\r\n\t\tlet intersects = this.raycaster.intersectObjects(this.world.children, true);\r\n\r\n\t\treturn intersects\r\n\t},\r\n\r\n\t//[jscastro] find 3D object of a mesh. this method is needed to know the object of a raycasted mesh\r\n\tfindParent3DObject: function (mesh) {\r\n\t\t//find the Parent Object3D of the mesh captured by Raytracer\r\n\t\tvar result;\r\n\t\tmesh.object.traverseAncestors(function (m) {\r\n\t\t\tif (m.parent)\r\n\t\t\t\tif (m.parent.type == \"Group\" && m.userData.obj) {\r\n\t\t\t\t\tresult = m;\r\n\t\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t},\r\n\r\n\t//[jscastro] method to replicate behaviour of map.setLayoutProperty when Threebox are affected\r\n\tsetLayoutProperty: function (layerId, name, value) {\r\n\t\t//first set layout property at the map\r\n\t\tthis.map.setLayoutProperty(layerId, name, value);\r\n\t\tif (value !== null && value !== undefined) {\r\n\t\t\tif (name === 'visibility') {\r\n\t\t\t\tthis.world.children.filter(o => (o.layer === layerId)).forEach((o) => { o.visibility = value });\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] Custom Layers doesn't work on minzoom and maxzoom attributes, and if the layer is including labels they don't hide either on minzoom\r\n\tsetLayerZoomRange: function (layerId, minZoomLayer, maxZoomLayer) {\r\n\t\tif (this.map.getLayer(layerId)) {\r\n\t\t\tthis.map.setLayerZoomRange(layerId, minZoomLayer, maxZoomLayer);\r\n\t\t\tif (!this.zoomLayers.includes(layerId)) this.zoomLayers.push(layerId);\r\n\t\t\tthis.toggleLayer(layerId);\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] method to set the height of all the objects in a level. this only works if the objects have a geojson feature\r\n\tsetLayerHeigthProperty: function (layerId, level) {\r\n\t\tlet layer = this.map.getLayer(layerId);\r\n\t\tif (!layer) return;\r\n\t\tif (layer.type == \"fill-extrusion\") {\r\n\t\t\tlet data = this.map.getStyle().sources[layer.source].data;\r\n\t\t\tlet features = data.features;\r\n\t\t\tfeatures.forEach(function (f) {\r\n\t\t\t\tf.properties.level = level;\r\n\t\t\t});\r\n\t\t\t//we change the level on the source\r\n\t\t\tthis.map.getSource(layer.source).setData(data);\r\n\t\t} else if (layer.type == \"custom\") {\r\n\t\t\tthis.world.children.forEach(function (obj) {\r\n\t\t\t\tlet feature = obj.userData.feature;\r\n\t\t\t\tif (feature && feature.layer === layerId) {\r\n\t\t\t\t\t//TODO: this could be a multidimensional array\r\n\t\t\t\t\tlet location = this.tb.getFeatureCenter(feature, obj, level);\r\n\t\t\t\t\tobj.setCoords(location);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] method to set globally all the objects that are fixedScale\r\n\tsetObjectsScale: function () {\r\n\t\tthis.world.children.filter(o => (o.fixedZoom != null)).forEach((o) => { o.setObjectScale(this.map.transform.scale); });\r\n\t},\r\n\r\n\t//[jscastro] mapbox setStyle removes all the layers, including custom layers, so tb.world must be cleaned up too\r\n\tsetStyle: function (styleId, options) {\r\n\t\tthis.clear().then(() => {\r\n\t\t\tthis.map.setStyle(styleId, options);\r\n\t\t});\r\n\t},\r\n\r\n\t//[jscastro] method to toggle Layer visibility checking zoom range\r\n\ttoggleLayer: function (layerId, visible = true) {\r\n\t\tlet l = this.map.getLayer(layerId);\r\n\t\tif (l) {\r\n\t\t\tif (!visible) {\r\n\t\t\t\tthis.toggle(l.id, false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet z = this.map.getZoom();\r\n\t\t\tif (l.minzoom && z < l.minzoom) { this.toggle(l.id, false); return; };\r\n\t\t\tif (l.maxzoom && z >= l.maxzoom) { this.toggle(l.id, false); return; };\r\n\t\t\tthis.toggle(l.id, true);\r\n\t\t};\r\n\t},\r\n\r\n\t//[jscastro] method to toggle Layer visibility\r\n\ttoggle: function (layerId, visible) {\r\n\t\t//call\r\n\t\tthis.setLayoutProperty(layerId, 'visibility', (visible ? 'visible' : 'none'))\r\n\t\tthis.labelRenderer.toggleLabels(layerId, visible);\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tif (this.map.repaint) this.map.repaint = false\r\n\r\n\t\tvar timestamp = Date.now();\r\n\r\n\t\t// Update any animations\r\n\t\tthis.objects.animationManager.update(timestamp);\r\n\r\n\t\tthis.updateLightHelper();\r\n\r\n\t\t// Render the scene and repaint the map\r\n\t\tthis.renderer.resetState(); //update threejs r126\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\r\n\t\t// [jscastro] Render any label\r\n\t\tthis.labelRenderer.render(this.scene, this.camera);\r\n\t\tif (this.options.passiveRendering === false) this.map.triggerRepaint();\r\n\t},\r\n\r\n\tadd: function (obj, layerId, sourceId) {\r\n\t\t//[jscastro] remove the tooltip if not enabled\r\n\t\tif (!this.enableTooltips && obj.tooltip) { obj.tooltip.visibility = false };\r\n\t\tthis.world.add(obj);\r\n\t\tif (layerId) {\r\n\t\t\tobj.layer = layerId;\r\n\t\t\tobj.source = sourceId;\r\n\t\t\tlet l = this.map.getLayer(layerId);\r\n\t\t\tif (l) {\r\n\t\t\t\tlet v = l.visibility;\r\n\t\t\t\tlet u = typeof v === 'undefined';\r\n\t\t\t\tobj.visibility = (u || v === 'visible' ? true : false);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveByName: function (name) {\r\n\t\tlet obj = this.world.getObjectByName(name);\r\n\t\tif (obj) this.remove(obj);\r\n\t},\r\n\r\n\tremove: function (obj) {\r\n\t\tif (this.map.selectedObject && obj.uuid == this.map.selectedObject.uuid) this.map.unselectObject();\r\n\t\tif (this.map.draggedObject && obj.uuid == this.map.draggedObject.uuid) this.map.draggedObject = null;\r\n\t\tif (obj.dispose) obj.dispose();\r\n\t\tthis.world.remove(obj);\r\n\t\tobj = null;\r\n\t},\r\n\r\n\t//[jscastro] this clears tb.world in order to dispose properly the resources\r\n\tclear: async function (layerId = null, dispose = false) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet objects = [];\r\n\t\t\tthis.world.children.forEach(function (object) {\r\n\t\t\t\tobjects.push(object);\r\n\t\t\t});\r\n\t\t\tfor (let i = 0; i < objects.length; i++) {\r\n\t\t\t\tlet obj = objects[i];\r\n\t\t\t\t//if layerId, check the layer to remove, otherwise always remove\r\n\t\t\t\tif (obj.layer === layerId || !layerId) {\r\n\t\t\t\t\tthis.remove(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (dispose) {\r\n\t\t\t\tthis.objectsCache.forEach((value) => {\r\n\t\t\t\t\tvalue.promise.then(obj => {\r\n\t\t\t\t\t\tobj.dispose();\r\n\t\t\t\t\t\tobj = null;\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tresolve(\"clear\");\r\n\t\t});\r\n\t},\r\n\r\n\t//[jscastro] remove a layer clearing first the 3D objects from this layer in tb.world\r\n\tremoveLayer: function (layerId) {\r\n\t\tthis.clear(layerId, true).then( () => {\r\n\t\t\tthis.map.removeLayer(layerId);\r\n\t\t});\r\n\t},\r\n\r\n\t//[jscastro] get the sun position (azimuth, altitude) from a given datetime, lng, lat\r\n\tgetSunPosition: function (date, coords) {\r\n\t\treturn SunCalc.getPosition(date || Date.now(), coords[1], coords[0]);  \r\n\t},\r\n\r\n\t//[jscastro] get the sun times for sunrise, sunset, etc.. from a given datetime, lng, lat and alt\r\n\tgetSunTimes: function (date, coords) {\r\n\t\treturn SunCalc.getTimes(date, coords[1], coords[0], (coords[2] ? coords[2] : 0));\r\n\t},\r\n\r\n\t//[jscastro] set shadows for fill-extrusion layers\r\n\tsetBuildingShadows: function (options) {\r\n\t\tif (this.map.getLayer(options.buildingsLayerId)) {\r\n\t\t\tlet layer = new BuildingShadows(options, this);\r\n\t\t\tthis.map.addLayer(layer, options.buildingsLayerId);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn(\"The layer '\" + options.buildingsLayerId + \"' does not exist in the map.\");\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] This method set the sun light for a given datetime and lnglat\r\n\tsetSunlight: function (newDate = new Date(), coords) {\r\n\t\tif (!this.lights.dirLight || !this.options.realSunlight) {\r\n\t\t\tconsole.warn(\"To use setSunlight it's required to set realSunlight : true in Threebox initial options.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar date = new Date(newDate.getTime());\r\n\r\n\t\tif (coords) {\r\n\t\t\tif (coords.lng && coords.lat) this.mapCenter = coords\r\n\t\t\telse this.mapCenter = { lng: coords[0], lat: coords[1] };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.mapCenter = this.map.getCenter();\r\n\t\t}\r\n\r\n\t\tif (this.lightDateTime && this.lightDateTime.getTime() === date.getTime() && this.lightLng === this.mapCenter.lng && this.lightLat === this.mapCenter.lat) {\r\n\t\t\treturn; //setSunLight could be called on render, so due to performance, avoid duplicated calls\r\n\t\t}\r\n\r\n\t\tthis.lightDateTime = date;\r\n\t\tthis.lightLng = this.mapCenter.lng; \r\n\t\tthis.lightLat = this.mapCenter.lat\r\n\t\tthis.sunPosition = this.getSunPosition(date, [this.mapCenter.lng, this.mapCenter.lat]);  \r\n\t\tlet altitude = this.sunPosition.altitude;\r\n\t\tlet azimuth = Math.PI + this.sunPosition.azimuth;\r\n\t\t//console.log(\"Altitude: \" + utils.degreeify(altitude) + \", Azimuth: \" + (utils.degreeify(azimuth)));\r\n\r\n\t\tlet radius = ThreeboxConstants.WORLD_SIZE / 2;\r\n\t\tlet alt = Math.sin(altitude);\r\n\t\tlet altRadius = Math.cos(altitude);\r\n\t\tlet azCos = Math.cos(azimuth) * altRadius;\r\n\t\tlet azSin = Math.sin(azimuth) * altRadius;\r\n\r\n\t\tthis.lights.dirLight.position.set(azSin, azCos, alt);\r\n\t\tthis.lights.dirLight.position.multiplyScalar(radius);\r\n\t\tthis.lights.dirLight.intensity = Math.max(alt, 0);\r\n\t\tthis.lights.hemiLight.intensity = Math.max(alt * 1, 0.1);\r\n\t\t//console.log(\"Intensity:\" + this.lights.dirLight.intensity);\r\n\t\tthis.lights.dirLight.updateMatrixWorld();\r\n\t\tthis.updateLightHelper();\r\n\t\tif (this.map.loaded()) {\r\n\t\t\tthis.updateSunGround(this.sunPosition);\r\n\t\t\tthis.map.setLight({\r\n\t\t\t\tanchor: 'map',\r\n\t\t\t\tposition: [3, 180 + this.sunPosition.azimuth * 180 / Math.PI, 90 - this.sunPosition.altitude * 180 / Math.PI],\r\n\t\t\t\tintensity: Math.cos(this.sunPosition.altitude), //0.4,\r\n\t\t\t\tcolor: `hsl(40, ${50 * Math.cos(this.sunPosition.altitude)}%, ${Math.max(20, 20 + (96 * Math.sin(this.sunPosition.altitude)))}%)`\r\n\r\n\t\t\t}, { duration: 0 });\r\n\t\t\tif (this.sky) { this.updateSunSky(this.getSunSky(date, this.sunPosition));}\r\n\t\t}\r\n\t},\r\n\r\n\tgetSunSky: function (date, sunPos) {\r\n\t\tif (!sunPos) {\r\n\t\t\tvar center = this.map.getCenter();\r\n\t\t\tsunPos = this.getSunPosition(\r\n\t\t\t\tdate || Date.now(), [center.lng, center.lat]\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar sunAzimuth = 180 + (sunPos.azimuth * 180) / Math.PI;\r\n\t\tvar sunAltitude = 90 - (sunPos.altitude * 180) / Math.PI;\r\n\t\treturn [sunAzimuth, sunAltitude];\r\n\t},\r\n\r\n\tupdateSunSky: function (sunPos) {\r\n\t\tif (this.sky) {\r\n\t\t\t// update the `sky-atmosphere-sun` paint property with the position of the sun based on the selected time\r\n\t\t\tthis.map.setPaintProperty(this.skyLayerName, 'sky-atmosphere-sun', sunPos);\r\n\t\t}\r\n\t},\r\n\r\n\tupdateSunGround: function (sunPos) {\r\n\t\tif (this.terrainLayerName != '') {\r\n\t\t\t// update the raster layer paint property with the position of the sun based on the selected time\r\n\t\t\tthis.map.setPaintProperty(this.terrainLayerName, 'raster-opacity', Math.max(Math.min(1, sunPos.altitude * 4), 0.25));\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] this updates the directional light helper\r\n\tupdateLightHelper: function () {\r\n\t\tif (this.lights.dirLightHelper) {\r\n\t\t\tthis.lights.dirLightHelper.position.setFromMatrixPosition(this.lights.dirLight.matrixWorld);\r\n\t\t\tthis.lights.dirLightHelper.updateMatrix();\r\n\t\t\tthis.lights.dirLightHelper.update();\r\n\t\t}\r\n\t},\r\n\r\n\t//[jscastro] method to fully dispose the resources, watch out is you call this without navigating to other page\r\n\tdispose: async function () {\r\n\r\n\t\tconsole.log(this.memory());\r\n\t\t//console.log(window.performance.memory);\r\n\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tresolve(\r\n\t\t\t\tthis.clear(null, true).then((resolve) => {\r\n\t\t\t\t\tthis.map.remove();\r\n\t\t\t\t\tthis.map = {};\r\n\t\t\t\t\tthis.scene.remove(this.world);\r\n\t\t\t\t\tthis.world.children = [];\r\n\t\t\t\t\tthis.world = null;\r\n\t\t\t\t\tthis.objectsCache.clear();\r\n\t\t\t\t\tthis.labelRenderer.dispose();\r\n\t\t\t\t\tconsole.log(this.memory());\r\n\t\t\t\t\tthis.renderer.dispose();\r\n\t\t\t\t\treturn resolve;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\t//console.log(window.performance.memory);\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tdefaultLights: function () {\r\n\r\n\t\tthis.lights.ambientLight = new THREE.AmbientLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.75);\r\n\t\tthis.scene.add(this.lights.ambientLight);\r\n\r\n\t\tthis.lights.dirLightBack = new THREE.DirectionalLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.25);\r\n\t\tthis.lights.dirLightBack.position.set(30, 100, 100);\r\n\t\tthis.scene.add(this.lights.dirLightBack);\r\n\r\n\t\tthis.lights.dirLight  = new THREE.DirectionalLight(new THREE.Color('hsl(0, 0%, 100%)'), 0.25);\r\n\t\tthis.lights.dirLight.position.set(-30, 100, -100);\r\n\t\tthis.scene.add(this.lights.dirLight);\r\n\r\n\t},\r\n\r\n\trealSunlight: function (helper = false) {\r\n\r\n\t\tthis.renderer.shadowMap.enabled = true;\r\n\t\t//this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\t\tthis.lights.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n\t\tthis.scene.add(this.lights.dirLight);\r\n\t\tif (helper) {\r\n\t\t\tthis.lights.dirLightHelper = new THREE.DirectionalLightHelper(this.lights.dirLight, 5);\r\n\t\t\tthis.scene.add(this.lights.dirLightHelper);\r\n\t\t}\r\n\t\tlet d2 = 1000; let r2 = 2; let mapSize2 = 8192;\r\n\t\tthis.lights.dirLight.castShadow = true;\r\n\t\tthis.lights.dirLight.shadow.radius = r2;\r\n\t\tthis.lights.dirLight.shadow.mapSize.width = mapSize2;\r\n\t\tthis.lights.dirLight.shadow.mapSize.height = mapSize2;\r\n\t\tthis.lights.dirLight.shadow.camera.top = this.lights.dirLight.shadow.camera.right = d2;\r\n\t\tthis.lights.dirLight.shadow.camera.bottom = this.lights.dirLight.shadow.camera.left = -d2;\r\n\t\tthis.lights.dirLight.shadow.camera.near = 1;\r\n\t\tthis.lights.dirLight.shadow.camera.visible = true;\r\n\t\tthis.lights.dirLight.shadow.camera.far = 400000000; \r\n\r\n\t\tthis.lights.hemiLight = new THREE.HemisphereLight(new THREE.Color(0xffffff), new THREE.Color(0xffffff), 0.6);\r\n\t\tthis.lights.hemiLight.color.setHSL(0.661, 0.96, 0.12);\r\n\t\tthis.lights.hemiLight.groundColor.setHSL(0.11, 0.96, 0.14);\r\n\t\tthis.lights.hemiLight.position.set(0, 0, 50);\r\n\t\tthis.scene.add(this.lights.hemiLight);\r\n\t\tthis.setSunlight();\r\n\r\n\t\tthis.map.once('idle', () => {\r\n\t\t\tthis.setSunlight();\r\n\t\t\tthis.repaint();\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tsetDefaultView: function (options, defOptions) {\r\n\t\toptions.bbox = (options.bbox || options.bbox == null) && defOptions.enableSelectingObjects;\r\n\t\toptions.tooltip = (options.tooltip || options.tooltip == null) && defOptions.enableTooltips;\r\n\t\toptions.mapScale = this.map.transform.scale;\r\n\t},\r\n\r\n\tmemory: function () { return this.renderer.info.memory },\r\n\r\n\tprograms: function () { return this.renderer.info.programs.length },\r\n\r\n\tversion: '2.2.7',\r\n\r\n}\r\n\r\nvar defaultOptions = {\r\n\tdefaultLights: false,\r\n\trealSunlight: false,\r\n\trealSunlightHelper: false,\r\n\tpassiveRendering: true,\r\n\tpreserveDrawingBuffer: false,\r\n\tenableSelectingFeatures: false,\r\n\tenableSelectingObjects: false,\r\n\tenableDraggingObjects: false,\r\n\tenableRotatingObjects: false,\r\n\tenableTooltips: false,\r\n\tenableHelpTooltips: false,\r\n\tmultiLayer: false,\r\n\torthographic: false,\r\n\tfov: ThreeboxConstants.FOV_DEGREES,\r\n\tsky: false,\r\n\tterrain: false\r\n}\r\nmodule.exports = exports = Threebox;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}