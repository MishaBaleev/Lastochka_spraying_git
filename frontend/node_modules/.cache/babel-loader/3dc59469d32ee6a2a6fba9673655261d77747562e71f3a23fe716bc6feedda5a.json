{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport mapboxgl from 'mapbox-gl';\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    modal_message: {\n      active: \"\",\n      heading: \"\",\n      message: \"\",\n      aftermath: \"\"\n    }\n  },\n  reducers: {\n    update_modal_message: (state, action) => {\n      console.log(action);\n      state.modal_message = {\n        ...state.modal_message,\n        active: action.payload.active,\n        heading: action.payload.heading,\n        message: action.payload.message,\n        aftermath: action.payload.aftermath ? action.payload.aftermath : \"\",\n        actions: action.payload.actions ? action.payload.actions : false,\n        dataForUpload: action.payload.dataForUpload ? action.payload.dataForUpload : \"\"\n      };\n    }\n  }\n});\nexport const {\n  update_modal_message\n} = appSlice.actions;\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","mapboxgl","appSlice","name","initialState","modal_message","active","heading","message","aftermath","reducers","update_modal_message","state","action","console","log","payload","actions","dataForUpload","reducer"],"sources":["/Users/mihailbaleev/Documents/GitHub/Lastochka_spraying/frontend/src/AppSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport mapboxgl from 'mapbox-gl';\n\nexport const appSlice = createSlice({\n    name: 'app',\n    initialState: {\n        modal_message:{\n            active:\"\",\n            heading:\"\",\n            message:\"\",\n            aftermath:\"\"\n        },\n    },\n    reducers: {\n        update_modal_message: (state, action) => {\n            console.log(action)\n            state.modal_message = {\n                ...(state.modal_message),\n                active:action.payload.active,\n                heading:action.payload.heading,\n                message:action.payload.message,\n                aftermath:action.payload.aftermath?action.payload.aftermath:\"\",\n                actions:action.payload.actions?action.payload.actions:false,\n                dataForUpload:action.payload.dataForUpload?action.payload.dataForUpload:\"\"\n            }\n        },\n    }\n})\nexport const {update_modal_message} = appSlice.actions\n  \nexport default appSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAO,MAAMC,QAAQ,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACVC,aAAa,EAAC;MACVC,MAAM,EAAC,EAAE;MACTC,OAAO,EAAC,EAAE;MACVC,OAAO,EAAC,EAAE;MACVC,SAAS,EAAC;IACd;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,oBAAoB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBD,KAAK,CAACP,aAAa,GAAG;QAClB,GAAIO,KAAK,CAACP,aAAc;QACxBC,MAAM,EAACO,MAAM,CAACG,OAAO,CAACV,MAAM;QAC5BC,OAAO,EAACM,MAAM,CAACG,OAAO,CAACT,OAAO;QAC9BC,OAAO,EAACK,MAAM,CAACG,OAAO,CAACR,OAAO;QAC9BC,SAAS,EAACI,MAAM,CAACG,OAAO,CAACP,SAAS,GAACI,MAAM,CAACG,OAAO,CAACP,SAAS,GAAC,EAAE;QAC9DQ,OAAO,EAACJ,MAAM,CAACG,OAAO,CAACC,OAAO,GAACJ,MAAM,CAACG,OAAO,CAACC,OAAO,GAAC,KAAK;QAC3DC,aAAa,EAACL,MAAM,CAACG,OAAO,CAACE,aAAa,GAACL,MAAM,CAACG,OAAO,CAACE,aAAa,GAAC;MAC5E,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACP;AAAoB,CAAC,GAAGT,QAAQ,CAACe,OAAO;AAEtD,eAAef,QAAQ,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}