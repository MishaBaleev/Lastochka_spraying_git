{"ast":null,"code":"/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n*/\nconst utils = require(\"../utils/utils.js\");\nconst material = require(\"../utils/material.js\");\nconst Objects = require('./objects.js');\nconst THREE = require(\"../three.js\");\nconst Object3D = require('./Object3D.js');\nfunction tube(opt, world) {\n  // validate and prep input geometry\n  opt = utils._validate(opt, Objects.prototype._defaults.tube);\n  let points = [];\n  opt.geometry.forEach(p => {\n    points.push(new THREE.Vector3(p[0], p[1], p[2]));\n  });\n  const curve = new THREE.CatmullRomCurve3(points);\n  let tube = new THREE.TubeGeometry(curve, points.length, opt.radius, opt.sides, false);\n  let mat = material(opt);\n  let obj = new THREE.Mesh(tube, mat);\n  //[jscastro] we convert it in Object3D to add methods, bounding box, model, tooltip...\n  return new Object3D({\n    obj: obj,\n    units: opt.units,\n    anchor: opt.anchor,\n    adjustment: opt.adjustment,\n    bbox: opt.bbox,\n    tooltip: opt.tooltip,\n    raycasted: opt.raycasted\n  });\n}\nmodule.exports = exports = tube;","map":{"version":3,"names":["utils","require","material","Objects","THREE","Object3D","tube","opt","world","_validate","prototype","_defaults","points","geometry","forEach","p","push","Vector3","curve","CatmullRomCurve3","TubeGeometry","length","radius","sides","mat","obj","Mesh","units","anchor","adjustment","bbox","tooltip","raycasted","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/Lastochka_spraying/frontend/node_modules/threebox-plugin/src/objects/tube.js"],"sourcesContent":["/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n*/\r\nconst utils = require(\"../utils/utils.js\");\r\nconst material = require(\"../utils/material.js\");\r\nconst Objects = require('./objects.js');\r\nconst THREE = require(\"../three.js\");\r\nconst Object3D = require('./Object3D.js');\r\n\r\nfunction tube(opt, world){\r\n\r\n\t// validate and prep input geometry\r\n\topt = utils._validate(opt, Objects.prototype._defaults.tube);\r\n\r\n\tlet points = []\r\n\topt.geometry.forEach(p => {\r\n\t\tpoints.push(new THREE.Vector3(p[0], p[1], p[2]));\r\n\t})\r\n\tconst curve = new THREE.CatmullRomCurve3(points);\r\n\tlet tube = new THREE.TubeGeometry(curve, points.length, opt.radius, opt.sides, false);\r\n\tlet mat = material(opt);\r\n\tlet obj = new THREE.Mesh(tube, mat);\r\n\t//[jscastro] we convert it in Object3D to add methods, bounding box, model, tooltip...\r\n\treturn new Object3D({ obj: obj, units: opt.units, anchor: opt.anchor, adjustment: opt.adjustment, bbox: opt.bbox, tooltip: opt.tooltip, raycasted: opt.raycasted });\r\n}\r\n\r\nmodule.exports = exports = tube;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAME,OAAO,GAAGF,OAAO,CAAC,cAAc,CAAC;AACvC,MAAMG,KAAK,GAAGH,OAAO,CAAC,aAAa,CAAC;AACpC,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAEzC,SAASK,IAAIA,CAACC,GAAG,EAAEC,KAAK,EAAC;EAExB;EACAD,GAAG,GAAGP,KAAK,CAACS,SAAS,CAACF,GAAG,EAAEJ,OAAO,CAACO,SAAS,CAACC,SAAS,CAACL,IAAI,CAAC;EAE5D,IAAIM,MAAM,GAAG,EAAE;EACfL,GAAG,CAACM,QAAQ,CAACC,OAAO,CAACC,CAAC,IAAI;IACzBH,MAAM,CAACI,IAAI,CAAC,IAAIZ,KAAK,CAACa,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;EACF,MAAMG,KAAK,GAAG,IAAId,KAAK,CAACe,gBAAgB,CAACP,MAAM,CAAC;EAChD,IAAIN,IAAI,GAAG,IAAIF,KAAK,CAACgB,YAAY,CAACF,KAAK,EAAEN,MAAM,CAACS,MAAM,EAAEd,GAAG,CAACe,MAAM,EAAEf,GAAG,CAACgB,KAAK,EAAE,KAAK,CAAC;EACrF,IAAIC,GAAG,GAAGtB,QAAQ,CAACK,GAAG,CAAC;EACvB,IAAIkB,GAAG,GAAG,IAAIrB,KAAK,CAACsB,IAAI,CAACpB,IAAI,EAAEkB,GAAG,CAAC;EACnC;EACA,OAAO,IAAInB,QAAQ,CAAC;IAAEoB,GAAG,EAAEA,GAAG;IAAEE,KAAK,EAAEpB,GAAG,CAACoB,KAAK;IAAEC,MAAM,EAAErB,GAAG,CAACqB,MAAM;IAAEC,UAAU,EAAEtB,GAAG,CAACsB,UAAU;IAAEC,IAAI,EAAEvB,GAAG,CAACuB,IAAI;IAAEC,OAAO,EAAExB,GAAG,CAACwB,OAAO;IAAEC,SAAS,EAAEzB,GAAG,CAACyB;EAAU,CAAC,CAAC;AACpK;AAEAC,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAG5B,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}