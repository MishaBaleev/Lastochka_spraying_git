{"ast":null,"code":"/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n*/\nconst THREE = require('../three.js');\nconst utils = require(\"../utils/utils.js\");\nfunction AnimationManager(map) {\n  this.map = map;\n  this.enrolledObjects = [];\n  this.previousFrameTime;\n}\n;\nAnimationManager.prototype = {\n  unenroll: function (obj) {\n    this.enrolledObjects.splice(this.enrolledObjects.indexOf(obj), 1);\n  },\n  enroll: function (obj) {\n    //[jscastro] add the object default animations\n    obj.clock = new THREE.Clock();\n    obj.hasDefaultAnimation = false;\n    obj.defaultAction;\n    obj.actions = [];\n    obj.mixer;\n\n    //[jscastro] if the object includes animations\n    if (obj.animations && obj.animations.length > 0) {\n      obj.hasDefaultAnimation = true;\n\n      //check first if a defaultAnimation is defined by options\n      let daIndex = obj.userData.defaultAnimation ? obj.userData.defaultAnimation : 0;\n      obj.mixer = new THREE.AnimationMixer(obj);\n      setAction(daIndex);\n    }\n\n    //[jscastro] set the action to play\n    function setAction(animationIndex) {\n      for (let i = 0; i < obj.animations.length; i++) {\n        if (animationIndex > obj.animations.length) console.log(\"The animation index \" + animationIndex + \" doesn't exist for this object\");\n        let animation = obj.animations[i];\n        let action = obj.mixer.clipAction(animation);\n        obj.actions.push(action);\n\n        //select the default animation and set the weight to 1\n        if (animationIndex === i) {\n          obj.defaultAction = action;\n          action.setEffectiveWeight(1);\n        } else {\n          action.setEffectiveWeight(0);\n        }\n        action.play();\n      }\n    }\n    let _isPlaying = false;\n    //[jscastro] added property for isPlaying state\n    Object.defineProperty(obj, 'isPlaying', {\n      get() {\n        return _isPlaying;\n      },\n      set(value) {\n        if (_isPlaying != value) {\n          _isPlaying = value;\n          // Dispatch new event IsPlayingChanged\n          obj.dispatchEvent({\n            type: 'IsPlayingChanged',\n            detail: obj\n          });\n        }\n      }\n    });\n\n    /* Extend the provided object with animation-specific properties and track in the animation manager */\n    this.enrolledObjects.push(obj);\n\n    // Give this object its own internal animation queue\n    obj.animationQueue = [];\n    obj.set = function (options) {\n      //if duration is set, animate to the new state\n      if (options.duration > 0) {\n        let newParams = {\n          start: Date.now(),\n          expiration: Date.now() + options.duration,\n          endState: {}\n        };\n        utils.extend(options, newParams);\n        let translating = options.coords;\n        let rotating = options.rotation;\n        let scaling = options.scale || options.scaleX || options.scaleY || options.scaleZ;\n        if (rotating) {\n          let r = obj.rotation;\n          options.startRotation = [r.x, r.y, r.z];\n          options.endState.rotation = utils.types.rotation(options.rotation, options.startRotation);\n          options.rotationPerMs = options.endState.rotation.map(function (angle, index) {\n            return (angle - options.startRotation[index]) / options.duration;\n          });\n        }\n        if (scaling) {\n          let s = obj.scale;\n          options.startScale = [s.x, s.y, s.z];\n          options.endState.scale = utils.types.scale(options.scale, options.startScale);\n          options.scalePerMs = options.endState.scale.map(function (scale, index) {\n            return (scale - options.startScale[index]) / options.duration;\n          });\n        }\n        if (translating) options.pathCurve = new THREE.CatmullRomCurve3(utils.lnglatsToWorld([obj.coordinates, options.coords]));\n        let entry = {\n          type: 'set',\n          parameters: options\n        };\n        this.animationQueue.push(entry);\n        tb.map.repaint = true;\n      }\n\n      //if no duration set, stop object's existing animations and go to that state immediately\n      else {\n        this.stop();\n        options.rotation = utils.radify(options.rotation);\n        this._setObject(options);\n      }\n      return this;\n    };\n\n    //[jscastro] animation method, is set by update method\n    obj.animationMethod = null;\n\n    //[jscastro] stop animation and the queue\n    obj.stop = function (index) {\n      if (obj.mixer) {\n        obj.isPlaying = false;\n        cancelAnimationFrame(obj.animationMethod);\n      }\n      //TODO: if this is removed, it produces an error in \n      this.animationQueue = [];\n      return this;\n    };\n    obj.followPath = function (options, cb) {\n      let entry = {\n        type: 'followPath',\n        parameters: utils._validate(options, defaults.followPath)\n      };\n      utils.extend(entry.parameters, {\n        pathCurve: new THREE.CatmullRomCurve3(utils.lnglatsToWorld(options.path)),\n        start: Date.now(),\n        expiration: Date.now() + entry.parameters.duration,\n        cb: cb\n      });\n      this.animationQueue.push(entry);\n      tb.map.repaint = true;\n      return this;\n    };\n    obj._setObject = function (options) {\n      //default scale always\n      obj.setScale();\n      let p = options.position; // lnglat\n      let r = options.rotation; // radians\n      let s = options.scale; // custom scale\n      let w = options.worldCoordinates; //Vector3\n      let q = options.quaternion; // [axis, angle in rads]\n      let t = options.translate; // [jscastro] lnglat + height for 3D objects\n      let wt = options.worldTranslate; // [jscastro] Vector3 translation\n\n      if (p) {\n        this.coordinates = p;\n        let c = utils.projectToWorld(p);\n        this.position.copy(c);\n      }\n      if (t) {\n        this.coordinates = [this.coordinates[0] + t[0], this.coordinates[1] + t[1], this.coordinates[2] + t[2]];\n        let c = utils.projectToWorld(t);\n        this.position.copy(c);\n        //this.translateX(c.x);\n        //this.translateY(c.y);\n        //this.translateZ(c.z);\n        options.position = this.coordinates;\n      }\n      if (wt) {\n        this.translateX(wt.x);\n        this.translateY(wt.y);\n        this.translateZ(wt.z);\n        let p = utils.unprojectFromWorld(this.position);\n        this.coordinates = options.position = p;\n      }\n      if (r) {\n        this.rotation.set(r[0], r[1], r[2]);\n        options.rotation = new THREE.Vector3(r[0], r[1], r[2]);\n      }\n      if (s) {\n        this.scale.set(s[0], s[1], s[2]);\n        options.scale = this.scale;\n      }\n      if (q) {\n        this.quaternion.setFromAxisAngle(q[0], q[1]);\n        options.rotation = q[0].multiplyScalar(q[1]);\n      }\n      if (w) {\n        this.position.copy(w);\n        let p = utils.unprojectFromWorld(w);\n        this.coordinates = options.position = p;\n      }\n\n      //Each time the object is positioned, project the floor and correct shadow plane\n      this.setBoundingBoxShadowFloor();\n      this.setReceiveShadowFloor();\n      this.updateMatrixWorld();\n      tb.map.repaint = true;\n\n      //const threeTarget = new THREE.EventDispatcher();\n      //threeTarget.dispatchEvent({ type: 'event', detail: { object: this, action: { position: options.position, rotation: options.rotation, scale: options.scale } } });\n      // fire the ObjectChanged event to notify UI object change\n      let e = {\n        type: 'ObjectChanged',\n        detail: {\n          object: this,\n          action: {\n            position: options.position,\n            rotation: options.rotation,\n            scale: options.scale\n          }\n        }\n      };\n      this.dispatchEvent(e);\n    };\n\n    //[jscastro] play default animation\n    obj.playDefault = function (options) {\n      if (obj.mixer && obj.hasDefaultAnimation) {\n        let newParams = {\n          start: Date.now(),\n          expiration: Date.now() + options.duration,\n          endState: {}\n        };\n        utils.extend(options, newParams);\n        obj.mixer.timeScale = options.speed || 1;\n        let entry = {\n          type: 'playDefault',\n          parameters: options\n        };\n        this.animationQueue.push(entry);\n        tb.map.repaint = true;\n        return this;\n      }\n    };\n\n    //[jscastro] play an animation, requires options.animation as an index, if not it will play the default one\n    obj.playAnimation = function (options) {\n      if (obj.mixer) {\n        if (options.animation) {\n          setAction(options.animation);\n        }\n        obj.playDefault(options);\n      }\n    };\n\n    //[jscastro] pause all actions animation\n    obj.pauseAllActions = function () {\n      if (obj.mixer) {\n        obj.actions.forEach(function (action) {\n          action.paused = true;\n        });\n      }\n    };\n\n    //[jscastro] unpause all actions\n    obj.unPauseAllActions = function () {\n      if (obj.mixer) {\n        obj.actions.forEach(function (action) {\n          action.paused = false;\n        });\n      }\n    };\n\n    //[jscastro] stop all actions\n    obj.deactivateAllActions = function () {\n      if (obj.mixer) {\n        obj.actions.forEach(function (action) {\n          action.stop();\n        });\n      }\n    };\n\n    //[jscastro] play all actions\n    obj.activateAllActions = function () {\n      if (obj.mixer) {\n        obj.actions.forEach(function (action) {\n          action.play();\n        });\n      }\n    };\n\n    //[jscastro] move the model action one tick just to avoid issues with initial position\n    obj.idle = function () {\n      if (obj.mixer) {\n        // Update the animation mixer and render this frame\n        obj.mixer.update(0.01);\n      }\n      tb.map.repaint = true;\n      return this;\n    };\n  },\n  update: function (now) {\n    if (this.previousFrameTime === undefined) this.previousFrameTime = now;\n    let dimensions = ['X', 'Y', 'Z'];\n\n    //[jscastro] when function expires this produces an error\n    if (!this.enrolledObjects) return false;\n\n    //iterate through objects in queue. count in reverse so we can cull objects without frame shifting\n    for (let a = this.enrolledObjects.length - 1; a >= 0; a--) {\n      let object = this.enrolledObjects[a];\n      if (!object.animationQueue || object.animationQueue.length === 0) continue;\n\n      //[jscastro] now multiple animations on a single object is possible\n      for (let i = object.animationQueue.length - 1; i >= 0; i--) {\n        //focus on first item in queue\n        let item = object.animationQueue[i];\n        if (!item) continue;\n        let options = item.parameters;\n\n        // if an animation is past its expiration date, cull it\n        if (!options.expiration) {\n          // console.log('culled')\n\n          object.animationQueue.splice(i, 1);\n\n          // set the start time of the next animation\n          if (object.animationQueue[i]) object.animationQueue[i].parameters.start = now;\n          return;\n        }\n\n        //if finished, jump to end state and flag animation entry for removal next time around. Execute callback if there is one\n        let expiring = now >= options.expiration;\n        if (expiring) {\n          options.expiration = false;\n          if (item.type === 'playDefault') {\n            object.stop();\n          } else {\n            if (options.endState) object._setObject(options.endState);\n            if (typeof options.cb != 'undefined') options.cb();\n          }\n        } else {\n          let timeProgress = (now - options.start) / options.duration;\n          if (item.type === 'set') {\n            let objectState = {};\n            if (options.pathCurve) objectState.worldCoordinates = options.pathCurve.getPoint(timeProgress);\n            if (options.rotationPerMs) {\n              objectState.rotation = options.startRotation.map(function (rad, index) {\n                return rad + options.rotationPerMs[index] * timeProgress * options.duration;\n              });\n            }\n            if (options.scalePerMs) {\n              objectState.scale = options.startScale.map(function (scale, index) {\n                return scale + options.scalePerMs[index] * timeProgress * options.duration;\n              });\n            }\n            object._setObject(objectState);\n          }\n          if (item.type === 'followPath') {\n            let position = options.pathCurve.getPointAt(timeProgress);\n            let objectState = {\n              worldCoordinates: position\n            };\n\n            // if we need to track heading\n            if (options.trackHeading) {\n              let tangent = options.pathCurve.getTangentAt(timeProgress).normalize();\n              let axis = new THREE.Vector3(0, 0, 0);\n              let up = new THREE.Vector3(0, 1, 0);\n              axis.crossVectors(up, tangent).normalize();\n              let radians = Math.acos(up.dot(tangent));\n              objectState.quaternion = [axis, radians];\n            }\n            object._setObject(objectState);\n          }\n\n          //[jscastro] play default animation\n          if (item.type === 'playDefault') {\n            object.activateAllActions();\n            object.isPlaying = true;\n            object.animationMethod = requestAnimationFrame(this.update);\n            object.mixer.update(object.clock.getDelta());\n            tb.map.repaint = true;\n          }\n        }\n      }\n    }\n    this.previousFrameTime = now;\n  }\n};\nconst defaults = {\n  followPath: {\n    path: null,\n    duration: 1000,\n    trackHeading: true\n  }\n};\nmodule.exports = exports = AnimationManager;","map":{"version":3,"names":["THREE","require","utils","AnimationManager","map","enrolledObjects","previousFrameTime","prototype","unenroll","obj","splice","indexOf","enroll","clock","Clock","hasDefaultAnimation","defaultAction","actions","mixer","animations","length","daIndex","userData","defaultAnimation","AnimationMixer","setAction","animationIndex","i","console","log","animation","action","clipAction","push","setEffectiveWeight","play","_isPlaying","Object","defineProperty","get","set","value","dispatchEvent","type","detail","animationQueue","options","duration","newParams","start","Date","now","expiration","endState","extend","translating","coords","rotating","rotation","scaling","scale","scaleX","scaleY","scaleZ","r","startRotation","x","y","z","types","rotationPerMs","angle","index","s","startScale","scalePerMs","pathCurve","CatmullRomCurve3","lnglatsToWorld","coordinates","entry","parameters","tb","repaint","stop","radify","_setObject","animationMethod","isPlaying","cancelAnimationFrame","followPath","cb","_validate","defaults","path","setScale","p","position","w","worldCoordinates","q","quaternion","t","translate","wt","worldTranslate","c","projectToWorld","copy","translateX","translateY","translateZ","unprojectFromWorld","Vector3","setFromAxisAngle","multiplyScalar","setBoundingBoxShadowFloor","setReceiveShadowFloor","updateMatrixWorld","e","object","playDefault","timeScale","speed","playAnimation","pauseAllActions","forEach","paused","unPauseAllActions","deactivateAllActions","activateAllActions","idle","update","undefined","dimensions","a","item","expiring","timeProgress","objectState","getPoint","rad","getPointAt","trackHeading","tangent","getTangentAt","normalize","axis","up","crossVectors","radians","Math","acos","dot","requestAnimationFrame","getDelta","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/Lastochka_spraying/frontend/node_modules/threebox-plugin/src/animation/AnimationManager.js"],"sourcesContent":["/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n*/\r\nconst THREE = require('../three.js');\r\nconst utils = require(\"../utils/utils.js\");\r\n\r\nfunction AnimationManager(map) {\r\n\r\n    this.map = map\r\n    this.enrolledObjects = [];    \r\n    this.previousFrameTime;\r\n\r\n};\r\n\r\nAnimationManager.prototype = {\r\n\r\n\tunenroll: function (obj) {\r\n\t\tthis.enrolledObjects.splice(this.enrolledObjects.indexOf(obj), 1);\r\n\t},\r\n\r\n\tenroll: function (obj) {\r\n\r\n\t\t//[jscastro] add the object default animations\r\n\t\tobj.clock = new THREE.Clock();\r\n\t\tobj.hasDefaultAnimation = false;\r\n\t\tobj.defaultAction;\r\n\t\tobj.actions = [];\r\n\t\tobj.mixer;\r\n\r\n\t\t//[jscastro] if the object includes animations\r\n\t\tif (obj.animations && obj.animations.length > 0) {\r\n\r\n\t\t\tobj.hasDefaultAnimation = true;\r\n\r\n\t\t\t//check first if a defaultAnimation is defined by options\r\n\t\t\tlet daIndex = (obj.userData.defaultAnimation ? obj.userData.defaultAnimation : 0);\r\n\t\t\tobj.mixer = new THREE.AnimationMixer(obj);\r\n\r\n\t\t\tsetAction(daIndex);\r\n\t\t}\r\n\r\n\t\t//[jscastro] set the action to play\r\n\t\tfunction setAction(animationIndex) {\r\n\t\t\tfor (let i = 0; i < obj.animations.length; i++) {\r\n\r\n\t\t\t\tif (animationIndex > obj.animations.length)\r\n\t\t\t\t\tconsole.log(\"The animation index \" + animationIndex + \" doesn't exist for this object\");\r\n\t\t\t\tlet animation = obj.animations[i];\r\n\t\t\t\tlet action = obj.mixer.clipAction(animation);\r\n\t\t\t\tobj.actions.push(action);\r\n\r\n\t\t\t\t//select the default animation and set the weight to 1\r\n\t\t\t\tif (animationIndex === i) {\r\n\t\t\t\t\tobj.defaultAction = action;\r\n\t\t\t\t\taction.setEffectiveWeight(1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\taction.setEffectiveWeight(0);\r\n\t\t\t\t}\r\n\t\t\t\taction.play();\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet _isPlaying = false;\r\n\t\t//[jscastro] added property for isPlaying state\r\n\t\tObject.defineProperty(obj, 'isPlaying', {\r\n\t\t\tget() { return _isPlaying; },\r\n\t\t\tset(value) {\r\n\t\t\t\tif (_isPlaying != value) {\r\n\t\t\t\t\t_isPlaying = value;\r\n\t\t\t\t\t// Dispatch new event IsPlayingChanged\r\n\t\t\t\t\tobj.dispatchEvent({ type: 'IsPlayingChanged', detail: obj});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t/* Extend the provided object with animation-specific properties and track in the animation manager */\r\n\t\tthis.enrolledObjects.push(obj);\r\n\r\n\t\t// Give this object its own internal animation queue\r\n\t\tobj.animationQueue = [];\r\n\r\n\t\tobj.set = function (options) {\r\n\r\n\t\t\t//if duration is set, animate to the new state\r\n\t\t\tif (options.duration > 0) {\r\n\r\n\t\t\t\tlet newParams = {\r\n\t\t\t\t\tstart: Date.now(),\r\n\t\t\t\t\texpiration: Date.now() + options.duration,\r\n\t\t\t\t\tendState: {}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tutils.extend(options, newParams);\r\n\r\n\t\t\t\tlet translating = options.coords;\r\n\t\t\t\tlet rotating = options.rotation;\r\n\t\t\t\tlet scaling = options.scale || options.scaleX || options.scaleY || options.scaleZ;\r\n\r\n\t\t\t\tif (rotating) {\r\n\r\n\t\t\t\t\tlet r = obj.rotation;\r\n\t\t\t\t\toptions.startRotation = [r.x, r.y, r.z];\r\n\r\n\r\n\t\t\t\t\toptions.endState.rotation = utils.types.rotation(options.rotation, options.startRotation);\r\n\t\t\t\t\toptions.rotationPerMs = options.endState.rotation\r\n\t\t\t\t\t\t.map(function (angle, index) {\r\n\t\t\t\t\t\t\treturn (angle - options.startRotation[index]) / options.duration;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (scaling) {\r\n\t\t\t\t\tlet s = obj.scale;\r\n\t\t\t\t\toptions.startScale = [s.x, s.y, s.z];\r\n\t\t\t\t\toptions.endState.scale = utils.types.scale(options.scale, options.startScale);\r\n\r\n\t\t\t\t\toptions.scalePerMs = options.endState.scale\r\n\t\t\t\t\t\t.map(function (scale, index) {\r\n\t\t\t\t\t\t\treturn (scale - options.startScale[index]) / options.duration;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (translating) options.pathCurve = new THREE.CatmullRomCurve3(utils.lnglatsToWorld([obj.coordinates, options.coords]));\r\n\r\n\t\t\t\tlet entry = {\r\n\t\t\t\t\ttype: 'set',\r\n\t\t\t\t\tparameters: options\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.animationQueue\r\n\t\t\t\t\t.push(entry);\r\n\r\n\t\t\t\ttb.map.repaint = true;\r\n\t\t\t}\r\n\r\n\t\t\t//if no duration set, stop object's existing animations and go to that state immediately\r\n\t\t\telse {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\toptions.rotation = utils.radify(options.rotation);\r\n\t\t\t\tthis._setObject(options);\r\n\t\t\t}\r\n\r\n\t\t\treturn this\r\n\r\n\t\t};\r\n\r\n\t\t//[jscastro] animation method, is set by update method\r\n\t\tobj.animationMethod = null;\r\n\r\n\t\t//[jscastro] stop animation and the queue\r\n\t\tobj.stop = function (index) {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\tobj.isPlaying = false;\r\n\t\t\t\tcancelAnimationFrame(obj.animationMethod);\r\n\t\t\t}\r\n\t\t\t//TODO: if this is removed, it produces an error in \r\n\t\t\tthis.animationQueue = [];\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tobj.followPath = function (options, cb) {\r\n\r\n\t\t\tlet entry = {\r\n\t\t\t\ttype: 'followPath',\r\n\t\t\t\tparameters: utils._validate(options, defaults.followPath)\r\n\t\t\t};\r\n\r\n\t\t\tutils.extend(\r\n\t\t\t\tentry.parameters,\r\n\t\t\t\t{\r\n\t\t\t\t\tpathCurve: new THREE.CatmullRomCurve3(\r\n\t\t\t\t\t\tutils.lnglatsToWorld(options.path)\r\n\t\t\t\t\t),\r\n\t\t\t\t\tstart: Date.now(),\r\n\t\t\t\t\texpiration: Date.now() + entry.parameters.duration,\r\n\t\t\t\t\tcb: cb\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tthis.animationQueue\r\n\t\t\t\t.push(entry);\r\n\r\n\t\t\ttb.map.repaint = true;\r\n\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tobj._setObject = function (options) {\r\n\r\n\t\t\t//default scale always\r\n\t\t\tobj.setScale();\r\n\r\n\t\t\tlet p = options.position; // lnglat\r\n\t\t\tlet r = options.rotation; // radians\r\n\t\t\tlet s = options.scale; // custom scale\r\n\t\t\tlet w = options.worldCoordinates; //Vector3\r\n\t\t\tlet q = options.quaternion; // [axis, angle in rads]\r\n\t\t\tlet t = options.translate; // [jscastro] lnglat + height for 3D objects\r\n\t\t\tlet wt = options.worldTranslate; // [jscastro] Vector3 translation\r\n\r\n\t\t\tif (p) {\r\n\t\t\t\tthis.coordinates = p;\r\n\t\t\t\tlet c = utils.projectToWorld(p);\r\n\t\t\t\tthis.position.copy(c)\r\n\t\t\t}\r\n\r\n\t\t\tif (t) {\r\n\t\t\t\tthis.coordinates = [this.coordinates[0] + t[0], this.coordinates[1] + t[1], this.coordinates[2] + t[2]];\r\n\t\t\t\tlet c = utils.projectToWorld(t);\r\n\t\t\t\tthis.position.copy(c)\r\n\t\t\t\t//this.translateX(c.x);\r\n\t\t\t\t//this.translateY(c.y);\r\n\t\t\t\t//this.translateZ(c.z);\r\n\t\t\t\toptions.position = this.coordinates;\r\n\t\t\t}\r\n\r\n\t\t\tif (wt) {\r\n\t\t\t\tthis.translateX(wt.x);\r\n\t\t\t\tthis.translateY(wt.y);\r\n\t\t\t\tthis.translateZ(wt.z);\r\n\t\t\t\tlet p = utils.unprojectFromWorld(this.position);\r\n\t\t\t\tthis.coordinates = options.position = p;\r\n\t\t\t}\r\n\r\n\t\t\tif (r) {\r\n\t\t\t\tthis.rotation.set(r[0], r[1], r[2]);\r\n\t\t\t\toptions.rotation = new THREE.Vector3(r[0], r[1], r[2]);\r\n\t\t\t}\r\n\r\n\t\t\tif (s) {\r\n\t\t\t\tthis.scale.set(s[0], s[1], s[2]);\r\n\t\t\t\toptions.scale = this.scale;\r\n\t\t\t}\r\n\r\n\t\t\tif (q) {\r\n\t\t\t\tthis.quaternion.setFromAxisAngle(q[0], q[1]);\r\n\t\t\t\toptions.rotation = q[0].multiplyScalar(q[1]);\r\n\t\t\t}\r\n\r\n\t\t\tif (w) {\r\n\t\t\t\tthis.position.copy(w);\r\n\t\t\t\tlet p = utils.unprojectFromWorld(w);\r\n\t\t\t\tthis.coordinates = options.position = p;\r\n\t\t\t} \r\n\r\n\t\t\t//Each time the object is positioned, project the floor and correct shadow plane\r\n\t\t\tthis.setBoundingBoxShadowFloor();\r\n\t\t\tthis.setReceiveShadowFloor();\r\n\r\n\t\t\tthis.updateMatrixWorld();\r\n\t\t\ttb.map.repaint = true;\r\n\r\n\t\t\t//const threeTarget = new THREE.EventDispatcher();\r\n\t\t\t//threeTarget.dispatchEvent({ type: 'event', detail: { object: this, action: { position: options.position, rotation: options.rotation, scale: options.scale } } });\r\n\t\t\t// fire the ObjectChanged event to notify UI object change\r\n\t\t\tlet e = { type: 'ObjectChanged', detail: { object: this, action: { position: options.position, rotation: options.rotation, scale: options.scale } } };\r\n\t\t\tthis.dispatchEvent(e);\r\n\r\n\t\t};\r\n\r\n\t\t//[jscastro] play default animation\r\n\t\tobj.playDefault = function (options) {\r\n\t\t\tif (obj.mixer && obj.hasDefaultAnimation) {\r\n\r\n\t\t\t\tlet newParams = {\r\n\t\t\t\t\tstart: Date.now(),\r\n\t\t\t\t\texpiration: Date.now() + options.duration,\r\n\t\t\t\t\tendState: {}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tutils.extend(options, newParams);\r\n\r\n\t\t\t\tobj.mixer.timeScale = options.speed || 1;\r\n\r\n\t\t\t\tlet entry = {\r\n\t\t\t\t\ttype: 'playDefault',\r\n\t\t\t\t\tparameters: options\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.animationQueue\r\n\t\t\t\t\t.push(entry);\r\n\r\n\t\t\t\ttb.map.repaint = true\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//[jscastro] play an animation, requires options.animation as an index, if not it will play the default one\r\n\t\tobj.playAnimation = function (options) {\r\n\t\t\tif (obj.mixer) {\r\n\r\n\t\t\t\tif (options.animation) {\r\n\t\t\t\t\tsetAction(options.animation)\r\n\t\t\t\t}\r\n\t\t\t\tobj.playDefault(options);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//[jscastro] pause all actions animation\r\n\t\tobj.pauseAllActions = function () {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\tobj.actions.forEach(function (action) {\r\n\t\t\t\t\taction.paused = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//[jscastro] unpause all actions\r\n\t\tobj.unPauseAllActions = function () {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\tobj.actions.forEach(function (action) {\r\n\t\t\t\t\taction.paused = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//[jscastro] stop all actions\r\n\t\tobj.deactivateAllActions = function () {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\tobj.actions.forEach(function (action) {\r\n\t\t\t\t\taction.stop();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//[jscastro] play all actions\r\n\t\tobj.activateAllActions = function () {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\tobj.actions.forEach(function (action) {\r\n\t\t\t\t\taction.play();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//[jscastro] move the model action one tick just to avoid issues with initial position\r\n\t\tobj.idle = function () {\r\n\t\t\tif (obj.mixer) {\r\n\t\t\t\t// Update the animation mixer and render this frame\r\n\t\t\t\tobj.mixer.update(0.01);\r\n\t\t\t}\r\n\t\t\ttb.map.repaint = true;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function (now) {\r\n\r\n\t\tif (this.previousFrameTime === undefined) this.previousFrameTime = now;\r\n\r\n\t\tlet dimensions = ['X', 'Y', 'Z'];\r\n\r\n\t\t//[jscastro] when function expires this produces an error\r\n\t\tif (!this.enrolledObjects) return false;\r\n\r\n\t\t//iterate through objects in queue. count in reverse so we can cull objects without frame shifting\r\n\t\tfor (let a = this.enrolledObjects.length - 1; a >= 0; a--) {\r\n\r\n\t\t\tlet object = this.enrolledObjects[a];\r\n\r\n\t\t\tif (!object.animationQueue || object.animationQueue.length === 0) continue;\r\n\r\n\t\t\t//[jscastro] now multiple animations on a single object is possible\r\n\t\t\tfor (let i = object.animationQueue.length - 1; i >= 0; i--) {\r\n\r\n\t\t\t\t//focus on first item in queue\r\n\t\t\t\tlet item = object.animationQueue[i];\r\n\t\t\t\tif (!item) continue;\r\n\t\t\t\tlet options = item.parameters;\r\n\r\n\t\t\t\t// if an animation is past its expiration date, cull it\r\n\t\t\t\tif (!options.expiration) {\r\n\t\t\t\t\t// console.log('culled')\r\n\r\n\t\t\t\t\tobject.animationQueue.splice(i, 1);\r\n\r\n\t\t\t\t\t// set the start time of the next animation\r\n\t\t\t\t\tif (object.animationQueue[i]) object.animationQueue[i].parameters.start = now;\r\n\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//if finished, jump to end state and flag animation entry for removal next time around. Execute callback if there is one\r\n\t\t\t\tlet expiring = now >= options.expiration;\r\n\r\n\t\t\t\tif (expiring) {\r\n\t\t\t\t\toptions.expiration = false;\r\n\t\t\t\t\tif (item.type === 'playDefault') {\r\n\t\t\t\t\t\tobject.stop();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (options.endState) object._setObject(options.endState);\r\n\t\t\t\t\t\tif (typeof (options.cb) != 'undefined') options.cb();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\tlet timeProgress = (now - options.start) / options.duration;\r\n\r\n\t\t\t\t\tif (item.type === 'set') {\r\n\r\n\t\t\t\t\t\tlet objectState = {};\r\n\r\n\t\t\t\t\t\tif (options.pathCurve) objectState.worldCoordinates = options.pathCurve.getPoint(timeProgress);\r\n\r\n\t\t\t\t\t\tif (options.rotationPerMs) {\r\n\t\t\t\t\t\t\tobjectState.rotation = options.startRotation.map(function (rad, index) {\r\n\t\t\t\t\t\t\t\treturn rad + options.rotationPerMs[index] * timeProgress * options.duration\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (options.scalePerMs) {\r\n\t\t\t\t\t\t\tobjectState.scale = options.startScale.map(function (scale, index) {\r\n\t\t\t\t\t\t\t\treturn scale + options.scalePerMs[index] * timeProgress * options.duration\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tobject._setObject(objectState);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (item.type === 'followPath') {\r\n\r\n\t\t\t\t\t\tlet position = options.pathCurve.getPointAt(timeProgress);\r\n\t\t\t\t\t\tlet objectState = { worldCoordinates: position };\r\n\r\n\t\t\t\t\t\t// if we need to track heading\r\n\t\t\t\t\t\tif (options.trackHeading) {\r\n\r\n\t\t\t\t\t\t\tlet tangent = options.pathCurve\r\n\t\t\t\t\t\t\t\t.getTangentAt(timeProgress)\r\n\t\t\t\t\t\t\t\t.normalize();\r\n\r\n\t\t\t\t\t\t\tlet axis = new THREE.Vector3(0, 0, 0);\r\n\t\t\t\t\t\t\tlet up = new THREE.Vector3(0, 1, 0);\r\n\r\n\t\t\t\t\t\t\taxis\r\n\t\t\t\t\t\t\t\t.crossVectors(up, tangent)\r\n\t\t\t\t\t\t\t\t.normalize();\r\n\r\n\t\t\t\t\t\t\tlet radians = Math.acos(up.dot(tangent));\r\n\r\n\t\t\t\t\t\t\tobjectState.quaternion = [axis, radians];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tobject._setObject(objectState);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//[jscastro] play default animation\r\n\t\t\t\t\tif (item.type === 'playDefault') {\r\n\t\t\t\t\t\tobject.activateAllActions();\r\n\t\t\t\t\t\tobject.isPlaying = true;\r\n\t\t\t\t\t\tobject.animationMethod = requestAnimationFrame(this.update);\r\n\t\t\t\t\t\tobject.mixer.update(object.clock.getDelta());\r\n\t\t\t\t\t\ttb.map.repaint = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.previousFrameTime = now;\r\n\t}\r\n\r\n}\r\n\r\nconst defaults = {\r\n    followPath: {\r\n        path: null,\r\n        duration: 1000,\r\n        trackHeading: true\r\n    }\r\n}\r\nmodule.exports = exports = AnimationManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}