{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js\",\n  _s = $RefreshSig$();\nimport \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { MapManager } from \"./MapManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { update_modal_message } from \"../AppSlice\";\nimport { sprayManager } from \"./sprayManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spraying = props => {\n  _s();\n  const [MapManager_obj, setMapManager] = useState(null);\n  const [cursor_coords, setCursorCoords] = useState([0, 0]);\n  const spray_manager = new sprayManager();\n  useEffect(() => {\n    if (props.manager3D !== null) {\n      let manager = new MapManager(props.map, props.manager3D, props.update_modal_message);\n      setMapManager(manager);\n      props.map.on(\"mousemove\", e => {\n        if (manager.translate_cursor === true) {\n          setCursorCoords([e.lngLat.lng, e.lngLat.lat]);\n        }\n      });\n      props.map.on(\"click\", e => {\n        if (manager.translate_cursor === true) {\n          manager.setStartMarker([e.lngLat.lng, e.lngLat.lat]);\n        } else {\n          manager.setPolygon([e.lngLat.lng, e.lngLat.lat]);\n        }\n      });\n    }\n  }, [props.manager3D]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spraying\",\n    children: /*#__PURE__*/_jsxDEV(Settings, {\n      manager: MapManager_obj,\n      cursor_coords: cursor_coords,\n      spray_manager: spray_manager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n_s(Spraying, \"mfnay7JNceviZtDhfMEyKOsxkPs=\");\n_c = Spraying;\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    \"update_modal_message\": data => {\n      dispatch(update_modal_message(data));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying);\nvar _c;\n$RefreshReg$(_c, \"Spraying\");","map":{"version":3,"names":["Settings","MapManager","useEffect","useState","connect","update_modal_message","sprayManager","jsxDEV","_jsxDEV","Spraying","props","_s","MapManager_obj","setMapManager","cursor_coords","setCursorCoords","spray_manager","manager3D","manager","map","on","e","translate_cursor","lngLat","lng","lat","setStartMarker","setPolygon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","mapDispatchToProps","dispatch","data","$RefreshReg$"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js"],"sourcesContent":["import \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { MapManager } from \"./MapManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { update_modal_message } from \"../AppSlice\";\nimport { sprayManager } from \"./sprayManager\";\n\nconst Spraying = (props) => {\n    const [MapManager_obj, setMapManager] = useState(null)\n    const [cursor_coords, setCursorCoords] = useState([0, 0])\n    const spray_manager = new sprayManager()\n    useEffect(() => {\n        if (props.manager3D !== null){\n            let manager = new MapManager(props.map, props.manager3D, props.update_modal_message)\n            setMapManager(manager)\n            props.map.on(\"mousemove\", (e) => {\n                if (manager.translate_cursor === true){\n                   setCursorCoords([e.lngLat.lng, e.lngLat.lat]) \n                }\n            })\n            props.map.on(\"click\", (e) => {\n                if (manager.translate_cursor === true){\n                    manager.setStartMarker([e.lngLat.lng, e.lngLat.lat])\n                }else{\n                    manager.setPolygon([e.lngLat.lng, e.lngLat.lat])\n                }\n            })\n        }\n    }, [props.manager3D])\n\n    return <div className=\"spraying\">\n        <Settings manager={MapManager_obj} cursor_coords={cursor_coords} spray_manager={spray_manager}/>\n    </div>\n}\nconst mapStateToProps = (state) => {return state}\nconst mapDispatchToProps = (dispatch) => { return{\n    \"update_modal_message\": (data) => {dispatch(update_modal_message(data))}\n}}\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying)"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,aAAa,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACzD,MAAMa,aAAa,GAAG,IAAIV,YAAY,CAAC,CAAC;EACxCJ,SAAS,CAAC,MAAM;IACZ,IAAIQ,KAAK,CAACO,SAAS,KAAK,IAAI,EAAC;MACzB,IAAIC,OAAO,GAAG,IAAIjB,UAAU,CAACS,KAAK,CAACS,GAAG,EAAET,KAAK,CAACO,SAAS,EAAEP,KAAK,CAACL,oBAAoB,CAAC;MACpFQ,aAAa,CAACK,OAAO,CAAC;MACtBR,KAAK,CAACS,GAAG,CAACC,EAAE,CAAC,WAAW,EAAGC,CAAC,IAAK;QAC7B,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UACnCP,eAAe,CAAC,CAACM,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QAChD;MACJ,CAAC,CAAC;MACFf,KAAK,CAACS,GAAG,CAACC,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;QACzB,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UAClCJ,OAAO,CAACQ,cAAc,CAAC,CAACL,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QACxD,CAAC,MAAI;UACDP,OAAO,CAACS,UAAU,CAAC,CAACN,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QACpD;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACf,KAAK,CAACO,SAAS,CAAC,CAAC;EAErB,oBAAOT,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,eAC5BrB,OAAA,CAACR,QAAQ;MAACkB,OAAO,EAAEN,cAAe;MAACE,aAAa,EAAEA,aAAc;MAACE,aAAa,EAAEA;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/F,CAAC;AACV,CAAC;AAAAtB,EAAA,CA1BKF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA2Bd,MAAM0B,eAAe,GAAIC,KAAK,IAAK;EAAC,OAAOA,KAAK;AAAA,CAAC;AACjD,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EAAE,OAAM;IAC7C,sBAAsB,EAAGC,IAAI,IAAK;MAACD,QAAQ,CAACjC,oBAAoB,CAACkC,IAAI,CAAC,CAAC;IAAA;EAC3E,CAAC;AAAA,CAAC;AACF,eAAenC,OAAO,CAAC+B,eAAe,EAAEE,kBAAkB,CAAC,CAAC5B,QAAQ,CAAC;AAAA,IAAAyB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}