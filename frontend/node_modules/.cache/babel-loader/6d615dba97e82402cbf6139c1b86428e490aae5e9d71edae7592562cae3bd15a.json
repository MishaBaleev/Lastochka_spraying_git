{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Modal/Modal.js\";\nimport React from 'react';\nimport \"./Modal.css\";\nimport CancelIcon from \"./cancel.png\";\nimport { connect } from 'react-redux';\nimport { toggle_page_block } from '../AppSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n  onClickHandler(e) {\n    e.preventDefault();\n    this.props.toggle_page_block({\n      'is_page_blocked': false,\n      'name': \"\",\n      'description': \"\"\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: this.props.app.is_page_blocked === true ? \"modal__window active\" : \"modal__window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"modal__heading\",\n          children: this.props.app.modal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal__text\",\n          children: this.props.app.modal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.onClickHandler,\n        className: \"button button__modal--close\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: CancelIcon,\n          className: \"icons\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    'toggle_page_block': data => dispatch(toggle_page_block(data))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","map":{"version":3,"names":["React","CancelIcon","connect","toggle_page_block","jsxDEV","_jsxDEV","Modal","Component","constructor","props","onClickHandler","bind","e","preventDefault","render","className","app","is_page_blocked","children","modal","name","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","src","alt","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Modal/Modal.js"],"sourcesContent":["import React from 'react';\nimport \"./Modal.css\"\nimport CancelIcon from \"./cancel.png\"\nimport { connect } from 'react-redux';\nimport { toggle_page_block } from '../AppSlice';\n\nclass Modal extends React.Component  {\n  constructor(props){\n    super(props);\n    this.onClickHandler = this.onClickHandler.bind(this);\n  }\n  onClickHandler(e){\n    e.preventDefault()\n    this.props.toggle_page_block({\n      'is_page_blocked':false,\n      'name':\"\",\n      'description':\"\"\n    })\n  }\n  render(){\n    return (\n      <section className={this.props.app.is_page_blocked === true ? \"modal__window active\" : \"modal__window\"}>\n        <div className=\"modal__container\">\n          <h3 className='modal__heading'>{this.props.app.modal.name}</h3>\n          <p className='modal__text'>{this.props.app.modal.description}</p>\n        </div>\n        <span onClick={this.onClickHandler} className=\"button button__modal--close\">\n            <img src={CancelIcon} className=\"icons\" alt=\"\"/>\n        </span>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\nconst mapDispatchToProps =  (dispatch) => {\n  return {\n    'toggle_page_block': (data) => dispatch(toggle_page_block(data)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,KAAK,SAASN,KAAK,CAACO,SAAS,CAAE;EACnCC,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;EACtD;EACAD,cAAcA,CAACE,CAAC,EAAC;IACfA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,KAAK,CAACN,iBAAiB,CAAC;MAC3B,iBAAiB,EAAC,KAAK;MACvB,MAAM,EAAC,EAAE;MACT,aAAa,EAAC;IAChB,CAAC,CAAC;EACJ;EACAW,MAAMA,CAAA,EAAE;IACN,oBACET,OAAA;MAASU,SAAS,EAAE,IAAI,CAACN,KAAK,CAACO,GAAG,CAACC,eAAe,KAAK,IAAI,GAAG,sBAAsB,GAAG,eAAgB;MAAAC,QAAA,gBACrGb,OAAA;QAAKU,SAAS,EAAC,kBAAkB;QAAAG,QAAA,gBAC/Bb,OAAA;UAAIU,SAAS,EAAC,gBAAgB;UAAAG,QAAA,EAAE,IAAI,CAACT,KAAK,CAACO,GAAG,CAACG,KAAK,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/DnB,OAAA;UAAGU,SAAS,EAAC,aAAa;UAAAG,QAAA,EAAE,IAAI,CAACT,KAAK,CAACO,GAAG,CAACG,KAAK,CAACM;QAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACNnB,OAAA;QAAMqB,OAAO,EAAE,IAAI,CAAChB,cAAe;QAACK,SAAS,EAAC,6BAA6B;QAAAG,QAAA,eACvEb,OAAA;UAAKsB,GAAG,EAAE1B,UAAW;UAACc,SAAS,EAAC,OAAO;UAACa,GAAG,EAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;AACF;AAEA,MAAMK,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAOA,KAAK;AACd,CAAC;AACD,MAAMC,kBAAkB,GAAKC,QAAQ,IAAK;EACxC,OAAO;IACL,mBAAmB,EAAGC,IAAI,IAAKD,QAAQ,CAAC7B,iBAAiB,CAAC8B,IAAI,CAAC;EACjE,CAAC;AACH,CAAC;AAED,eAAe/B,OAAO,CAAC2B,eAAe,EAAEE,kBAAkB,CAAC,CAACzB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}