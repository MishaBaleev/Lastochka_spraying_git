{"ast":null,"code":"/*\r\n (c) 2011-2015, Vladimir Agafonkin\r\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\r\n https://github.com/mourner/suncalc\r\n*/\n\n(function () {\n  'use strict';\n\n  // shortcuts for easier to read formulas\n  var PI = Math.PI,\n    sin = Math.sin,\n    cos = Math.cos,\n    tan = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    acos = Math.acos,\n    rad = PI / 180;\n\n  // sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n\n  // date/time constants and conversions\n\n  var dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n  function toJulian(date) {\n    return date.valueOf() / dayMs - 0.5 + J1970;\n  }\n  function fromJulian(j) {\n    return new Date((j + 0.5 - J1970) * dayMs);\n  }\n  function toDays(date) {\n    return toJulian(date) - J2000;\n  }\n\n  // general calculations for position\n\n  var e = rad * 23.4397; // obliquity of the Earth\n\n  function rightAscension(l, b) {\n    return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l));\n  }\n  function declination(l, b) {\n    return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l));\n  }\n  function azimuth(H, phi, dec) {\n    return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi));\n  }\n  function altitude(H, phi, dec) {\n    return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H));\n  }\n  function siderealTime(d, lw) {\n    return rad * (280.16 + 360.9856235 * d) - lw;\n  }\n  function astroRefraction(h) {\n    if (h < 0)\n      // the following formula works for positive altitudes only.\n      h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to rad:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n  }\n\n  // general sun calculations\n\n  function solarMeanAnomaly(d) {\n    return rad * (357.5291 + 0.98560028 * d);\n  }\n  function eclipticLongitude(M) {\n    var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)),\n      // equation of center\n      P = rad * 102.9372; // perihelion of the Earth\n\n    return M + C + P + PI;\n  }\n  function sunCoords(d) {\n    var M = solarMeanAnomaly(d),\n      L = eclipticLongitude(M);\n    return {\n      dec: declination(L, 0),\n      ra: rightAscension(L, 0)\n    };\n  }\n  var SunCalc = {};\n\n  // calculates sun position for a given date and latitude/longitude\n\n  SunCalc.getPosition = function (date, lat, lng) {\n    var lw = rad * -lng,\n      phi = rad * lat,\n      d = toDays(date),\n      c = sunCoords(d),\n      H = siderealTime(d, lw) - c.ra;\n    return {\n      azimuth: azimuth(H, phi, c.dec),\n      altitude: altitude(H, phi, c.dec)\n    };\n  };\n  SunCalc.toJulian = function (date) {\n    return toJulian(date);\n  };\n\n  // sun times configuration (angle, morning name, evening name)\n\n  var times = SunCalc.times = [[-0.833, 'sunrise', 'sunset'], [-0.3, 'sunriseEnd', 'sunsetStart'], [-6, 'dawn', 'dusk'], [-12, 'nauticalDawn', 'nauticalDusk'], [-18, 'nightEnd', 'night'], [6, 'goldenHourEnd', 'goldenHour']];\n\n  // adds a custom time to the times config\n\n  SunCalc.addTime = function (angle, riseName, setName) {\n    times.push([angle, riseName, setName]);\n  };\n\n  // calculations for sun times\n\n  var J0 = 0.0009;\n  function julianCycle(d, lw) {\n    return Math.round(d - J0 - lw / (2 * PI));\n  }\n  function approxTransit(Ht, lw, n) {\n    return J0 + (Ht + lw) / (2 * PI) + n;\n  }\n  function solarTransitJ(ds, M, L) {\n    return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L);\n  }\n  function hourAngle(h, phi, d) {\n    return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d)));\n  }\n  function observerAngle(height) {\n    return -2.076 * Math.sqrt(height) / 60;\n  }\n\n  // returns set time for the given sun altitude\n  function getSetJ(h, lw, phi, dec, n, M, L) {\n    var w = hourAngle(h, phi, dec),\n      a = approxTransit(w, lw, n);\n    return solarTransitJ(a, M, L);\n  }\n\n  // calculates sun times for a given date, latitude/longitude, and, optionally,\n  // the observer height (in meters) relative to the horizon\n\n  SunCalc.getTimes = function (date, lat, lng, height) {\n    height = height || 0;\n    var lw = rad * -lng,\n      phi = rad * lat,\n      dh = observerAngle(height),\n      d = toDays(date),\n      n = julianCycle(d, lw),\n      ds = approxTransit(0, lw, n),\n      M = solarMeanAnomaly(ds),\n      L = eclipticLongitude(M),\n      dec = declination(L, 0),\n      Jnoon = solarTransitJ(ds, M, L),\n      i,\n      len,\n      time,\n      h0,\n      Jset,\n      Jrise;\n    var result = {\n      solarNoon: fromJulian(Jnoon),\n      nadir: fromJulian(Jnoon - 0.5)\n    };\n    for (i = 0, len = times.length; i < len; i += 1) {\n      time = times[i];\n      h0 = (time[0] + dh) * rad;\n      Jset = getSetJ(h0, lw, phi, dec, n, M, L);\n      Jrise = Jnoon - (Jset - Jnoon);\n      result[time[1]] = fromJulian(Jrise);\n      result[time[2]] = fromJulian(Jset);\n    }\n    return result;\n  };\n\n  // moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n\n  function moonCoords(d) {\n    // geocentric ecliptic coordinates of the moon\n\n    var L = rad * (218.316 + 13.176396 * d),\n      // ecliptic longitude\n      M = rad * (134.963 + 13.064993 * d),\n      // mean anomaly\n      F = rad * (93.272 + 13.229350 * d),\n      // mean distance\n\n      l = L + rad * 6.289 * sin(M),\n      // longitude\n      b = rad * 5.128 * sin(F),\n      // latitude\n      dt = 385001 - 20905 * cos(M); // distance to the moon in km\n\n    return {\n      ra: rightAscension(l, b),\n      dec: declination(l, b),\n      dist: dt\n    };\n  }\n  SunCalc.getMoonPosition = function (date, lat, lng) {\n    var lw = rad * -lng,\n      phi = rad * lat,\n      d = toDays(date),\n      c = moonCoords(d),\n      H = siderealTime(d, lw) - c.ra,\n      h = altitude(H, phi, c.dec),\n      // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n      pa = atan(sin(H), tan(phi) * cos(c.dec) - sin(c.dec) * cos(H));\n    h = h + astroRefraction(h); // altitude correction for refraction\n\n    return {\n      azimuth: azimuth(H, phi, c.dec),\n      altitude: h,\n      distance: c.dist,\n      parallacticAngle: pa\n    };\n  };\n\n  // calculations for illumination parameters of the moon,\n  // based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n  // Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n\n  SunCalc.getMoonIllumination = function (date) {\n    var d = toDays(date || new Date()),\n      s = sunCoords(d),\n      m = moonCoords(d),\n      sdist = 149598000,\n      // distance from Earth to Sun in km\n\n      phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\n      inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\n      angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) - cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\n    return {\n      fraction: (1 + cos(inc)) / 2,\n      phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\n      angle: angle\n    };\n  };\n  function hoursLater(date, h) {\n    return new Date(date.valueOf() + h * dayMs / 24);\n  }\n\n  // calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n\n  SunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);else t.setHours(0, 0, 0, 0);\n    var hc = 0.133 * rad,\n      h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n      h1,\n      h2,\n      rise,\n      set,\n      a,\n      b,\n      xe,\n      ye,\n      d,\n      roots,\n      x1,\n      x2,\n      dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n      h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\n      h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\n      a = (h0 + h2) / 2 - h1;\n      b = (h2 - h0) / 2;\n      xe = -b / (2 * a);\n      ye = (a * xe + b) * xe + h1;\n      d = b * b - 4 * a * h1;\n      roots = 0;\n      if (d >= 0) {\n        dx = Math.sqrt(d) / (Math.abs(a) * 2);\n        x1 = xe - dx;\n        x2 = xe + dx;\n        if (Math.abs(x1) <= 1) roots++;\n        if (Math.abs(x2) <= 1) roots++;\n        if (x1 < -1) x1 = x2;\n      }\n      if (roots === 1) {\n        if (h0 < 0) rise = i + x1;else set = i + x1;\n      } else if (roots === 2) {\n        rise = i + (ye < 0 ? x2 : x1);\n        set = i + (ye < 0 ? x1 : x2);\n      }\n      if (rise && set) break;\n      h0 = h2;\n    }\n    var result = {};\n    if (rise) result.rise = hoursLater(t, rise);\n    if (set) result.set = hoursLater(t, set);\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n    return result;\n  };\n\n  //// export as Node module / AMD module / browser variable\n  //if (typeof exports === 'object' && typeof module !== 'undefined') module.exports = SunCalc;\n  //else if (typeof define === 'function' && define.amd) define(SunCalc);\n  //else window.SunCalc = SunCalc;\n  module.exports = exports = SunCalc;\n})();","map":{"version":3,"names":["PI","Math","sin","cos","tan","asin","atan","atan2","acos","rad","dayMs","J1970","J2000","toJulian","date","valueOf","fromJulian","j","Date","toDays","e","rightAscension","l","b","declination","azimuth","H","phi","dec","altitude","siderealTime","d","lw","astroRefraction","h","solarMeanAnomaly","eclipticLongitude","M","C","P","sunCoords","L","ra","SunCalc","getPosition","lat","lng","c","times","addTime","angle","riseName","setName","push","J0","julianCycle","round","approxTransit","Ht","n","solarTransitJ","ds","hourAngle","observerAngle","height","sqrt","getSetJ","w","a","getTimes","dh","Jnoon","i","len","time","h0","Jset","Jrise","result","solarNoon","nadir","length","moonCoords","F","dt","dist","getMoonPosition","pa","distance","parallacticAngle","getMoonIllumination","s","m","sdist","inc","fraction","phase","hoursLater","getMoonTimes","inUTC","t","setUTCHours","setHours","hc","h1","h2","rise","set","xe","ye","roots","x1","x2","dx","abs","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/node_modules/threebox-plugin/src/utils/suncalc.js"],"sourcesContent":["/*\r\n (c) 2011-2015, Vladimir Agafonkin\r\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\r\n https://github.com/mourner/suncalc\r\n*/\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    // shortcuts for easier to read formulas\r\n\r\n    var PI = Math.PI,\r\n        sin = Math.sin,\r\n        cos = Math.cos,\r\n        tan = Math.tan,\r\n        asin = Math.asin,\r\n        atan = Math.atan2,\r\n        acos = Math.acos,\r\n        rad = PI / 180;\r\n\r\n    // sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\r\n\r\n\r\n    // date/time constants and conversions\r\n\r\n    var dayMs = 1000 * 60 * 60 * 24,\r\n        J1970 = 2440588,\r\n        J2000 = 2451545;\r\n\r\n    function toJulian(date) { return date.valueOf() / dayMs - 0.5 + J1970; }\r\n    function fromJulian(j) { return new Date((j + 0.5 - J1970) * dayMs); }\r\n    function toDays(date) { return toJulian(date) - J2000; }\r\n\r\n    // general calculations for position\r\n\r\n    var e = rad * 23.4397; // obliquity of the Earth\r\n\r\n    function rightAscension(l, b) { return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l)); }\r\n    function declination(l, b) { return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l)); }\r\n\r\n    function azimuth(H, phi, dec) { return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi)); }\r\n    function altitude(H, phi, dec) { return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H)); }\r\n\r\n    function siderealTime(d, lw) { return rad * (280.16 + 360.9856235 * d) - lw; }\r\n\r\n    function astroRefraction(h) {\r\n        if (h < 0) // the following formula works for positive altitudes only.\r\n            h = 0; // if h = -0.08901179 a div/0 would occur.\r\n\r\n        // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\r\n        // 1.02 / tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to rad:\r\n        return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\r\n    }\r\n\r\n    // general sun calculations\r\n\r\n    function solarMeanAnomaly(d) { return rad * (357.5291 + 0.98560028 * d); }\r\n\r\n    function eclipticLongitude(M) {\r\n\r\n        var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)), // equation of center\r\n            P = rad * 102.9372; // perihelion of the Earth\r\n\r\n        return M + C + P + PI;\r\n    }\r\n\r\n    function sunCoords(d) {\r\n\r\n        var M = solarMeanAnomaly(d),\r\n            L = eclipticLongitude(M);\r\n\r\n        return {\r\n            dec: declination(L, 0),\r\n            ra: rightAscension(L, 0)\r\n        };\r\n    }\r\n\r\n\r\n    var SunCalc = {};\r\n\r\n\r\n    // calculates sun position for a given date and latitude/longitude\r\n\r\n    SunCalc.getPosition = function (date, lat, lng) {\r\n\r\n        var lw = rad * -lng,\r\n            phi = rad * lat,\r\n            d = toDays(date),\r\n\r\n            c = sunCoords(d),\r\n            H = siderealTime(d, lw) - c.ra;\r\n\r\n        return {\r\n            azimuth: azimuth(H, phi, c.dec),\r\n            altitude: altitude(H, phi, c.dec)\r\n        };\r\n    };\r\n\r\n    SunCalc.toJulian = function (date) {\r\n        return toJulian(date);\r\n    };\r\n\r\n    // sun times configuration (angle, morning name, evening name)\r\n\r\n    var times = SunCalc.times = [\r\n        [-0.833, 'sunrise', 'sunset'],\r\n        [-0.3, 'sunriseEnd', 'sunsetStart'],\r\n        [-6, 'dawn', 'dusk'],\r\n        [-12, 'nauticalDawn', 'nauticalDusk'],\r\n        [-18, 'nightEnd', 'night'],\r\n        [6, 'goldenHourEnd', 'goldenHour']\r\n    ];\r\n\r\n    // adds a custom time to the times config\r\n\r\n    SunCalc.addTime = function (angle, riseName, setName) {\r\n        times.push([angle, riseName, setName]);\r\n    };\r\n\r\n\r\n    // calculations for sun times\r\n\r\n    var J0 = 0.0009;\r\n\r\n    function julianCycle(d, lw) { return Math.round(d - J0 - lw / (2 * PI)); }\r\n\r\n    function approxTransit(Ht, lw, n) { return J0 + (Ht + lw) / (2 * PI) + n; }\r\n    function solarTransitJ(ds, M, L) { return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L); }\r\n\r\n    function hourAngle(h, phi, d) { return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d))); }\r\n    function observerAngle(height) { return -2.076 * Math.sqrt(height) / 60; }\r\n\r\n    // returns set time for the given sun altitude\r\n    function getSetJ(h, lw, phi, dec, n, M, L) {\r\n\r\n        var w = hourAngle(h, phi, dec),\r\n            a = approxTransit(w, lw, n);\r\n        return solarTransitJ(a, M, L);\r\n    }\r\n\r\n\r\n    // calculates sun times for a given date, latitude/longitude, and, optionally,\r\n    // the observer height (in meters) relative to the horizon\r\n\r\n    SunCalc.getTimes = function (date, lat, lng, height) {\r\n\r\n        height = height || 0;\r\n\r\n        var lw = rad * -lng,\r\n            phi = rad * lat,\r\n\r\n            dh = observerAngle(height),\r\n\r\n            d = toDays(date),\r\n            n = julianCycle(d, lw),\r\n            ds = approxTransit(0, lw, n),\r\n\r\n            M = solarMeanAnomaly(ds),\r\n            L = eclipticLongitude(M),\r\n            dec = declination(L, 0),\r\n\r\n            Jnoon = solarTransitJ(ds, M, L),\r\n\r\n            i, len, time, h0, Jset, Jrise;\r\n\r\n\r\n        var result = {\r\n            solarNoon: fromJulian(Jnoon),\r\n            nadir: fromJulian(Jnoon - 0.5)\r\n        };\r\n\r\n        for (i = 0, len = times.length; i < len; i += 1) {\r\n            time = times[i];\r\n            h0 = (time[0] + dh) * rad;\r\n\r\n            Jset = getSetJ(h0, lw, phi, dec, n, M, L);\r\n            Jrise = Jnoon - (Jset - Jnoon);\r\n\r\n            result[time[1]] = fromJulian(Jrise);\r\n            result[time[2]] = fromJulian(Jset);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    // moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\r\n\r\n    function moonCoords(d) { // geocentric ecliptic coordinates of the moon\r\n\r\n        var L = rad * (218.316 + 13.176396 * d), // ecliptic longitude\r\n            M = rad * (134.963 + 13.064993 * d), // mean anomaly\r\n            F = rad * (93.272 + 13.229350 * d),  // mean distance\r\n\r\n            l = L + rad * 6.289 * sin(M), // longitude\r\n            b = rad * 5.128 * sin(F),     // latitude\r\n            dt = 385001 - 20905 * cos(M);  // distance to the moon in km\r\n\r\n        return {\r\n            ra: rightAscension(l, b),\r\n            dec: declination(l, b),\r\n            dist: dt\r\n        };\r\n    }\r\n\r\n    SunCalc.getMoonPosition = function (date, lat, lng) {\r\n\r\n        var lw = rad * -lng,\r\n            phi = rad * lat,\r\n            d = toDays(date),\r\n\r\n            c = moonCoords(d),\r\n            H = siderealTime(d, lw) - c.ra,\r\n            h = altitude(H, phi, c.dec),\r\n            // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\r\n            pa = atan(sin(H), tan(phi) * cos(c.dec) - sin(c.dec) * cos(H));\r\n\r\n        h = h + astroRefraction(h); // altitude correction for refraction\r\n\r\n        return {\r\n            azimuth: azimuth(H, phi, c.dec),\r\n            altitude: h,\r\n            distance: c.dist,\r\n            parallacticAngle: pa\r\n        };\r\n    };\r\n\r\n\r\n    // calculations for illumination parameters of the moon,\r\n    // based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\r\n    // Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\r\n\r\n    SunCalc.getMoonIllumination = function (date) {\r\n\r\n        var d = toDays(date || new Date()),\r\n            s = sunCoords(d),\r\n            m = moonCoords(d),\r\n\r\n            sdist = 149598000, // distance from Earth to Sun in km\r\n\r\n            phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\r\n            inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\r\n            angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) -\r\n                cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\r\n\r\n        return {\r\n            fraction: (1 + cos(inc)) / 2,\r\n            phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\r\n            angle: angle\r\n        };\r\n    };\r\n\r\n\r\n    function hoursLater(date, h) {\r\n        return new Date(date.valueOf() + h * dayMs / 24);\r\n    }\r\n\r\n    // calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\r\n\r\n    SunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\r\n        var t = new Date(date);\r\n        if (inUTC) t.setUTCHours(0, 0, 0, 0);\r\n        else t.setHours(0, 0, 0, 0);\r\n\r\n        var hc = 0.133 * rad,\r\n            h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\r\n            h1, h2, rise, set, a, b, xe, ye, d, roots, x1, x2, dx;\r\n\r\n        // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\r\n        for (var i = 1; i <= 24; i += 2) {\r\n            h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\r\n            h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\r\n\r\n            a = (h0 + h2) / 2 - h1;\r\n            b = (h2 - h0) / 2;\r\n            xe = -b / (2 * a);\r\n            ye = (a * xe + b) * xe + h1;\r\n            d = b * b - 4 * a * h1;\r\n            roots = 0;\r\n\r\n            if (d >= 0) {\r\n                dx = Math.sqrt(d) / (Math.abs(a) * 2);\r\n                x1 = xe - dx;\r\n                x2 = xe + dx;\r\n                if (Math.abs(x1) <= 1) roots++;\r\n                if (Math.abs(x2) <= 1) roots++;\r\n                if (x1 < -1) x1 = x2;\r\n            }\r\n\r\n            if (roots === 1) {\r\n                if (h0 < 0) rise = i + x1;\r\n                else set = i + x1;\r\n\r\n            } else if (roots === 2) {\r\n                rise = i + (ye < 0 ? x2 : x1);\r\n                set = i + (ye < 0 ? x1 : x2);\r\n            }\r\n\r\n            if (rise && set) break;\r\n\r\n            h0 = h2;\r\n        }\r\n\r\n        var result = {};\r\n\r\n        if (rise) result.rise = hoursLater(t, rise);\r\n        if (set) result.set = hoursLater(t, set);\r\n\r\n        if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    //// export as Node module / AMD module / browser variable\r\n    //if (typeof exports === 'object' && typeof module !== 'undefined') module.exports = SunCalc;\r\n    //else if (typeof define === 'function' && define.amd) define(SunCalc);\r\n    //else window.SunCalc = SunCalc;\r\n    module.exports = exports = SunCalc\r\n}());\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}