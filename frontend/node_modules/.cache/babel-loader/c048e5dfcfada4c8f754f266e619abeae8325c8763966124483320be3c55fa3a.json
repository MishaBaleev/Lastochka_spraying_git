{"ast":null,"code":"export class sprayManager {\n  constructor() {}\n  checkWheather(wheather) {\n    let hum = Number(wheather.humidity);\n    let temp = Number(wheather.temperature);\n    let wind = Number(wheather.wind_speed);\n    let adjuvants = Number(wheather.adjuvants);\n    console.log(adjuvants);\n    const temp_hum_table = {\n      90: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 80]\n      },\n      80: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 60]\n      },\n      70: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 80]\n      },\n      60: {\n        good: [10, 27],\n        middle: [27, 36],\n        bad: [36, 80]\n      },\n      50: {\n        good: [],\n        middle: [18, 30],\n        bad: [30, 80]\n      },\n      40: {\n        good: [],\n        middle: [18, 24],\n        bad: [24, 80]\n      },\n      30: {\n        good: [],\n        middle: [18, 24],\n        bad: [24, 80]\n      }\n    };\n    if (wind <= 5) {\n      let hum_values = temp_hum_table[hum];\n      let result = \"undef\";\n      Object.keys(hum_values).forEach(key => {\n        let range = hum_values[key];\n        if (temp >= range[0] && temp < range[1]) {\n          result = key;\n        }\n      });\n      return result;\n    } else {\n      return \"bad\";\n    }\n  }\n}","map":{"version":3,"names":["sprayManager","constructor","checkWheather","wheather","hum","Number","humidity","temp","temperature","wind","wind_speed","adjuvants","console","log","temp_hum_table","good","middle","bad","hum_values","result","Object","keys","forEach","key","range"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/sprayManager.js"],"sourcesContent":["export class sprayManager{\n    constructor(){\n\n    }\n\n    checkWheather(wheather) {\n        let hum = Number(wheather.humidity)\n        let temp = Number(wheather.temperature)\n        let wind = Number(wheather.wind_speed)\n        let adjuvants = Number(wheather.adjuvants)\n        console.log(adjuvants)\n        const temp_hum_table = {\n            90: {good: [10, 33], middle: [33, 36], bad: [36, 80]},\n            80: {good: [10, 33], middle: [33, 36], bad: [36, 60]},\n            70: {good: [10, 33], middle: [33, 36], bad: [36, 80]},\n            60: {good: [10, 27], middle: [27, 36], bad: [36, 80]},\n            50: {good: [], middle: [18, 30], bad: [30, 80]},\n            40: {good: [], middle: [18, 24], bad: [24, 80]},\n            30: {good: [], middle: [18, 24], bad: [24, 80]},\n        }\n        if (wind <= 5){\n            let hum_values = temp_hum_table[hum]\n            let result = \"undef\"\n            Object.keys(hum_values).forEach(key => {\n                let range = hum_values[key]\n                if (temp >= range[0] && temp < range[1]){\n                    result = key\n                }\n            })\n            return result\n        }else{\n            return \"bad\"\n        }\n    }\n\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY;EACrBC,WAAWA,CAAA,EAAE,CAEb;EAEAC,aAAaA,CAACC,QAAQ,EAAE;IACpB,IAAIC,GAAG,GAAGC,MAAM,CAACF,QAAQ,CAACG,QAAQ,CAAC;IACnC,IAAIC,IAAI,GAAGF,MAAM,CAACF,QAAQ,CAACK,WAAW,CAAC;IACvC,IAAIC,IAAI,GAAGJ,MAAM,CAACF,QAAQ,CAACO,UAAU,CAAC;IACtC,IAAIC,SAAS,GAAGN,MAAM,CAACF,QAAQ,CAACQ,SAAS,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,MAAMG,cAAc,GAAG;MACnB,EAAE,EAAE;QAACC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MAC/C,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MAC/C,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC;IAClD,CAAC;IACD,IAAIR,IAAI,IAAI,CAAC,EAAC;MACV,IAAIS,UAAU,GAAGJ,cAAc,CAACV,GAAG,CAAC;MACpC,IAAIe,MAAM,GAAG,OAAO;MACpBC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;QACnC,IAAIC,KAAK,GAAGN,UAAU,CAACK,GAAG,CAAC;QAC3B,IAAIhB,IAAI,IAAIiB,KAAK,CAAC,CAAC,CAAC,IAAIjB,IAAI,GAAGiB,KAAK,CAAC,CAAC,CAAC,EAAC;UACpCL,MAAM,GAAGI,GAAG;QAChB;MACJ,CAAC,CAAC;MACF,OAAOJ,MAAM;IACjB,CAAC,MAAI;MACD,OAAO,KAAK;IAChB;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}