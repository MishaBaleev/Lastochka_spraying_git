{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/layouts/Header/MonitoringInfoPanel/MonitoringInfoPanel.js\";\nimport React from 'react';\nimport './MonitoringInfoPanel.css';\nimport routeIcon from './imgs/route.png';\nimport timeIcon from './imgs/time.png';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MonitoringInfoPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeFormat = this.timeFormat.bind(this);\n    this.distanceFormat = this.distanceFormat.bind(this);\n  }\n  timeFormat(time) {\n    if (isNaN(time)) return \"-:-:-\";\n    let hours = Math.floor(time / 3600);\n    let minutes = Math.floor((time - hours * 3600) / 60);\n    let seconds = time - hours * 3600 - minutes * 60;\n    seconds = Math.trunc(seconds);\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    return hours + ':' + minutes + ':' + seconds;\n  }\n  distanceFormat(distance) {\n    if (isNaN(distance)) return \"-:-:-\";\n    if (distance > 1000) {\n      let km = Math.trunc(distance / 1000);\n      let meters = distance - km * 1000;\n      return km + 'км ' + Math.trunc(meters) + 'м';\n    } else {\n      return Math.trunc(distance) + 'м';\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--weather d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container--inner--weather\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex column--weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text--weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text--weather\",\n            children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0430\\u0437\\u0438\\u043C\\u0443\\u0442 \", Math.trunc(this.props.app.monitoring_cur_azimuth), \" \\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitoringInfoPanel);","map":{"version":3,"names":["React","routeIcon","timeIcon","connect","jsxDEV","_jsxDEV","MonitoringInfoPanel","Component","constructor","props","timeFormat","bind","distanceFormat","time","isNaN","hours","Math","floor","minutes","seconds","trunc","distance","km","meters","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","app","monitoring_cur_azimuth","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/layouts/Header/MonitoringInfoPanel/MonitoringInfoPanel.js"],"sourcesContent":["import React from 'react';\nimport './MonitoringInfoPanel.css';\nimport routeIcon from './imgs/route.png';\nimport timeIcon from './imgs/time.png';\nimport { connect } from 'react-redux';\n\n\nclass MonitoringInfoPanel extends React.Component {\n  constructor(props){\n    super(props);\n    this.timeFormat = this.timeFormat.bind(this);\n    this.distanceFormat = this.distanceFormat.bind(this);\n  }\n  timeFormat(time){\n    if(isNaN(time)) return \"-:-:-\"\n    let hours = Math.floor(time / 3600)\n    let minutes = Math.floor((time - (hours * 3600)) / 60);\n    let seconds = time - (hours * 3600) - (minutes * 60);\n\n    seconds = Math.trunc(seconds)\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return hours + ':' + minutes + ':' + seconds;\n  }\n  distanceFormat(distance){\n    if(isNaN(distance)) return \"-:-:-\"\n    if(distance > 1000){\n      let km = Math.trunc(distance/1000)\n      let meters = distance-km*1000\n      return km + 'км ' +  Math.trunc(meters) + 'м';\n    }\n    else{\n      return Math.trunc(distance) + 'м';\n    }\n  }\n  render() {\n    return (\n      <div className=\"container--weather d-flex\">\n        <div className=\"container--inner--weather\">\n          {/* <div className=\"d-flex column--weather\">\n            <p className=\"text--weather\"></p>\n            <p className=\"text--weather\">Азимут до следующей точки {isNaN(this.props.app.monitoring_wp_azimuth)  ? \"-\" : Math.trunc(this.props.app.monitoring_wp_azimuth)} °</p>\n          </div> */}\n          <div className=\"d-flex column--weather\">\n            <p className=\"text--weather\"></p>\n            <p className=\"text--weather\">Текущий азимут {Math.trunc(this.props.app.monitoring_cur_azimuth)} °</p>\n          </div>\n        </div>\n        {/* <div className=\"container--inner--weather\">\n          <div className=\"d-flex column--weather\">\n            <p className=\"icon__container--weather\"><img src={routeIcon} className=\"icons mr-1\" alt=\"\"/></p>\n            <p className=\"hidden--header\">Длина маршрута</p>\n            <p className=\"text--weather\">{this.distanceFormat(this.props.app.monitoring_distance)}</p>\n          </div>\n          <div className=\"d-flex column--weather\">\n            <p className=\"icon__container--weather\"><img src={timeIcon} className=\"icons mr-1\" alt=\"\"/></p>\n            <p className=\"hidden--header\">Время маршрута</p>\n            <p className=\"text--weather\">{this.timeFormat(this.props.app.monitoring_time)}</p>\n          </div>\n        </div>\n        <div className=\"container--inner--weather\">\n          <div className=\"d-flex column--weather\">\n            <p className=\"text--weather\"></p>\n            <p className=\"text--weather\">Расстояние до точки {this.distanceFormat(this.props.app.monitoring_wp_distance)}</p>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return state;\n}\nconst mapDispatchToProps =  (dispatch) => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonitoringInfoPanel)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,2BAA2B;AAClC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,mBAAmB,SAASN,KAAK,CAACO,SAAS,CAAC;EAChDC,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;EACtD;EACAD,UAAUA,CAACG,IAAI,EAAC;IACd,IAAGC,KAAK,CAACD,IAAI,CAAC,EAAE,OAAO,OAAO;IAC9B,IAAIE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,GAAG,IAAI,CAAC;IACnC,IAAIK,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAC,CAACJ,IAAI,GAAIE,KAAK,GAAG,IAAK,IAAI,EAAE,CAAC;IACtD,IAAII,OAAO,GAAGN,IAAI,GAAIE,KAAK,GAAG,IAAK,GAAIG,OAAO,GAAG,EAAG;IAEpDC,OAAO,GAAGH,IAAI,CAACI,KAAK,CAACD,OAAO,CAAC;IAC7B,IAAIJ,KAAK,GAAK,EAAE,EAAE;MAACA,KAAK,GAAK,GAAG,GAACA,KAAK;IAAC;IACvC,IAAIG,OAAO,GAAG,EAAE,EAAE;MAACA,OAAO,GAAG,GAAG,GAACA,OAAO;IAAC;IACzC,IAAIC,OAAO,GAAG,EAAE,EAAE;MAACA,OAAO,GAAG,GAAG,GAACA,OAAO;IAAC;IACzC,OAAOJ,KAAK,GAAG,GAAG,GAAGG,OAAO,GAAG,GAAG,GAAGC,OAAO;EAC9C;EACAP,cAAcA,CAACS,QAAQ,EAAC;IACtB,IAAGP,KAAK,CAACO,QAAQ,CAAC,EAAE,OAAO,OAAO;IAClC,IAAGA,QAAQ,GAAG,IAAI,EAAC;MACjB,IAAIC,EAAE,GAAGN,IAAI,CAACI,KAAK,CAACC,QAAQ,GAAC,IAAI,CAAC;MAClC,IAAIE,MAAM,GAAGF,QAAQ,GAACC,EAAE,GAAC,IAAI;MAC7B,OAAOA,EAAE,GAAG,KAAK,GAAIN,IAAI,CAACI,KAAK,CAACG,MAAM,CAAC,GAAG,GAAG;IAC/C,CAAC,MACG;MACF,OAAOP,IAAI,CAACI,KAAK,CAACC,QAAQ,CAAC,GAAG,GAAG;IACnC;EACF;EACAG,MAAMA,CAAA,EAAG;IACP,oBACEnB,OAAA;MAAKoB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACxCrB,OAAA;QAAKoB,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eAKxCrB,OAAA;UAAKoB,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCrB,OAAA;YAAGoB,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjCzB,OAAA;YAAGoB,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,kFAAe,EAACV,IAAI,CAACI,KAAK,CAAC,IAAI,CAACX,KAAK,CAACsB,GAAG,CAACC,sBAAsB,CAAC,EAAC,OAAE;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBH,CAAC;EAEV;AACF;AACA,MAAMG,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAOA,KAAK;AACd,CAAC;AACD,MAAMC,kBAAkB,GAAKC,QAAQ,IAAK;EACxC,OAAO,CAAC,CAAC;AACX,CAAC;AAED,eAAejC,OAAO,CAAC8B,eAAe,EAAEE,kBAAkB,CAAC,CAAC7B,mBAAmB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}