{"ast":null,"code":"export class sprayManager {\n  constructor() {}\n  checkHumTemp(humidity, temperature) {\n    let hum = Number(humidity);\n    let temp = Number(temperature);\n    const temp_hum_table = {\n      90: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 80]\n      },\n      80: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 60]\n      },\n      70: {\n        good: [10, 33],\n        middle: [33, 36],\n        bad: [36, 80]\n      },\n      60: {\n        good: [10, 27],\n        middle: [27, 36],\n        bad: [36, 80]\n      },\n      50: {\n        good: [],\n        middle: [18, 30],\n        bad: [30, 80]\n      },\n      40: {\n        good: [],\n        middle: [18, 24],\n        bad: [24, 80]\n      },\n      30: {\n        good: [],\n        middle: [18, 24],\n        bad: [24, 80]\n      }\n    };\n    let hum_values = temp_hum_table[hum];\n    let result = \"undef\";\n    Object.keys(hum_values).forEach(key => {\n      let range = hum_values[key];\n      if (temp >= range[0] && temp < range[1]) {\n        result = key;\n      }\n    });\n    return result;\n  }\n}","map":{"version":3,"names":["sprayManager","constructor","checkHumTemp","humidity","temperature","hum","Number","temp","temp_hum_table","good","middle","bad","hum_values","result","Object","keys","forEach","key","range"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/sprayManager.js"],"sourcesContent":["export class sprayManager{\n    constructor(){\n\n    }\n\n    checkHumTemp(humidity, temperature) {\n        let hum = Number(humidity)\n        let temp = Number(temperature)\n        const temp_hum_table = {\n            90: {good: [10, 33], middle: [33, 36], bad: [36, 80]},\n            80: {good: [10, 33], middle: [33, 36], bad: [36, 60]},\n            70: {good: [10, 33], middle: [33, 36], bad: [36, 80]},\n            60: {good: [10, 27], middle: [27, 36], bad: [36, 80]},\n            50: {good: [], middle: [18, 30], bad: [30, 80]},\n            40: {good: [], middle: [18, 24], bad: [24, 80]},\n            30: {good: [], middle: [18, 24], bad: [24, 80]},\n        }\n        let hum_values = temp_hum_table[hum]\n        let result = \"undef\"\n        Object.keys(hum_values).forEach(key => {\n            let range = hum_values[key]\n            if (temp >= range[0] && temp < range[1]){\n                result = key\n            }\n        })\n        return result\n    }\n\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY;EACrBC,WAAWA,CAAA,EAAE,CAEb;EAEAC,YAAYA,CAACC,QAAQ,EAAEC,WAAW,EAAE;IAChC,IAAIC,GAAG,GAAGC,MAAM,CAACH,QAAQ,CAAC;IAC1B,IAAII,IAAI,GAAGD,MAAM,CAACF,WAAW,CAAC;IAC9B,MAAMI,cAAc,GAAG;MACnB,EAAE,EAAE;QAACC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MACrD,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MAC/C,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC,CAAC;MAC/C,EAAE,EAAE;QAACF,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;MAAC;IAClD,CAAC;IACD,IAAIC,UAAU,GAAGJ,cAAc,CAACH,GAAG,CAAC;IACpC,IAAIQ,MAAM,GAAG,OAAO;IACpBC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACnC,IAAIC,KAAK,GAAGN,UAAU,CAACK,GAAG,CAAC;MAC3B,IAAIV,IAAI,IAAIW,KAAK,CAAC,CAAC,CAAC,IAAIX,IAAI,GAAGW,KAAK,CAAC,CAAC,CAAC,EAAC;QACpCL,MAAM,GAAGI,GAAG;MAChB;IACJ,CAAC,CAAC;IACF,OAAOJ,MAAM;EACjB;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}