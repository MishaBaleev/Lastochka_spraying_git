{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js\",\n  _s = $RefreshSig$();\nimport \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { CommonManager } from \"./CommonManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { update_modal_message } from \"../AppSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spraying = props => {\n  _s();\n  const [CommonManager_obj, setManager] = useState(null);\n  const [cursor_coords, setCursorCoords] = useState([0, 0]);\n  useEffect(() => {\n    props.update_modal_message({\n      active: true,\n      heading: \"error\",\n      message: \"error\"\n    });\n    if (props.manager3D !== null) {\n      let manager = new CommonManager(props.map, props.manager3D);\n      setManager(manager);\n      props.map.on(\"mousemove\", e => {\n        if (manager.translate_cursor === true) {\n          setCursorCoords([e.lngLat.lng, e.lngLat.lat]);\n        }\n      });\n      props.map.on(\"click\", e => {\n        if (manager.translate_cursor === true) {\n          manager.setStartMarker([e.lngLat.lng, e.lngLat.lat]);\n        }\n      });\n    }\n  }, [props.manager3D]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spraying\",\n    children: /*#__PURE__*/_jsxDEV(Settings, {\n      manager: CommonManager_obj,\n      cursor_coords: cursor_coords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n_s(Spraying, \"uhQXzRqdbLZu3mXG0mfmTTw96W4=\");\n_c = Spraying;\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    \"update_modal_message\": data => {\n      dispatch(update_modal_message(data));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying);\nvar _c;\n$RefreshReg$(_c, \"Spraying\");","map":{"version":3,"names":["Settings","CommonManager","useEffect","useState","connect","update_modal_message","jsxDEV","_jsxDEV","Spraying","props","_s","CommonManager_obj","setManager","cursor_coords","setCursorCoords","active","heading","message","manager3D","manager","map","on","e","translate_cursor","lngLat","lng","lat","setStartMarker","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","mapDispatchToProps","dispatch","data","$RefreshReg$"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js"],"sourcesContent":["import \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { CommonManager } from \"./CommonManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {update_modal_message} from \"../AppSlice\"\n\nconst Spraying = (props) => {\n    const [CommonManager_obj, setManager] = useState(null)\n    const [cursor_coords, setCursorCoords] = useState([0, 0])\n    useEffect(() => {\n        props.update_modal_message({active: true, heading: \"error\", message: \"error\"})\n        if (props.manager3D !== null){\n            let manager = new CommonManager(props.map, props.manager3D)\n            setManager(manager)\n            props.map.on(\"mousemove\", (e) => {\n                if (manager.translate_cursor === true){\n                   setCursorCoords([e.lngLat.lng, e.lngLat.lat]) \n                }\n            })\n            props.map.on(\"click\", (e) => {\n                if (manager.translate_cursor === true){\n                    manager.setStartMarker([e.lngLat.lng, e.lngLat.lat])\n                }\n            })\n        }\n    }, [props.manager3D])\n\n    return <div className=\"spraying\">\n        <Settings manager={CommonManager_obj} cursor_coords={cursor_coords}/>\n    </div>\n}\nconst mapStateToProps = (state) => {return state}\nconst mapDispatchToProps = (dispatch) => { return{\n    \"update_modal_message\": (data) => {dispatch(update_modal_message(data))}\n}}\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying)"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAAQC,oBAAoB,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,iBAAiB,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACzDD,SAAS,CAAC,MAAM;IACZO,KAAK,CAACJ,oBAAoB,CAAC;MAACU,MAAM,EAAE,IAAI;MAAEC,OAAO,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC;IAC9E,IAAIR,KAAK,CAACS,SAAS,KAAK,IAAI,EAAC;MACzB,IAAIC,OAAO,GAAG,IAAIlB,aAAa,CAACQ,KAAK,CAACW,GAAG,EAAEX,KAAK,CAACS,SAAS,CAAC;MAC3DN,UAAU,CAACO,OAAO,CAAC;MACnBV,KAAK,CAACW,GAAG,CAACC,EAAE,CAAC,WAAW,EAAGC,CAAC,IAAK;QAC7B,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UACnCT,eAAe,CAAC,CAACQ,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QAChD;MACJ,CAAC,CAAC;MACFjB,KAAK,CAACW,GAAG,CAACC,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;QACzB,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UAClCJ,OAAO,CAACQ,cAAc,CAAC,CAACL,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QACxD;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACjB,KAAK,CAACS,SAAS,CAAC,CAAC;EAErB,oBAAOX,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,eAC5BtB,OAAA,CAACP,QAAQ;MAACmB,OAAO,EAAER,iBAAkB;MAACE,aAAa,EAAEA;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AACV,CAAC;AAAAvB,EAAA,CAxBKF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAyBd,MAAM2B,eAAe,GAAIC,KAAK,IAAK;EAAC,OAAOA,KAAK;AAAA,CAAC;AACjD,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EAAE,OAAM;IAC7C,sBAAsB,EAAGC,IAAI,IAAK;MAACD,QAAQ,CAACjC,oBAAoB,CAACkC,IAAI,CAAC,CAAC;IAAA;EAC3E,CAAC;AAAA,CAAC;AACF,eAAenC,OAAO,CAAC+B,eAAe,EAAEE,kBAAkB,CAAC,CAAC7B,QAAQ,CAAC;AAAA,IAAA0B,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}