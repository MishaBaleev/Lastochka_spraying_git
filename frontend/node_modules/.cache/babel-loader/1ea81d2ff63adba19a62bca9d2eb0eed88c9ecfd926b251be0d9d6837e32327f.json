{"ast":null,"code":"/**\r\n * @author jscastro / https://github.com/jscastro76\r\n */\nconst Objects = require('./objects.js');\nconst utils = require(\"../utils/utils.js\");\nconst THREE = require(\"../three.js\");\nconst Object3D = require('./Object3D.js');\n\n/**\r\n * \r\n * @param {any} opt must fit the default defined in Objects.prototype._defaults.extrusion \r\n * @param {arr} opt.coordinates could receive a feature.geometry.coordinates\r\n */\nfunction extrusion(opt) {\n  opt = utils._validate(opt, Objects.prototype._defaults.extrusion);\n  let shape = extrusion.prototype.buildShape(opt.coordinates);\n  let geometry = extrusion.prototype.buildGeometry(shape, opt.geometryOptions);\n  let mesh = new THREE.Mesh(geometry, opt.materials);\n  opt.obj = mesh;\n  //[jscastro] we convert it in Object3D to add methods, bounding box, model, tooltip...\n  return new Object3D(opt);\n}\nextrusion.prototype = {\n  buildShape: function (coords) {\n    if (coords[0] instanceof (THREE.Vector2 || THREE.Vector3)) return new THREE.Shape(coords);\n    let shape = new THREE.Shape();\n    for (let i = 0; i < coords.length; i++) {\n      if (i === 0) {\n        shape = new THREE.Shape(this.buildPoints(coords[0], coords[0]));\n      } else {\n        shape.holes.push(new THREE.Path(this.buildPoints(coords[i], coords[0])));\n      }\n    }\n    return shape;\n  },\n  buildPoints: function (coords, initCoords) {\n    const points = [];\n    let init = utils.projectToWorld([initCoords[0][0], initCoords[0][1], 0]);\n    for (let i = 0; i < coords.length; i++) {\n      let pos = utils.projectToWorld([coords[i][0], coords[i][1], 0]);\n      points.push(new THREE.Vector2(utils.toDecimal(pos.x - init.x, 9), utils.toDecimal(pos.y - init.y, 9)));\n    }\n    return points;\n  },\n  buildGeometry: function (shape, settings) {\n    let geometry = new THREE.ExtrudeBufferGeometry(shape, settings);\n    geometry.computeBoundingBox();\n    return geometry;\n  }\n};\nmodule.exports = exports = extrusion;","map":{"version":3,"names":["Objects","require","utils","THREE","Object3D","extrusion","opt","_validate","prototype","_defaults","shape","buildShape","coordinates","geometry","buildGeometry","geometryOptions","mesh","Mesh","materials","obj","coords","Vector2","Vector3","Shape","i","length","buildPoints","holes","push","Path","initCoords","points","init","projectToWorld","pos","toDecimal","x","y","settings","ExtrudeBufferGeometry","computeBoundingBox","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/Lastochka_spraying/frontend/node_modules/threebox-plugin/src/objects/extrusion.js"],"sourcesContent":["/**\r\n * @author jscastro / https://github.com/jscastro76\r\n */\r\nconst Objects = require('./objects.js');\r\nconst utils = require(\"../utils/utils.js\");\r\nconst THREE = require(\"../three.js\");\r\nconst Object3D = require('./Object3D.js');\r\n\r\n/**\r\n * \r\n * @param {any} opt must fit the default defined in Objects.prototype._defaults.extrusion \r\n * @param {arr} opt.coordinates could receive a feature.geometry.coordinates\r\n */\r\nfunction extrusion(opt) {\r\n\r\n\topt = utils._validate(opt, Objects.prototype._defaults.extrusion);\r\n\tlet shape = extrusion.prototype.buildShape(opt.coordinates);\r\n\tlet geometry = extrusion.prototype.buildGeometry(shape, opt.geometryOptions);\r\n\tlet mesh = new THREE.Mesh(geometry, opt.materials);\r\n\topt.obj = mesh;\r\n\t//[jscastro] we convert it in Object3D to add methods, bounding box, model, tooltip...\r\n\treturn new Object3D(opt);\r\n\r\n}\r\n\r\nextrusion.prototype = {\r\n\r\n\tbuildShape: function (coords) {\r\n\t\tif (coords[0] instanceof (THREE.Vector2 || THREE.Vector3)) return new THREE.Shape(coords);\r\n\t\tlet shape = new THREE.Shape();\r\n\t\tfor (let i = 0; i < coords.length; i++) {\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tshape = new THREE.Shape(this.buildPoints(coords[0], coords[0]));\r\n\t\t\t} else {\r\n\t\t\t\tshape.holes.push(new THREE.Path(this.buildPoints(coords[i], coords[0])));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn shape;\r\n\t},\r\n\r\n\tbuildPoints: function (coords, initCoords) {\r\n\t\tconst points = [];\r\n\t\tlet init = utils.projectToWorld([initCoords[0][0], initCoords[0][1], 0]);\r\n\t\tfor (let i = 0; i < coords.length; i++) {\r\n\t\t\tlet pos = utils.projectToWorld([coords[i][0], coords[i][1], 0]);\r\n\t\t\tpoints.push(new THREE.Vector2(utils.toDecimal((pos.x - init.x), 9), utils.toDecimal((pos.y - init.y), 9)));\r\n\t\t}\r\n\t\treturn points;\r\n\t},\r\n\r\n\tbuildGeometry: function (shape, settings) {\r\n\t\tlet geometry = new THREE.ExtrudeBufferGeometry(shape, settings);\r\n\t\tgeometry.computeBoundingBox();\r\n\t\treturn geometry;\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = exports = extrusion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}