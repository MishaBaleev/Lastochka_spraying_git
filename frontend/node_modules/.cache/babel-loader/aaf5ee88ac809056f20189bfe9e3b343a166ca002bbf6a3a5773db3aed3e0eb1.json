{"ast":null,"code":"/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n */\nconst utils = require(\"../utils/utils.js\");\nconst Objects = require('./objects.js');\nconst OBJLoader = require(\"./loaders/OBJLoader.js\");\nconst MTLLoader = require(\"./loaders/MTLLoader.js\");\nconst FBXLoader = require(\"./loaders/FBXLoader.js\");\nconst GLTFLoader = require(\"./loaders/GLTFLoader.js\");\nconst ColladaLoader = require(\"./loaders/ColladaLoader.js\");\nconst objLoader = new OBJLoader();\nconst materialLoader = new MTLLoader();\nconst gltfLoader = new GLTFLoader();\nconst fbxLoader = new FBXLoader();\nconst daeLoader = new ColladaLoader();\nfunction loadObj(options, cb, promise) {\n  if (options === undefined) return console.error(\"Invalid options provided to loadObj()\");\n  options = utils._validate(options, Objects.prototype._defaults.loadObj);\n  let loader;\n  if (!options.type) {\n    options.type = 'mtl';\n  }\n  ;\n  //[jscastro] support other models\n  switch (options.type) {\n    case \"mtl\":\n      // TODO: Support formats other than OBJ/MTL\n      loader = objLoader;\n      break;\n    case \"gltf\":\n    case \"glb\":\n      // [jscastro] Support for GLTF/GLB\n      loader = gltfLoader;\n      break;\n    case \"fbx\":\n      loader = fbxLoader;\n      break;\n    case \"dae\":\n      loader = daeLoader;\n      break;\n  }\n  materialLoader.load(options.mtl, loadObject, () => null, error => {\n    console.warn(\"No material file found \" + error.stack);\n  });\n  function loadObject(materials) {\n    if (materials && options.type == \"mtl\") {\n      materials.preload();\n      loader.setMaterials(materials);\n    }\n    loader.load(options.obj, obj => {\n      //[jscastro] MTL/GLTF/FBX models have a different structure\n      let animations = [];\n      switch (options.type) {\n        case \"mtl\":\n          obj = obj.children[0];\n          break;\n        case \"gltf\":\n        case \"glb\":\n        case \"dae\":\n          animations = obj.animations;\n          obj = obj.scene;\n          break;\n        case \"fbx\":\n          animations = obj.animations;\n          break;\n      }\n      obj.animations = animations;\n      // [jscastro] options.rotation was wrongly used\n      const r = utils.types.rotation(options.rotation, [0, 0, 0]);\n      const s = utils.types.scale(options.scale, [1, 1, 1]);\n      obj.rotation.set(r[0], r[1], r[2]);\n      obj.scale.set(s[0], s[1], s[2]);\n      // [jscastro] normalize specular/metalness/shininess from meshes in FBX and GLB model as it would need 5 lights to illuminate them properly\n      if (options.normalize) {\n        normalizeSpecular(obj);\n      }\n      obj.name = \"model\";\n      let userScaleGroup = Objects.prototype._makeGroup(obj, options);\n      Objects.prototype._addMethods(userScaleGroup);\n      //[jscastro] calculate automatically the pivotal center of the object\n      userScaleGroup.setAnchor(options.anchor);\n      //[jscastro] override the center calculated if the object has adjustments\n      userScaleGroup.setCenter(options.adjustment);\n      //[jscastro] if the object is excluded from raycasting\n      userScaleGroup.raycasted = options.raycasted;\n      //[jscastro] return to cache\n      promise(userScaleGroup);\n      //[jscastro] then return to the client-side callback\n      cb(userScaleGroup);\n      //[jscastro] apply the fixed zoom scale if needed\n      userScaleGroup.setFixedZoom(options.mapScale);\n      //[jscastro] initialize the default animation to avoid issues with skeleton position\n      userScaleGroup.idle();\n    }, () => null, error => {\n      console.error(\"Could not load model file: \" + options.obj + \" \\n \" + error.stack);\n      promise(\"Error loading the model\");\n    });\n  }\n  ;\n\n  //[jscastro] some FBX/GLTF models have too much specular effects for mapbox\n  function normalizeSpecular(model) {\n    model.traverse(function (c) {\n      if (c.isMesh) {\n        //c.castShadow = true;\n        let specularColor;\n        if (c.material.type == 'MeshStandardMaterial') {\n          if (c.material.metalness) {\n            c.material.metalness *= 0.1;\n          }\n          if (c.material.glossiness) {\n            c.material.glossiness *= 0.25;\n          }\n          specularColor = new THREE.Color(12, 12, 12);\n        } else if (c.material.type == 'MeshPhongMaterial') {\n          c.material.shininess = 0.1;\n          specularColor = new THREE.Color(20, 20, 20);\n        }\n        if (c.material.specular && c.material.specular.isColor) {\n          c.material.specular = specularColor;\n        }\n        //c.material.needsUpdate = true;\n      }\n    });\n  }\n}\nmodule.exports = exports = loadObj;","map":{"version":3,"names":["utils","require","Objects","OBJLoader","MTLLoader","FBXLoader","GLTFLoader","ColladaLoader","objLoader","materialLoader","gltfLoader","fbxLoader","daeLoader","loadObj","options","cb","promise","undefined","console","error","_validate","prototype","_defaults","loader","type","load","mtl","loadObject","warn","stack","materials","preload","setMaterials","obj","animations","children","scene","r","types","rotation","s","scale","set","normalize","normalizeSpecular","name","userScaleGroup","_makeGroup","_addMethods","setAnchor","anchor","setCenter","adjustment","raycasted","setFixedZoom","mapScale","idle","model","traverse","c","isMesh","specularColor","material","metalness","glossiness","THREE","Color","shininess","specular","isColor","module","exports"],"sources":["/Users/mihailbaleev/Documents/GitHub/Lastochka_spraying/frontend/node_modules/threebox-plugin/src/objects/loadObj.js"],"sourcesContent":["/**\r\n * @author peterqliu / https://github.com/peterqliu\r\n * @author jscastro / https://github.com/jscastro76\r\n */\r\nconst utils = require(\"../utils/utils.js\");\r\nconst Objects = require('./objects.js');\r\nconst OBJLoader = require(\"./loaders/OBJLoader.js\");\r\nconst MTLLoader = require(\"./loaders/MTLLoader.js\");\r\nconst FBXLoader = require(\"./loaders/FBXLoader.js\");\r\nconst GLTFLoader = require(\"./loaders/GLTFLoader.js\");\r\nconst ColladaLoader = require(\"./loaders/ColladaLoader.js\");\r\nconst objLoader = new OBJLoader();\r\nconst materialLoader = new MTLLoader();\r\nconst gltfLoader = new GLTFLoader();\r\nconst fbxLoader = new FBXLoader();\r\nconst daeLoader = new ColladaLoader();\r\n\r\nfunction loadObj(options, cb, promise) {\r\n\r\n\tif (options === undefined) return console.error(\"Invalid options provided to loadObj()\");\r\n\toptions = utils._validate(options, Objects.prototype._defaults.loadObj);\r\n\r\n\tlet loader;\r\n\tif (!options.type) { options.type = 'mtl'; };\r\n\t//[jscastro] support other models\r\n\tswitch (options.type) {\r\n\t\tcase \"mtl\":\r\n\t\t\t// TODO: Support formats other than OBJ/MTL\r\n\t\t\tloader = objLoader;\r\n\t\t\tbreak;\r\n\t\tcase \"gltf\":\r\n\t\tcase \"glb\":\r\n\t\t\t// [jscastro] Support for GLTF/GLB\r\n\t\t\tloader = gltfLoader;\r\n\t\t\tbreak;\r\n\t\tcase \"fbx\":\r\n\t\t\tloader = fbxLoader;\r\n\t\t\tbreak;\r\n\t\tcase \"dae\":\r\n\t\t\tloader = daeLoader;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tmaterialLoader.load(options.mtl, loadObject, () => (null), error => {\r\n\t\tconsole.warn(\"No material file found \" + error.stack);\r\n\t});\r\n\r\n\tfunction loadObject(materials) {\r\n\r\n\t\tif (materials && options.type == \"mtl\") {\r\n\t\t\tmaterials.preload();\r\n\t\t\tloader.setMaterials(materials);\r\n\t\t}\r\n\r\n\t\tloader.load(options.obj, obj => {\r\n\r\n\t\t\t//[jscastro] MTL/GLTF/FBX models have a different structure\r\n\t\t\tlet animations = [];\r\n\t\t\tswitch (options.type) {\r\n\t\t\t\tcase \"mtl\":\r\n\t\t\t\t\tobj = obj.children[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"gltf\":\r\n\t\t\t\tcase \"glb\":\r\n\t\t\t\tcase \"dae\":\r\n\t\t\t\t\tanimations = obj.animations;\r\n\t\t\t\t\tobj = obj.scene;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"fbx\":\r\n\t\t\t\t\tanimations = obj.animations;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tobj.animations = animations;\r\n\t\t\t// [jscastro] options.rotation was wrongly used\r\n\t\t\tconst r = utils.types.rotation(options.rotation, [0, 0, 0]);\r\n\t\t\tconst s = utils.types.scale(options.scale, [1, 1, 1]);\r\n\t\t\tobj.rotation.set(r[0], r[1], r[2]);\r\n\t\t\tobj.scale.set(s[0], s[1], s[2]);\r\n\t\t\t// [jscastro] normalize specular/metalness/shininess from meshes in FBX and GLB model as it would need 5 lights to illuminate them properly\r\n\t\t\tif (options.normalize) { normalizeSpecular(obj); }\r\n\t\t\tobj.name = \"model\";\r\n\t\t\tlet userScaleGroup = Objects.prototype._makeGroup(obj, options);\r\n\t\t\tObjects.prototype._addMethods(userScaleGroup);\r\n\t\t\t//[jscastro] calculate automatically the pivotal center of the object\r\n\t\t\tuserScaleGroup.setAnchor(options.anchor);\r\n\t\t\t//[jscastro] override the center calculated if the object has adjustments\r\n\t\t\tuserScaleGroup.setCenter(options.adjustment);\r\n\t\t\t//[jscastro] if the object is excluded from raycasting\r\n\t\t\tuserScaleGroup.raycasted = options.raycasted;\r\n\t\t\t//[jscastro] return to cache\r\n\t\t\tpromise(userScaleGroup);\r\n\t\t\t//[jscastro] then return to the client-side callback\r\n\t\t\tcb(userScaleGroup);\r\n\t\t\t//[jscastro] apply the fixed zoom scale if needed\r\n\t\t\tuserScaleGroup.setFixedZoom(options.mapScale);\r\n\t\t\t//[jscastro] initialize the default animation to avoid issues with skeleton position\r\n\t\t\tuserScaleGroup.idle();\r\n\r\n\t\t}, () => (null), error => {\r\n\t\t\t\tconsole.error(\"Could not load model file: \" + options.obj + \" \\n \" + error.stack);\r\n\t\t\t\tpromise(\"Error loading the model\");\r\n\t\t});\r\n\r\n\t};\r\n\r\n\t//[jscastro] some FBX/GLTF models have too much specular effects for mapbox\r\n\tfunction normalizeSpecular(model) {\r\n\t\tmodel.traverse(function (c) {\r\n\r\n\t\t\tif (c.isMesh) {\r\n\t\t\t\t//c.castShadow = true;\r\n\t\t\t\tlet specularColor;\r\n\t\t\t\tif (c.material.type == 'MeshStandardMaterial') {\r\n\r\n\t\t\t\t\tif (c.material.metalness) { c.material.metalness *= 0.1; }\r\n\t\t\t\t\tif (c.material.glossiness) { c.material.glossiness *= 0.25; }\r\n\t\t\t\t\tspecularColor = new THREE.Color(12, 12, 12);\r\n\r\n\t\t\t\t} else if (c.material.type == 'MeshPhongMaterial') {\r\n\t\t\t\t\tc.material.shininess = 0.1;\r\n\t\t\t\t\tspecularColor = new THREE.Color(20, 20, 20);\r\n\t\t\t\t}\r\n\t\t\t\tif (c.material.specular && c.material.specular.isColor) {\r\n\t\t\t\t\tc.material.specular = specularColor;\r\n\t\t\t\t}\r\n\t\t\t\t//c.material.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = exports = loadObj;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}