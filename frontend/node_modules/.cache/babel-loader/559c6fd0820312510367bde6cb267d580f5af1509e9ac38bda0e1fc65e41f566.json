{"ast":null,"code":"var _jsxFileName = \"/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js\",\n  _s = $RefreshSig$();\nimport \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { MapManager } from \"./MapManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { update_modal_message } from \"../AppSlice\";\nimport { sprayManager } from \"./sprayManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Spraying = props => {\n  _s();\n  const [MapManager_obj, setMapManager] = useState(null);\n  const spray_manager = new sprayManager();\n  const [zone_settings, setZone] = useState({\n    culture: \"Зерно\",\n    start_pos: {\n      x: \"\",\n      y: \"\"\n    },\n    angle: 0,\n    line_spacing: 1,\n    is_return: true\n  });\n  const changeZone = (key, value) => {\n    let cur_zone = {\n      ...zone_settings\n    };\n    cur_zone[key] = value;\n    setZone(cur_zone);\n    if (key === \"angle\") {\n      MapManager_obj.rotatePolygon(value);\n    } else if (key === \"line_spacing\") {\n      MapManager_obj.changeLineSpacing(value);\n    } else if (key === \"is_return\") {\n      MapManager_obj.toggleRTL();\n    }\n  };\n  const [move_settings, setMove] = useState({\n    speed: 3,\n    alt: 5,\n    tank_capacity: 1,\n    liters_per_sec: 0.1,\n    mode: \"spray\"\n  });\n  const changeMove = (key, value) => {\n    let cur_move = {\n      ...move_settings\n    };\n    cur_move[key] = value;\n    setMove(cur_move);\n    if (key === \"alt\") {\n      MapManager_obj.changeAlt(value);\n    }\n  };\n  const [wheather_settings, setWheather] = useState({\n    temperature: 20,\n    wind_speed: 2,\n    humidity: 90,\n    adjuvants: false\n  });\n  const changeWheather = (key, value) => {\n    let cur_wheather = {\n      ...wheather_settings\n    };\n    cur_wheather[key] = value;\n    setWheather(cur_wheather);\n  };\n  const savePlan = () => {\n    console.log(zone_settings);\n    console.log(move_settings);\n  };\n  const [marker_active, setMarkerActive] = useState(\"unactive\");\n  const toggleMarkerActive = () => {\n    props.map_manager.toggleCursor();\n    if (marker_active === \"active\") {\n      setMarkerActive(\"unactive\");\n    } else {\n      setMarkerActive(\"active\");\n    }\n  };\n  useEffect(() => {\n    if (props.manager3D !== null) {\n      let manager = new MapManager(props.map, props.manager3D, props.update_modal_message);\n      setMapManager(manager);\n      props.map.on(\"mousemove\", e => {\n        if (manager.translate_cursor === true) {\n          let cur_zone = {\n            ...zone_settings\n          };\n          cur_zone.start_pos.x = e.lngLat.lng;\n          cur_zone.start_pos.y = e.lngLat.lat;\n          setZone(cur_zone);\n        }\n      });\n      props.map.on(\"click\", e => {\n        if (manager.translate_cursor === true) {\n          manager.setStartMarker([e.lngLat.lng, e.lngLat.lat]);\n          // toggleMarkerActive()\n        } else {\n          manager.setPolygon([e.lngLat.lng, e.lngLat.lat]);\n        }\n      });\n    }\n  }, [props.manager3D]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spraying\",\n    children: /*#__PURE__*/_jsxDEV(Settings, {\n      map_manager: MapManager_obj,\n      spray_manager: spray_manager,\n      zone_settings: zone_settings,\n      changeZone: changeZone,\n      move_settings: move_settings,\n      changeMove: changeMove,\n      wheather_settings: wheather_settings,\n      changeWheather: changeWheather,\n      savePlan: savePlan,\n      marker_active: marker_active,\n      toggleMarkerActive: toggleMarkerActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 12\n  }, this);\n};\n_s(Spraying, \"K2RjzyYD4HmFWZETB3cf+d6hX9k=\");\n_c = Spraying;\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    \"update_modal_message\": data => {\n      dispatch(update_modal_message(data));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying);\nvar _c;\n$RefreshReg$(_c, \"Spraying\");","map":{"version":3,"names":["Settings","MapManager","useEffect","useState","connect","update_modal_message","sprayManager","jsxDEV","_jsxDEV","Spraying","props","_s","MapManager_obj","setMapManager","spray_manager","zone_settings","setZone","culture","start_pos","x","y","angle","line_spacing","is_return","changeZone","key","value","cur_zone","rotatePolygon","changeLineSpacing","toggleRTL","move_settings","setMove","speed","alt","tank_capacity","liters_per_sec","mode","changeMove","cur_move","changeAlt","wheather_settings","setWheather","temperature","wind_speed","humidity","adjuvants","changeWheather","cur_wheather","savePlan","console","log","marker_active","setMarkerActive","toggleMarkerActive","map_manager","toggleCursor","manager3D","manager","map","on","e","translate_cursor","lngLat","lng","lat","setStartMarker","setPolygon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","mapDispatchToProps","dispatch","data","$RefreshReg$"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/src/Spraying/Spraying.js"],"sourcesContent":["import \"./Spraying.scss\";\nimport Settings from \"./Settings/Settings\";\nimport { MapManager } from \"./MapManager\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { update_modal_message } from \"../AppSlice\";\nimport { sprayManager } from \"./sprayManager\";\n\nconst Spraying = (props) => {\n    const [MapManager_obj, setMapManager] = useState(null)\n    const spray_manager = new sprayManager()\n\n    const [zone_settings, setZone] = useState({\n        culture: \"Зерно\",\n        start_pos: {x: \"\", y: \"\"},\n        angle: 0,\n        line_spacing: 1,\n        is_return: true\n    })\n    const changeZone = (key, value) => {\n        let cur_zone = {...zone_settings}\n        cur_zone[key] = value \n        setZone(cur_zone)\n        if (key === \"angle\"){\n            MapManager_obj.rotatePolygon(value)\n        }else if (key === \"line_spacing\"){\n            MapManager_obj.changeLineSpacing(value)\n        }else if (key === \"is_return\"){\n            MapManager_obj.toggleRTL()\n        }\n    }\n    const [move_settings, setMove] = useState({\n        speed: 3,\n        alt: 5,\n        tank_capacity: 1,\n        liters_per_sec: 0.1,\n        mode: \"spray\"\n    })\n    const changeMove = (key, value) => {\n        let cur_move = {...move_settings}\n        cur_move[key] = value \n        setMove(cur_move)\n        if (key === \"alt\"){\n            MapManager_obj.changeAlt(value)\n        }\n    }\n\n    const [wheather_settings, setWheather] = useState({\n        temperature: 20,\n        wind_speed: 2,\n        humidity: 90,\n        adjuvants: false\n    })\n    const changeWheather = (key, value) => {\n        let cur_wheather = {...wheather_settings}\n        cur_wheather[key] = value \n        setWheather(cur_wheather)\n    }\n\n    const savePlan = () => {\n        console.log(zone_settings)\n        console.log(move_settings)\n    }\n\n    const [marker_active, setMarkerActive] = useState(\"unactive\")\n    const toggleMarkerActive = () => {\n        props.map_manager.toggleCursor()\n        if (marker_active === \"active\"){\n            setMarkerActive(\"unactive\")\n        }else{\n            setMarkerActive(\"active\")\n        }\n    }\n    useEffect(() => {\n        if (props.manager3D !== null){\n            let manager = new MapManager(props.map, props.manager3D, props.update_modal_message)\n            setMapManager(manager)\n            props.map.on(\"mousemove\", (e) => {\n                if (manager.translate_cursor === true){\n                    let cur_zone = {...zone_settings}\n                    cur_zone.start_pos.x = e.lngLat.lng \n                    cur_zone.start_pos.y = e.lngLat.lat\n                    setZone(cur_zone)\n                }\n            })\n            props.map.on(\"click\", (e) => {\n                if (manager.translate_cursor === true){\n                    manager.setStartMarker([e.lngLat.lng, e.lngLat.lat])\n                    // toggleMarkerActive()\n                }else{\n                    manager.setPolygon([e.lngLat.lng, e.lngLat.lat])\n                }\n            })\n        }\n    }, [props.manager3D])\n\n    return <div className=\"spraying\">\n        <Settings \n            map_manager={MapManager_obj} \n            spray_manager={spray_manager} \n            zone_settings={zone_settings}\n            changeZone={changeZone}\n            move_settings={move_settings}\n            changeMove={changeMove}\n            wheather_settings={wheather_settings}\n            changeWheather={changeWheather}\n            savePlan={savePlan}\n            marker_active={marker_active}\n            toggleMarkerActive={toggleMarkerActive}\n        />\n    </div>\n}\nconst mapStateToProps = (state) => {return state}\nconst mapDispatchToProps = (dispatch) => { return{\n    \"update_modal_message\": (data) => {dispatch(update_modal_message(data))}\n}}\nexport default connect(mapStateToProps, mapDispatchToProps)(Spraying)"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,oBAAoB,QAAQ,aAAa;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMW,aAAa,GAAG,IAAIR,YAAY,CAAC,CAAC;EAExC,MAAM,CAACS,aAAa,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IACtCc,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE;MAACC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAC;IACzBC,KAAK,EAAE,CAAC;IACRC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IAC/B,IAAIC,QAAQ,GAAG;MAAC,GAAGZ;IAAa,CAAC;IACjCY,QAAQ,CAACF,GAAG,CAAC,GAAGC,KAAK;IACrBV,OAAO,CAACW,QAAQ,CAAC;IACjB,IAAIF,GAAG,KAAK,OAAO,EAAC;MAChBb,cAAc,CAACgB,aAAa,CAACF,KAAK,CAAC;IACvC,CAAC,MAAK,IAAID,GAAG,KAAK,cAAc,EAAC;MAC7Bb,cAAc,CAACiB,iBAAiB,CAACH,KAAK,CAAC;IAC3C,CAAC,MAAK,IAAID,GAAG,KAAK,WAAW,EAAC;MAC1Bb,cAAc,CAACkB,SAAS,CAAC,CAAC;IAC9B;EACJ,CAAC;EACD,MAAM,CAACC,aAAa,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC;IACtC8B,KAAK,EAAE,CAAC;IACRC,GAAG,EAAE,CAAC;IACNC,aAAa,EAAE,CAAC;IAChBC,cAAc,EAAE,GAAG;IACnBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGA,CAACb,GAAG,EAAEC,KAAK,KAAK;IAC/B,IAAIa,QAAQ,GAAG;MAAC,GAAGR;IAAa,CAAC;IACjCQ,QAAQ,CAACd,GAAG,CAAC,GAAGC,KAAK;IACrBM,OAAO,CAACO,QAAQ,CAAC;IACjB,IAAId,GAAG,KAAK,KAAK,EAAC;MACdb,cAAc,CAAC4B,SAAS,CAACd,KAAK,CAAC;IACnC;EACJ,CAAC;EAED,MAAM,CAACe,iBAAiB,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC;IAC9CwC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGA,CAACtB,GAAG,EAAEC,KAAK,KAAK;IACnC,IAAIsB,YAAY,GAAG;MAAC,GAAGP;IAAiB,CAAC;IACzCO,YAAY,CAACvB,GAAG,CAAC,GAAGC,KAAK;IACzBgB,WAAW,CAACM,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACnBC,OAAO,CAACC,GAAG,CAACpC,aAAa,CAAC;IAC1BmC,OAAO,CAACC,GAAG,CAACpB,aAAa,CAAC;EAC9B,CAAC;EAED,MAAM,CAACqB,aAAa,EAAEC,eAAe,CAAC,GAAGlD,QAAQ,CAAC,UAAU,CAAC;EAC7D,MAAMmD,kBAAkB,GAAGA,CAAA,KAAM;IAC7B5C,KAAK,CAAC6C,WAAW,CAACC,YAAY,CAAC,CAAC;IAChC,IAAIJ,aAAa,KAAK,QAAQ,EAAC;MAC3BC,eAAe,CAAC,UAAU,CAAC;IAC/B,CAAC,MAAI;MACDA,eAAe,CAAC,QAAQ,CAAC;IAC7B;EACJ,CAAC;EACDnD,SAAS,CAAC,MAAM;IACZ,IAAIQ,KAAK,CAAC+C,SAAS,KAAK,IAAI,EAAC;MACzB,IAAIC,OAAO,GAAG,IAAIzD,UAAU,CAACS,KAAK,CAACiD,GAAG,EAAEjD,KAAK,CAAC+C,SAAS,EAAE/C,KAAK,CAACL,oBAAoB,CAAC;MACpFQ,aAAa,CAAC6C,OAAO,CAAC;MACtBhD,KAAK,CAACiD,GAAG,CAACC,EAAE,CAAC,WAAW,EAAGC,CAAC,IAAK;QAC7B,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UAClC,IAAInC,QAAQ,GAAG;YAAC,GAAGZ;UAAa,CAAC;UACjCY,QAAQ,CAACT,SAAS,CAACC,CAAC,GAAG0C,CAAC,CAACE,MAAM,CAACC,GAAG;UACnCrC,QAAQ,CAACT,SAAS,CAACE,CAAC,GAAGyC,CAAC,CAACE,MAAM,CAACE,GAAG;UACnCjD,OAAO,CAACW,QAAQ,CAAC;QACrB;MACJ,CAAC,CAAC;MACFjB,KAAK,CAACiD,GAAG,CAACC,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;QACzB,IAAIH,OAAO,CAACI,gBAAgB,KAAK,IAAI,EAAC;UAClCJ,OAAO,CAACQ,cAAc,CAAC,CAACL,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;UACpD;QACJ,CAAC,MAAI;UACDP,OAAO,CAACS,UAAU,CAAC,CAACN,CAAC,CAACE,MAAM,CAACC,GAAG,EAAEH,CAAC,CAACE,MAAM,CAACE,GAAG,CAAC,CAAC;QACpD;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACvD,KAAK,CAAC+C,SAAS,CAAC,CAAC;EAErB,oBAAOjD,OAAA;IAAK4D,SAAS,EAAC,UAAU;IAAAC,QAAA,eAC5B7D,OAAA,CAACR,QAAQ;MACLuD,WAAW,EAAE3C,cAAe;MAC5BE,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA,aAAc;MAC7BS,UAAU,EAAEA,UAAW;MACvBO,aAAa,EAAEA,aAAc;MAC7BO,UAAU,EAAEA,UAAW;MACvBG,iBAAiB,EAAEA,iBAAkB;MACrCM,cAAc,EAAEA,cAAe;MAC/BE,QAAQ,EAAEA,QAAS;MACnBG,aAAa,EAAEA,aAAc;MAC7BE,kBAAkB,EAAEA;IAAmB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV,CAAC;AAAA9D,EAAA,CAvGKF,QAAQ;AAAAiE,EAAA,GAARjE,QAAQ;AAwGd,MAAMkE,eAAe,GAAIC,KAAK,IAAK;EAAC,OAAOA,KAAK;AAAA,CAAC;AACjD,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EAAE,OAAM;IAC7C,sBAAsB,EAAGC,IAAI,IAAK;MAACD,QAAQ,CAACzE,oBAAoB,CAAC0E,IAAI,CAAC,CAAC;IAAA;EAC3E,CAAC;AAAA,CAAC;AACF,eAAe3E,OAAO,CAACuE,eAAe,EAAEE,kBAAkB,CAAC,CAACpE,QAAQ,CAAC;AAAA,IAAAiE,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}