{"ast":null,"code":"const WORLD_SIZE = 1024000; //TILE_SIZE * 2000\nconst MERCATOR_A = 6378137.0; // 900913 projection property. (Deprecated) Replaced by EARTH_RADIUS\nconst FOV_ORTHO = 0.1 / 180 * Math.PI; //Mapbox doesn't accept 0 as FOV\nconst FOV = Math.atan(3 / 4); //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/main/src/geo/transform.js#L93\nconst EARTH_RADIUS = 6371008.8; //from Mapbox  https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L11\nconst EARTH_CIRCUMFERENCE_EQUATOR = 40075017; //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L117\n\nmodule.exports = exports = {\n  WORLD_SIZE: WORLD_SIZE,\n  PROJECTION_WORLD_SIZE: WORLD_SIZE / (EARTH_RADIUS * Math.PI * 2),\n  MERCATOR_A: EARTH_RADIUS,\n  DEG2RAD: Math.PI / 180,\n  RAD2DEG: 180 / Math.PI,\n  EARTH_RADIUS: EARTH_RADIUS,\n  EARTH_CIRCUMFERENCE: 2 * Math.PI * EARTH_RADIUS,\n  //40075000, // In meters\n  EARTH_CIRCUMFERENCE_EQUATOR: EARTH_CIRCUMFERENCE_EQUATOR,\n  FOV_ORTHO: FOV_ORTHO,\n  // closest to 0\n  FOV: FOV,\n  // Math.atan(3/4) radians. If this value is changed, FOV_DEGREES must be calculated\n  FOV_DEGREES: FOV * 180 / Math.PI,\n  // Math.atan(3/4) in degrees\n  TILE_SIZE: 512\n};","map":{"version":3,"names":["WORLD_SIZE","MERCATOR_A","FOV_ORTHO","Math","PI","FOV","atan","EARTH_RADIUS","EARTH_CIRCUMFERENCE_EQUATOR","module","exports","PROJECTION_WORLD_SIZE","DEG2RAD","RAD2DEG","EARTH_CIRCUMFERENCE","FOV_DEGREES","TILE_SIZE"],"sources":["/Users/mihailbaleev/Documents/GitHub/lastochka_spraying/node_modules/threebox-plugin/src/utils/constants.js"],"sourcesContent":["const WORLD_SIZE = 1024000; //TILE_SIZE * 2000\r\nconst MERCATOR_A = 6378137.0; // 900913 projection property. (Deprecated) Replaced by EARTH_RADIUS\r\nconst FOV_ORTHO = 0.1 / 180 * Math.PI; //Mapbox doesn't accept 0 as FOV\r\nconst FOV = Math.atan(3 / 4); //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/main/src/geo/transform.js#L93\r\nconst EARTH_RADIUS = 6371008.8; //from Mapbox  https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L11\r\nconst EARTH_CIRCUMFERENCE_EQUATOR = 40075017 //from Mapbox https://github.com/mapbox/mapbox-gl-js/blob/0063cbd10a97218fb6a0f64c99bf18609b918f4c/src/geo/lng_lat.js#L117\r\n\r\nmodule.exports = exports = {\r\n    WORLD_SIZE: WORLD_SIZE,\r\n    PROJECTION_WORLD_SIZE: WORLD_SIZE / (EARTH_RADIUS * Math.PI * 2),\r\n    MERCATOR_A: EARTH_RADIUS, \r\n    DEG2RAD: Math.PI / 180,\r\n    RAD2DEG: 180 / Math.PI,\r\n    EARTH_RADIUS: EARTH_RADIUS,\r\n    EARTH_CIRCUMFERENCE: 2 * Math.PI * EARTH_RADIUS, //40075000, // In meters\r\n    EARTH_CIRCUMFERENCE_EQUATOR: EARTH_CIRCUMFERENCE_EQUATOR, \r\n    FOV_ORTHO: FOV_ORTHO, // closest to 0\r\n    FOV: FOV, // Math.atan(3/4) radians. If this value is changed, FOV_DEGREES must be calculated\r\n    FOV_DEGREES: FOV * 180 / Math.PI, // Math.atan(3/4) in degrees\r\n    TILE_SIZE: 512\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,OAAO,CAAC,CAAC;AAC5B,MAAMC,UAAU,GAAG,SAAS,CAAC,CAAC;AAC9B,MAAMC,SAAS,GAAG,GAAG,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;AACvC,MAAMC,GAAG,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9B,MAAMC,YAAY,GAAG,SAAS,CAAC,CAAC;AAChC,MAAMC,2BAA2B,GAAG,QAAQ,EAAC;;AAE7CC,MAAM,CAACC,OAAO,GAAGA,OAAO,GAAG;EACvBV,UAAU,EAAEA,UAAU;EACtBW,qBAAqB,EAAEX,UAAU,IAAIO,YAAY,GAAGJ,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;EAChEH,UAAU,EAAEM,YAAY;EACxBK,OAAO,EAAET,IAAI,CAACC,EAAE,GAAG,GAAG;EACtBS,OAAO,EAAE,GAAG,GAAGV,IAAI,CAACC,EAAE;EACtBG,YAAY,EAAEA,YAAY;EAC1BO,mBAAmB,EAAE,CAAC,GAAGX,IAAI,CAACC,EAAE,GAAGG,YAAY;EAAE;EACjDC,2BAA2B,EAAEA,2BAA2B;EACxDN,SAAS,EAAEA,SAAS;EAAE;EACtBG,GAAG,EAAEA,GAAG;EAAE;EACVU,WAAW,EAAEV,GAAG,GAAG,GAAG,GAAGF,IAAI,CAACC,EAAE;EAAE;EAClCY,SAAS,EAAE;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}